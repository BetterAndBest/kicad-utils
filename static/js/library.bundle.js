/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 312);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var global    = __webpack_require__(2)
  , core      = __webpack_require__(24)
  , hide      = __webpack_require__(11)
  , redefine  = __webpack_require__(12)
  , ctx       = __webpack_require__(25)
  , PROTOTYPE = 'prototype';

var $export = function(type, name, source){
  var IS_FORCED = type & $export.F
    , IS_GLOBAL = type & $export.G
    , IS_STATIC = type & $export.S
    , IS_PROTO  = type & $export.P
    , IS_BIND   = type & $export.B
    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
    , key, own, out, exp;
  if(IS_GLOBAL)source = name;
  for(key in source){
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if(target)redefine(target, key, out, type & $export.U);
    // export
    if(exports[key] != out)hide(exports, key, exp);
    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library` 
module.exports = $export;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(4);
module.exports = function(it){
  if(!isObject(it))throw TypeError(it + ' is not an object!');
  return it;
};

/***/ }),
/* 2 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = function(exec){
  try {
    return !!exec();
  } catch(e){
    return true;
  }
};

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = function(it){
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var store      = __webpack_require__(50)('wks')
  , uid        = __webpack_require__(32)
  , Symbol     = __webpack_require__(2).Symbol
  , USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function(name){
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(3)(function(){
  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
});

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var anObject       = __webpack_require__(1)
  , IE8_DOM_DEFINE = __webpack_require__(87)
  , toPrimitive    = __webpack_require__(21)
  , dP             = Object.defineProperty;

exports.f = __webpack_require__(6) ? Object.defineProperty : function defineProperty(O, P, Attributes){
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if(IE8_DOM_DEFINE)try {
    return dP(O, P, Attributes);
  } catch(e){ /* empty */ }
  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
  if('value' in Attributes)O[P] = Attributes.value;
  return O;
};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(30)
  , min       = Math.min;
module.exports = function(it){
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(19);
module.exports = function(it){
  return Object(defined(it));
};

/***/ }),
/* 10 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function(it, key){
  return hasOwnProperty.call(it, key);
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var dP         = __webpack_require__(7)
  , createDesc = __webpack_require__(28);
module.exports = __webpack_require__(6) ? function(object, key, value){
  return dP.f(object, key, createDesc(1, value));
} : function(object, key, value){
  object[key] = value;
  return object;
};

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var global    = __webpack_require__(2)
  , hide      = __webpack_require__(11)
  , has       = __webpack_require__(10)
  , SRC       = __webpack_require__(32)('src')
  , TO_STRING = 'toString'
  , $toString = Function[TO_STRING]
  , TPL       = ('' + $toString).split(TO_STRING);

__webpack_require__(24).inspectSource = function(it){
  return $toString.call(it);
};

(module.exports = function(O, key, val, safe){
  var isFunction = typeof val == 'function';
  if(isFunction)has(val, 'name') || hide(val, 'name', key);
  if(O[key] === val)return;
  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if(O === global){
    O[key] = val;
  } else {
    if(!safe){
      delete O[key];
      hide(O, key, val);
    } else {
      if(O[key])O[key] = val;
      else hide(O, key, val);
    }
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString(){
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = function(it){
  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
  return it;
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(46)
  , defined = __webpack_require__(19);
module.exports = function(it){
  return IObject(defined(it));
};

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0)
  , fails   = __webpack_require__(3)
  , defined = __webpack_require__(19)
  , quot    = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function(string, tag, attribute, value) {
  var S  = String(defined(string))
    , p1 = '<' + tag;
  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function(NAME, exec){
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function(){
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var pIE            = __webpack_require__(47)
  , createDesc     = __webpack_require__(28)
  , toIObject      = __webpack_require__(14)
  , toPrimitive    = __webpack_require__(21)
  , has            = __webpack_require__(10)
  , IE8_DOM_DEFINE = __webpack_require__(87)
  , gOPD           = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(6) ? gOPD : function getOwnPropertyDescriptor(O, P){
  O = toIObject(O);
  P = toPrimitive(P, true);
  if(IE8_DOM_DEFINE)try {
    return gOPD(O, P);
  } catch(e){ /* empty */ }
  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
};

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has         = __webpack_require__(10)
  , toObject    = __webpack_require__(9)
  , IE_PROTO    = __webpack_require__(63)('IE_PROTO')
  , ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function(O){
  O = toObject(O);
  if(has(O, IE_PROTO))return O[IE_PROTO];
  if(typeof O.constructor == 'function' && O instanceof O.constructor){
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

/***/ }),
/* 18 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function(it){
  return toString.call(it).slice(8, -1);
};

/***/ }),
/* 19 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function(it){
  if(it == undefined)throw TypeError("Can't call method on  " + it);
  return it;
};

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(3);

module.exports = function(method, arg){
  return !!method && fails(function(){
    arg ? method.call(null, function(){}, 1) : method.call(null);
  });
};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(4);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function(it, S){
  if(!isObject(it))return it;
  var fn, val;
  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(0)
  , core    = __webpack_require__(24)
  , fails   = __webpack_require__(3);
module.exports = function(KEY, exec){
  var fn  = (core.Object || {})[KEY] || Object[KEY]
    , exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx      = __webpack_require__(25)
  , IObject  = __webpack_require__(46)
  , toObject = __webpack_require__(9)
  , toLength = __webpack_require__(8)
  , asc      = __webpack_require__(211);
module.exports = function(TYPE, $create){
  var IS_MAP        = TYPE == 1
    , IS_FILTER     = TYPE == 2
    , IS_SOME       = TYPE == 3
    , IS_EVERY      = TYPE == 4
    , IS_FIND_INDEX = TYPE == 6
    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
    , create        = $create || asc;
  return function($this, callbackfn, that){
    var O      = toObject($this)
      , self   = IObject(O)
      , f      = ctx(callbackfn, that, 3)
      , length = toLength(self.length)
      , index  = 0
      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
      , val, res;
    for(;length > index; index++)if(NO_HOLES || index in self){
      val = self[index];
      res = f(val, index, O);
      if(TYPE){
        if(IS_MAP)result[index] = res;            // map
        else if(res)switch(TYPE){
          case 3: return true;                    // some
          case 5: return val;                     // find
          case 6: return index;                   // findIndex
          case 2: result.push(val);               // filter
        } else if(IS_EVERY)return false;          // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

/***/ }),
/* 24 */
/***/ (function(module, exports) {

var core = module.exports = {version: '2.4.0'};
if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(13);
module.exports = function(fn, that, length){
  aFunction(fn);
  if(that === undefined)return fn;
  switch(length){
    case 1: return function(a){
      return fn.call(that, a);
    };
    case 2: return function(a, b){
      return fn.call(that, a, b);
    };
    case 3: return function(a, b, c){
      return fn.call(that, a, b, c);
    };
  }
  return function(/* ...args */){
    return fn.apply(that, arguments);
  };
};

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

if(__webpack_require__(6)){
  var LIBRARY             = __webpack_require__(33)
    , global              = __webpack_require__(2)
    , fails               = __webpack_require__(3)
    , $export             = __webpack_require__(0)
    , $typed              = __webpack_require__(59)
    , $buffer             = __webpack_require__(86)
    , ctx                 = __webpack_require__(25)
    , anInstance          = __webpack_require__(39)
    , propertyDesc        = __webpack_require__(28)
    , hide                = __webpack_require__(11)
    , redefineAll         = __webpack_require__(40)
    , toInteger           = __webpack_require__(30)
    , toLength            = __webpack_require__(8)
    , toIndex             = __webpack_require__(35)
    , toPrimitive         = __webpack_require__(21)
    , has                 = __webpack_require__(10)
    , same                = __webpack_require__(93)
    , classof             = __webpack_require__(48)
    , isObject            = __webpack_require__(4)
    , toObject            = __webpack_require__(9)
    , isArrayIter         = __webpack_require__(78)
    , create              = __webpack_require__(36)
    , getPrototypeOf      = __webpack_require__(17)
    , gOPN                = __webpack_require__(37).f
    , getIterFn           = __webpack_require__(80)
    , uid                 = __webpack_require__(32)
    , wks                 = __webpack_require__(5)
    , createArrayMethod   = __webpack_require__(23)
    , createArrayIncludes = __webpack_require__(51)
    , speciesConstructor  = __webpack_require__(83)
    , ArrayIterators      = __webpack_require__(82)
    , Iterators           = __webpack_require__(43)
    , $iterDetect         = __webpack_require__(55)
    , setSpecies          = __webpack_require__(38)
    , arrayFill           = __webpack_require__(81)
    , arrayCopyWithin     = __webpack_require__(102)
    , $DP                 = __webpack_require__(7)
    , $GOPD               = __webpack_require__(16)
    , dP                  = $DP.f
    , gOPD                = $GOPD.f
    , RangeError          = global.RangeError
    , TypeError           = global.TypeError
    , Uint8Array          = global.Uint8Array
    , ARRAY_BUFFER        = 'ArrayBuffer'
    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
    , PROTOTYPE           = 'prototype'
    , ArrayProto          = Array[PROTOTYPE]
    , $ArrayBuffer        = $buffer.ArrayBuffer
    , $DataView           = $buffer.DataView
    , arrayForEach        = createArrayMethod(0)
    , arrayFilter         = createArrayMethod(2)
    , arraySome           = createArrayMethod(3)
    , arrayEvery          = createArrayMethod(4)
    , arrayFind           = createArrayMethod(5)
    , arrayFindIndex      = createArrayMethod(6)
    , arrayIncludes       = createArrayIncludes(true)
    , arrayIndexOf        = createArrayIncludes(false)
    , arrayValues         = ArrayIterators.values
    , arrayKeys           = ArrayIterators.keys
    , arrayEntries        = ArrayIterators.entries
    , arrayLastIndexOf    = ArrayProto.lastIndexOf
    , arrayReduce         = ArrayProto.reduce
    , arrayReduceRight    = ArrayProto.reduceRight
    , arrayJoin           = ArrayProto.join
    , arraySort           = ArrayProto.sort
    , arraySlice          = ArrayProto.slice
    , arrayToString       = ArrayProto.toString
    , arrayToLocaleString = ArrayProto.toLocaleString
    , ITERATOR            = wks('iterator')
    , TAG                 = wks('toStringTag')
    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
    , DEF_CONSTRUCTOR     = uid('def_constructor')
    , ALL_CONSTRUCTORS    = $typed.CONSTR
    , TYPED_ARRAY         = $typed.TYPED
    , VIEW                = $typed.VIEW
    , WRONG_LENGTH        = 'Wrong length!';

  var $map = createArrayMethod(1, function(O, length){
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function(){
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
    new Uint8Array(1).set({});
  });

  var strictToLength = function(it, SAME){
    if(it === undefined)throw TypeError(WRONG_LENGTH);
    var number = +it
      , length = toLength(it);
    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
    return length;
  };

  var toOffset = function(it, BYTES){
    var offset = toInteger(it);
    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function(it){
    if(isObject(it) && TYPED_ARRAY in it)return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function(C, length){
    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function(O, list){
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function(C, list){
    var index  = 0
      , length = list.length
      , result = allocate(C, length);
    while(length > index)result[index] = list[index++];
    return result;
  };

  var addGetter = function(it, key, internal){
    dP(it, key, {get: function(){ return this._d[internal]; }});
  };

  var $from = function from(source /*, mapfn, thisArg */){
    var O       = toObject(source)
      , aLen    = arguments.length
      , mapfn   = aLen > 1 ? arguments[1] : undefined
      , mapping = mapfn !== undefined
      , iterFn  = getIterFn(O)
      , i, length, values, result, step, iterator;
    if(iterFn != undefined && !isArrayIter(iterFn)){
      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
        values.push(step.value);
      } O = values;
    }
    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/*...items*/){
    var index  = 0
      , length = arguments.length
      , result = allocate(this, length);
    while(length > index)result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString(){
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /*, end */){
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /*, thisArg */){
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /*, thisArg */){
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /*, thisArg */){
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /*, thisArg */){
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /*, thisArg */){
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /*, fromIndex */){
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /*, fromIndex */){
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator){ // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /*, thisArg */){
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse(){
      var that   = this
        , length = validate(that).length
        , middle = Math.floor(length / 2)
        , index  = 0
        , value;
      while(index < middle){
        value         = that[index];
        that[index++] = that[--length];
        that[length]  = value;
      } return that;
    },
    some: function some(callbackfn /*, thisArg */){
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn){
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end){
      var O      = validate(this)
        , length = O.length
        , $begin = toIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end){
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /*, offset */){
    validate(this);
    var offset = toOffset(arguments[1], 1)
      , length = this.length
      , src    = toObject(arrayLike)
      , len    = toLength(src.length)
      , index  = 0;
    if(len + offset > length)throw RangeError(WRONG_LENGTH);
    while(index < len)this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries(){
      return arrayEntries.call(validate(this));
    },
    keys: function keys(){
      return arrayKeys.call(validate(this));
    },
    values: function values(){
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function(target, key){
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key){
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc){
    if(isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ){
      target[key] = desc.value;
      return target;
    } else return dP(target, key, desc);
  };

  if(!ALL_CONSTRUCTORS){
    $GOPD.f = $getDesc;
    $DP.f   = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty:           $setDesc
  });

  if(fails(function(){ arrayToString.call({}); })){
    arrayToString = arrayToLocaleString = function toString(){
      return arrayJoin.call(this);
    }
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice:          $slice,
    set:            $set,
    constructor:    function(){ /* noop */ },
    toString:       arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function(){ return this[TYPED_ARRAY]; }
  });

  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
    CLAMPED = !!CLAMPED;
    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
      , ISNT_UINT8 = NAME != 'Uint8Array'
      , GETTER     = 'get' + KEY
      , SETTER     = 'set' + KEY
      , TypedArray = global[NAME]
      , Base       = TypedArray || {}
      , TAC        = TypedArray && getPrototypeOf(TypedArray)
      , FORCED     = !TypedArray || !$typed.ABV
      , O          = {}
      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function(that, index){
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function(that, index, value){
      var data = that._d;
      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function(that, index){
      dP(that, index, {
        get: function(){
          return getter(this, index);
        },
        set: function(value){
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if(FORCED){
      TypedArray = wrapper(function(that, data, $offset, $length){
        anInstance(that, TypedArray, NAME, '_d');
        var index  = 0
          , offset = 0
          , buffer, byteLength, length, klass;
        if(!isObject(data)){
          length     = strictToLength(data, true)
          byteLength = length * BYTES;
          buffer     = new $ArrayBuffer(byteLength);
        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if($length === undefined){
            if($len % BYTES)throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if(TYPED_ARRAY in data){
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while(index < length)addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if(!$iterDetect(function(iter){
      // V8 works with iterators, but fails in many other cases
      // https://code.google.com/p/v8/issues/detail?id=4552
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)){
      TypedArray = wrapper(function(that, data, $offset, $length){
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
      , $iterator         = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
      dP(TypedArrayPrototype, TAG, {
        get: function(){ return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES,
      from: $from,
      of: $of
    });

    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});

    $export($export.P + $export.F * fails(function(){
      new TypedArray(1).slice();
    }), NAME, {slice: $slice});

    $export($export.P + $export.F * (fails(function(){
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
    }) || !fails(function(){
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, {toLocaleString: $toLocaleString});

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function(){ /* empty */ };

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var Map     = __webpack_require__(105)
  , $export = __webpack_require__(0)
  , shared  = __webpack_require__(50)('metadata')
  , store   = shared.store || (shared.store = new (__webpack_require__(108)));

var getOrCreateMetadataMap = function(target, targetKey, create){
  var targetMetadata = store.get(target);
  if(!targetMetadata){
    if(!create)return undefined;
    store.set(target, targetMetadata = new Map);
  }
  var keyMetadata = targetMetadata.get(targetKey);
  if(!keyMetadata){
    if(!create)return undefined;
    targetMetadata.set(targetKey, keyMetadata = new Map);
  } return keyMetadata;
};
var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
};
var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
};
var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
};
var ordinaryOwnMetadataKeys = function(target, targetKey){
  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
    , keys        = [];
  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
  return keys;
};
var toMetaKey = function(it){
  return it === undefined || typeof it == 'symbol' ? it : String(it);
};
var exp = function(O){
  $export($export.S, 'Reflect', O);
};

module.exports = {
  store: store,
  map: getOrCreateMetadataMap,
  has: ordinaryHasOwnMetadata,
  get: ordinaryGetOwnMetadata,
  set: ordinaryDefineOwnMetadata,
  keys: ordinaryOwnMetadataKeys,
  key: toMetaKey,
  exp: exp
};

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = function(bitmap, value){
  return {
    enumerable  : !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable    : !(bitmap & 4),
    value       : value
  };
};

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var META     = __webpack_require__(32)('meta')
  , isObject = __webpack_require__(4)
  , has      = __webpack_require__(10)
  , setDesc  = __webpack_require__(7).f
  , id       = 0;
var isExtensible = Object.isExtensible || function(){
  return true;
};
var FREEZE = !__webpack_require__(3)(function(){
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it){
  setDesc(it, META, {value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  }});
};
var fastKey = function(it, create){
  // return primitive with prefix
  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add metadata
    if(!create)return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function(it, create){
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return true;
    // not necessary to add metadata
    if(!create)return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function(it){
  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY:      META,
  NEED:     false,
  fastKey:  fastKey,
  getWeak:  getWeak,
  onFreeze: onFreeze
};

/***/ }),
/* 30 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil  = Math.ceil
  , floor = Math.floor;
module.exports = function(it){
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * This program source code file is part of kicad-utils
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * KiCAD internal unit:
 *	length: mil (1/1000 inch)
 *	angles: decidegree (1/10 degrees)
 */
function DECIDEG2RAD(deg) {
    return deg * Math.PI / 1800;
}
exports.DECIDEG2RAD = DECIDEG2RAD;
function RAD2DECIDEG(rad) {
    return rad * 1800 / Math.PI;
}
exports.RAD2DECIDEG = RAD2DECIDEG;
function NORMALIZE_ANGLE_POS(angle) {
    while (angle < 0) {
        angle += 3600;
    }while (angle >= 3600) {
        angle -= 3600;
    }return angle;
}
exports.NORMALIZE_ANGLE_POS = NORMALIZE_ANGLE_POS;
function AddAngles(angle1, angle2) {
    return NORMALIZE_ANGLE_POS(angle1 + angle2);
}
exports.AddAngles = AddAngles;
function ArcTangente(dy, dx) {
    if (dx == 0 && dy == 0) return 0;
    if (dy == 0) {
        if (dx >= 0) return 0;else return -1800;
    }
    if (dx == 0) {
        if (dy >= 0) return 900;else return -900;
    }
    if (dx == dy) {
        if (dx >= 0) return 450;else return -1800 + 450;
    }
    if (dx == -dy) {
        if (dx >= 0) return -450;else return 1800 - 450;
    }
    return RAD2DECIDEG(Math.atan2(dy, dx));
}
exports.ArcTangente = ArcTangente;
function EuclideanNorm(v) {
    if (v instanceof Size) {
        return Math.hypot(v.width, v.height);
    } else {
        return Math.hypot(v.x, v.y);
    }
}
exports.EuclideanNorm = EuclideanNorm;
function GetLineLength(p1, p2) {
    return Math.hypot(p1.x - p2.x, p1.y - p2.y);
}
exports.GetLineLength = GetLineLength;
function RotatePoint(p, angle) {
    angle = NORMALIZE_ANGLE_POS(angle);
    if (angle === 0) {
        return p;
    }
    if (angle === 900) {
        var _ref = [p.y, -p.x];
        p.x = _ref[0];
        p.y = _ref[1];
    } else if (angle == 1800) {
        var _ref2 = [-p.x, -p.y];
        p.x = _ref2[0];
        p.y = _ref2[1];
    } else if (angle == 2700) {
        var _ref3 = [-p.y, p.x];
        p.x = _ref3[0];
        p.y = _ref3[1];
    } else {
        var fangle = DECIDEG2RAD(angle);
        var sinus = Math.sin(fangle);
        var cosinus = Math.cos(fangle);
        var rx = p.y * sinus + p.x * cosinus;
        var ry = p.y * cosinus - p.x * sinus;
        p.x = rx;
        p.y = ry;
    }
    return p;
}
exports.RotatePoint = RotatePoint;
function RotatePointWithCenter(p, center, angle) {
    var t = {
        x: p.x - center.x,
        y: p.y - center.y
    };
    RotatePoint(t, angle);
    p.x = t.x + center.x;
    p.y = t.y + center.y;
    return p;
}
exports.RotatePointWithCenter = RotatePointWithCenter;
function MM2MIL(mm) {
    return mm / 0.0254;
}
exports.MM2MIL = MM2MIL;
function MIL2MM(mil) {
    return mil * 0.0254;
}
exports.MIL2MM = MIL2MM;
function ReadDelimitedText(s) {
    var match = s.match(/"((?:\\"|[^"])+)"/);
    if (!match) return "";
    var inner = match[1];
    return inner.replace(/\\([\\"])/g, function (_, c) {
        return c;
    });
}
exports.ReadDelimitedText = ReadDelimitedText;
function Clamp(lower, value, upper) {
    if (value < lower) return lower;
    if (upper < value) return upper;
    return value;
}
exports.Clamp = Clamp;

var Transform = function () {
    function Transform() {
        var x1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
        var x2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var y1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var y2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;
        var tx = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
        var ty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

        _classCallCheck(this, Transform);

        this.x1 = x1;
        this.x2 = x2;
        this.y1 = y1;
        this.y2 = y2;
        this.tx = tx;
        this.ty = ty;
    }
    // default in KiCAD


    _createClass(Transform, [{
        key: "clone",
        value: function clone() {
            return new Transform(this.x1, this.x2, this.y1, this.y2, this.tx, this.ty);
        }
    }, {
        key: "translate",
        value: function translate(tx, ty) {
            return Transform.translate(tx, ty).multiply(this);
        }
    }, {
        key: "scale",
        value: function scale(sx, sy) {
            // only supports same xy ratio
            if (Math.abs(sx) !== Math.abs(sy)) {
                throw "invalid scale ratio";
            }
            return Transform.scale(sx, sy).multiply(this);
        }
    }, {
        key: "rotate",
        value: function rotate(radian) {
            return Transform.rotate(radian).multiply(this);
        }
    }, {
        key: "multiply",
        value: function multiply(b) {
            var a = this;
            return new Transform(a.x1 * b.x1 + a.x2 * b.y1, a.x1 * b.x2 + a.x2 * b.y2, a.y1 * b.x1 + a.y2 * b.y1, a.y1 * b.x2 + a.y2 * b.y2, a.tx * b.x1 + a.ty * b.y1 + b.tx, a.tx * b.x2 + a.ty * b.y2 + b.ty);
        }
    }, {
        key: "transformCoordinate",
        value: function transformCoordinate(p) {
            var x = this.x1 * p.x + this.y1 * p.y + this.tx;
            var y = this.x2 * p.x + this.y2 * p.y + this.ty;
            return new Point(x, y);
        }
    }, {
        key: "transformScalar",
        value: function transformScalar(n) {
            return (Math.abs(n * this.x1) + Math.abs(n * this.x2) + Math.abs(n * this.y1) + Math.abs(n * this.y2)) / 2;
        }
    }, {
        key: "mapAngles",
        value: function mapAngles(angle1, angle2) {
            var angle = void 0,
                delta = void 0;
            var x = void 0,
                y = void 0,
                t = void 0;
            var swap = 0;
            delta = angle2 - angle1;
            if (delta >= 1800) {
                angle1 -= 1;
                angle2 += 1;
            }
            x = Math.cos(DECIDEG2RAD(angle1));
            y = Math.sin(DECIDEG2RAD(angle1));
            t = x * this.x1 + y * this.y1;
            y = x * this.x2 + y * this.y2;
            x = t;
            angle1 = Math.round(RAD2DECIDEG(Math.atan2(y, x)));
            x = Math.cos(DECIDEG2RAD(angle2));
            y = Math.sin(DECIDEG2RAD(angle2));
            t = x * this.x1 + y * this.y1;
            y = x * this.x2 + y * this.y2;
            x = t;
            angle2 = Math.round(RAD2DECIDEG(Math.atan2(y, x)));
            angle1 = NORMALIZE_ANGLE_POS(angle1);
            angle2 = NORMALIZE_ANGLE_POS(angle2);
            if (angle2 < angle1) angle2 += 3600;
            if (angle2 - angle1 > 1800) {
                angle = angle1;
                angle1 = angle2;
                angle2 = angle;
                angle1 = NORMALIZE_ANGLE_POS(angle1);
                angle2 = NORMALIZE_ANGLE_POS(angle2);
                if (angle2 < angle1) angle2 += 3600;
                swap = 1;
            }
            if (delta >= 1800) {
                angle1 += 1;
                angle2 -= 1;
            }
            return [angle1, angle2, swap];
        }
    }], [{
        key: "default",
        value: function _default() {
            return new Transform(1, 0, 0, -1, 0, 0);
        }
    }, {
        key: "identify",
        value: function identify() {
            return new Transform(1, 0, 0, 1, 0, 0);
        }
    }, {
        key: "translate",
        value: function translate(tx, ty) {
            return new Transform(1, 0, 0, 1, tx, ty);
        }
    }, {
        key: "scale",
        value: function scale(sx, sy) {
            return new Transform(sx, 0, 0, sy, 0, 0);
        }
    }, {
        key: "rotate",
        value: function rotate(radian) {
            var s = Math.sin(radian);
            var c = Math.cos(radian);
            return new Transform(c, s, -s, c, 0, 0);
        }
    }]);

    return Transform;
}();

exports.Transform = Transform;

var Point = function () {
    function Point() {
        var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

        _classCallCheck(this, Point);

        this.x = x;
        this.y = y;
    }

    _createClass(Point, null, [{
        key: "from",
        value: function from(p) {
            return new Point(p.x, p.y);
        }
    }, {
        key: "add",
        value: function add(p1, p2) {
            return {
                x: p1.x + p2.x,
                y: p1.y + p2.y
            };
        }
    }, {
        key: "sub",
        value: function sub(p1, p2) {
            return {
                x: p1.x - p2.x,
                y: p1.y - p2.y
            };
        }
    }, {
        key: "isZero",
        value: function isZero(p) {
            return p.x === 0 && p.y === 0;
        }
    }]);

    return Point;
}();

exports.Point = Point;

var Rect = function () {
    function Rect(pos1x, pos1y, pos2x, pos2y) {
        _classCallCheck(this, Rect);

        this.pos1 = new Point(pos1x, pos1y);
        this.pos2 = new Point(pos2x, pos2y);
    }

    _createClass(Rect, [{
        key: "getWidth",
        value: function getWidth() {
            return this.pos2.x - this.pos1.x;
        }
    }, {
        key: "getHeight",
        value: function getHeight() {
            return this.pos2.y - this.pos1.y;
        }
    }, {
        key: "normalize",
        value: function normalize() {
            var _ref4 = [Math.min(this.pos1.x, this.pos2.x), Math.min(this.pos1.y, this.pos2.y), Math.max(this.pos1.x, this.pos2.x), Math.max(this.pos1.y, this.pos2.y)];
            this.pos1.x = _ref4[0];
            this.pos1.y = _ref4[1];
            this.pos2.x = _ref4[2];
            this.pos2.y = _ref4[3];

            return this;
        }
    }, {
        key: "merge",
        value: function merge(o) {
            return new Rect(Math.min(this.pos1.x, o.pos1.x, this.pos2.x, o.pos2.x), Math.min(this.pos1.y, o.pos1.y, this.pos2.y, o.pos2.y), Math.max(this.pos1.x, o.pos1.x, this.pos2.x, o.pos2.x), Math.max(this.pos1.y, o.pos1.y, this.pos2.y, o.pos2.y));
        }
    }, {
        key: "inflate",
        value: function inflate(n) {
            this.pos1.x -= n;
            this.pos1.y -= n;
            this.pos2.x += n;
            this.pos2.y += n;
            return this;
        }
    }, {
        key: "width",
        get: function get() {
            return this.getWidth();
        }
    }, {
        key: "height",
        get: function get() {
            return this.getHeight();
        }
    }]);

    return Rect;
}();

exports.Rect = Rect;

var Color = function () {
    // max 255 int
    function Color(r, g, b) {
        var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.0;

        _classCallCheck(this, Color);

        this.r = r;
        this.g = g;
        this.b = b;
        this.a = a;
    }

    _createClass(Color, [{
        key: "is",
        value: function is(c) {
            return this.r === c.r && this.g === c.g && this.b === c.b && this.a === c.a;
        }
    }, {
        key: "toCSSColor",
        value: function toCSSColor() {
            return "rgba(" + this.r + ", " + this.g + ", " + this.b + ", " + this.a + ")";
        }
    }, {
        key: "mix",
        value: function mix(c) {
            return new Color(this.r | c.r, this.g | c.g, this.b | c.b, this.a * c.a);
        }
    }]);

    return Color;
}();
// common/colors.cpp 


Color.BLACK = new Color(0, 0, 0);
Color.DARKDARKGRAY = new Color(72, 72, 72);
Color.DARKGRAY = new Color(132, 132, 132);
Color.LIGHTGRAY = new Color(194, 194, 194);
Color.WHITE = new Color(255, 255, 255);
Color.LIGHTYELLOW = new Color(255, 255, 194);
Color.DARKBLUE = new Color(0, 0, 72);
Color.DARKGREEN = new Color(0, 72, 0);
Color.DARKCYAN = new Color(0, 72, 72);
Color.DARKRED = new Color(72, 0, 0);
Color.DARKMAGENTA = new Color(72, 0, 72);
Color.DARKBROWN = new Color(72, 72, 0);
Color.BLUE = new Color(0, 0, 132);
Color.GREEN = new Color(0, 132, 0);
Color.CYAN = new Color(0, 132, 132);
Color.RED = new Color(132, 0, 0);
Color.MAGENTA = new Color(132, 0, 132);
Color.BROWN = new Color(132, 132, 0);
Color.LIGHTBLUE = new Color(0, 0, 194);
Color.LIGHTGREEN = new Color(0, 194, 0);
Color.LIGHTCYAN = new Color(0, 194, 194);
Color.LIGHTRED = new Color(194, 0, 0);
Color.LIGHTMAGENTA = new Color(194, 0, 194);
Color.YELLOW = new Color(194, 194, 0);
Color.PUREBLUE = new Color(0, 0, 255);
Color.PUREGREEN = new Color(0, 255, 0);
Color.PURECYAN = new Color(0, 255, 255);
Color.PURERED = new Color(255, 0, 0);
Color.PUREMAGENTA = new Color(255, 0, 255);
Color.PUREYELLOW = new Color(255, 255, 0);
exports.Color = Color;

var ColorDefinition = function (_Color) {
    _inherits(ColorDefinition, _Color);

    function ColorDefinition(c, name, light) {
        _classCallCheck(this, ColorDefinition);

        var _this = _possibleConstructorReturn(this, (ColorDefinition.__proto__ || Object.getPrototypeOf(ColorDefinition)).call(this, c.r, c.g, c.b));

        _this.name = name;
        _this.light = light;
        return _this;
    }

    return ColorDefinition;
}(Color);

ColorDefinition.BLACK = new ColorDefinition(Color.BLACK, "Black", Color.DARKDARKGRAY);
ColorDefinition.DARKDARKGRAY = new ColorDefinition(Color.DARKDARKGRAY, "Gray 1", Color.DARKGRAY);
ColorDefinition.DARKGRAY = new ColorDefinition(Color.DARKGRAY, "Gray 2", Color.LIGHTGRAY);
ColorDefinition.LIGHTGRAY = new ColorDefinition(Color.LIGHTGRAY, "Gray 3", Color.WHITE);
ColorDefinition.WHITE = new ColorDefinition(Color.WHITE, "White", Color.WHITE);
ColorDefinition.LIGHTYELLOW = new ColorDefinition(Color.LIGHTYELLOW, "L.Yellow", Color.WHITE);
ColorDefinition.DARKBLUE = new ColorDefinition(Color.DARKBLUE, "Blue 1", Color.BLUE);
ColorDefinition.DARKGREEN = new ColorDefinition(Color.DARKGREEN, "Green 1", Color.GREEN);
ColorDefinition.DARKCYAN = new ColorDefinition(Color.DARKCYAN, "Cyan 1", Color.CYAN);
ColorDefinition.DARKRED = new ColorDefinition(Color.DARKRED, "Red 1", Color.RED);
ColorDefinition.DARKMAGENTA = new ColorDefinition(Color.DARKMAGENTA, "Magenta 1", Color.MAGENTA);
ColorDefinition.DARKBROWN = new ColorDefinition(Color.DARKBROWN, "Brown 1", Color.BROWN);
ColorDefinition.BLUE = new ColorDefinition(Color.BLUE, "Blue 2", Color.LIGHTBLUE);
ColorDefinition.GREEN = new ColorDefinition(Color.GREEN, "Green 2", Color.LIGHTGREEN);
ColorDefinition.CYAN = new ColorDefinition(Color.CYAN, "Cyan 2", Color.LIGHTCYAN);
ColorDefinition.RED = new ColorDefinition(Color.RED, "Red 2", Color.LIGHTRED);
ColorDefinition.MAGENTA = new ColorDefinition(Color.MAGENTA, "Magenta 2", Color.LIGHTMAGENTA);
ColorDefinition.BROWN = new ColorDefinition(Color.BROWN, "Brown 2", Color.YELLOW);
ColorDefinition.LIGHTBLUE = new ColorDefinition(Color.LIGHTBLUE, "Blue 3", Color.PUREBLUE);
ColorDefinition.LIGHTGREEN = new ColorDefinition(Color.LIGHTGREEN, "Green 3", Color.PUREGREEN);
ColorDefinition.LIGHTCYAN = new ColorDefinition(Color.LIGHTCYAN, "Cyan 3", Color.PURECYAN);
ColorDefinition.LIGHTRED = new ColorDefinition(Color.LIGHTRED, "Red 3", Color.PURERED);
ColorDefinition.LIGHTMAGENTA = new ColorDefinition(Color.LIGHTMAGENTA, "Magenta 3", Color.PUREMAGENTA);
ColorDefinition.YELLOW = new ColorDefinition(Color.YELLOW, "Yellow 3", Color.PUREYELLOW);
ColorDefinition.PUREBLUE = new ColorDefinition(Color.PUREBLUE, "Blue 4", Color.WHITE);
ColorDefinition.PUREGREEN = new ColorDefinition(Color.PUREGREEN, "Green 4", Color.WHITE);
ColorDefinition.PURECYAN = new ColorDefinition(Color.PURECYAN, "Cyan 4", Color.WHITE);
ColorDefinition.PURERED = new ColorDefinition(Color.PURERED, "Red 4", Color.WHITE);
ColorDefinition.PUREMAGENTA = new ColorDefinition(Color.PUREMAGENTA, "Magenta 4", Color.WHITE);
ColorDefinition.PUREYELLOW = new ColorDefinition(Color.PUREYELLOW, "Yellow 4", Color.WHITE);
exports.ColorDefinition = ColorDefinition;
var Fill;
(function (Fill) {
    Fill["NO_FILL"] = "N";
    Fill["FILLED_SHAPE"] = "F";
    Fill["FILLED_WITH_BG_BODYCOLOR"] = "f";
})(Fill = exports.Fill || (exports.Fill = {}));
var TextHjustify;
(function (TextHjustify) {
    TextHjustify["LEFT"] = "L";
    TextHjustify["CENTER"] = "C";
    TextHjustify["RIGHT"] = "R";
})(TextHjustify = exports.TextHjustify || (exports.TextHjustify = {}));
var TextVjustify;
(function (TextVjustify) {
    TextVjustify["TOP"] = "T";
    TextVjustify["CENTER"] = "C";
    TextVjustify["BOTTOM"] = "B";
})(TextVjustify = exports.TextVjustify || (exports.TextVjustify = {}));
var PinOrientation;
(function (PinOrientation) {
    PinOrientation["RIGHT"] = "R";
    PinOrientation["LEFT"] = "L";
    PinOrientation["UP"] = "U";
    PinOrientation["DOWN"] = "D";
})(PinOrientation = exports.PinOrientation || (exports.PinOrientation = {}));
var TextAngle;
(function (TextAngle) {
    TextAngle[TextAngle["HORIZ"] = 0] = "HORIZ";
    TextAngle[TextAngle["VERT"] = 900] = "VERT";
})(TextAngle = exports.TextAngle || (exports.TextAngle = {}));
var PinType;
(function (PinType) {
    PinType["INPUT"] = "I";
    PinType["OUTPUT"] = "O";
    PinType["BIDI"] = "B";
    PinType["TRISTATE"] = "T";
    PinType["PASSIVE"] = "P";
    PinType["UNSPECIFIED"] = "U";
    PinType["POWER_IN"] = "W";
    PinType["POWER_OUT"] = "w";
    PinType["OPENCOLLECTOR"] = "C";
    PinType["OPENEMITTER"] = "E";
    PinType["NC"] = "N";
})(PinType = exports.PinType || (exports.PinType = {}));
;
var PinAttribute;
(function (PinAttribute) {
    PinAttribute["NONE"] = "~";
    PinAttribute["INVERTED"] = "I";
    PinAttribute["CLOCK"] = "C";
    PinAttribute["LOWLEVEL_IN"] = "L";
    PinAttribute["LOWLEVEL_OUT"] = "V";
    PinAttribute["FALLING_EDGE"] = "F";
    PinAttribute["NONLOGIC"] = "X";
    PinAttribute["INVISIBLE"] = "N";
})(PinAttribute = exports.PinAttribute || (exports.PinAttribute = {}));
var SheetSide;
(function (SheetSide) {
    SheetSide["RIGHT"] = "R";
    SheetSide["TOP"] = "T";
    SheetSide["BOTTOM"] = "B";
    SheetSide["LEFT"] = "L";
})(SheetSide = exports.SheetSide || (exports.SheetSide = {}));
var Net;
(function (Net) {
    Net["INPUT"] = "I";
    Net["OUTPUT"] = "O";
    Net["BIDI"] = "B";
    Net["TRISTATE"] = "T";
    Net["UNSPECIFIED"] = "U";
})(Net = exports.Net || (exports.Net = {}));

var Size = function () {
    function Size(width, height) {
        _classCallCheck(this, Size);

        this.width = width;
        this.height = height;
    }

    _createClass(Size, null, [{
        key: "from",
        value: function from(s) {
            return new Size(s.width, s.height);
        }
    }]);

    return Size;
}();

exports.Size = Size;

var PageInfo = function () {
    function PageInfo(pageType) {
        var portrait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var width = arguments[2];
        var height = arguments[3];

        _classCallCheck(this, PageInfo);

        this.portrait = false;
        this.width = width || 0;
        this.height = height || 0;
        if (!width && !height) {
            this.setPageType(pageType);
        } else {
            this.pageType = pageType;
        }
        this.setPortrait(portrait);
    }

    _createClass(PageInfo, [{
        key: "setPageType",
        value: function setPageType(pageType) {
            var page = PageInfo.PAGE_TYPES.find(function (i) {
                return i.pageType === pageType;
            });
            Object.assign(this, page);
            this.pageType = pageType;
        }
    }, {
        key: "setPortrait",
        value: function setPortrait(portrait) {
            if (this.portrait != portrait) {
                var _ref5 = [this.height, this.width];
                this.width = _ref5[0];
                this.height = _ref5[1];

                this.portrait = portrait;
            }
        }
    }]);

    return PageInfo;
}();

PageInfo.A4 = new PageInfo("A4", false, MM2MIL(297), MM2MIL(210));
PageInfo.A3 = new PageInfo("A3", false, MM2MIL(420), MM2MIL(297));
PageInfo.A2 = new PageInfo("A2", false, MM2MIL(594), MM2MIL(420));
PageInfo.A1 = new PageInfo("A1", false, MM2MIL(841), MM2MIL(594));
PageInfo.A0 = new PageInfo("A0", false, MM2MIL(1189), MM2MIL(841));
PageInfo.A = new PageInfo("A", false, 11000, 8500);
PageInfo.B = new PageInfo("B", false, 17000, 11000);
PageInfo.C = new PageInfo("C", false, 22000, 17000);
PageInfo.D = new PageInfo("D", false, 34000, 22000);
PageInfo.E = new PageInfo("E", false, 44000, 34000);
PageInfo.GERBER = new PageInfo("GERBER", false, 32000, 32000);
PageInfo.User = new PageInfo("User", false, 17000, 11000);
PageInfo.USLetter = new PageInfo("USLetter", false, 11000, 8500);
PageInfo.USLegal = new PageInfo("USLegal", false, 14000, 8500);
PageInfo.USLedger = new PageInfo("USLedger", false, 17000, 11000);
PageInfo.PAGE_TYPES = [PageInfo.A4, PageInfo.A3, PageInfo.A2, PageInfo.A1, PageInfo.A0, PageInfo.A, PageInfo.B, PageInfo.C, PageInfo.D, PageInfo.E, PageInfo.GERBER, PageInfo.User, PageInfo.USLetter, PageInfo.USLegal, PageInfo.USLedger];
exports.PageInfo = PageInfo;

/***/ }),
/* 32 */
/***/ (function(module, exports) {

var id = 0
  , px = Math.random();
module.exports = function(key){
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

/***/ }),
/* 33 */
/***/ (function(module, exports) {

module.exports = false;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys       = __webpack_require__(89)
  , enumBugKeys = __webpack_require__(64);

module.exports = Object.keys || function keys(O){
  return $keys(O, enumBugKeys);
};

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(30)
  , max       = Math.max
  , min       = Math.min;
module.exports = function(index, length){
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject    = __webpack_require__(1)
  , dPs         = __webpack_require__(90)
  , enumBugKeys = __webpack_require__(64)
  , IE_PROTO    = __webpack_require__(63)('IE_PROTO')
  , Empty       = function(){ /* empty */ }
  , PROTOTYPE   = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function(){
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(61)('iframe')
    , i      = enumBugKeys.length
    , lt     = '<'
    , gt     = '>'
    , iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(66).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties){
  var result;
  if(O !== null){
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty;
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys      = __webpack_require__(89)
  , hiddenKeys = __webpack_require__(64).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
  return $keys(O, hiddenKeys);
};

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global      = __webpack_require__(2)
  , dP          = __webpack_require__(7)
  , DESCRIPTORS = __webpack_require__(6)
  , SPECIES     = __webpack_require__(5)('species');

module.exports = function(KEY){
  var C = global[KEY];
  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
    configurable: true,
    get: function(){ return this; }
  });
};

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = function(it, Constructor, name, forbiddenField){
  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(12);
module.exports = function(target, src, safe){
  for(var key in src)redefine(target, key, src[key], safe);
  return target;
};

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(7).f
  , has = __webpack_require__(10)
  , TAG = __webpack_require__(5)('toStringTag');

module.exports = function(it, tag, stat){
  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0)
  , defined = __webpack_require__(19)
  , fails   = __webpack_require__(3)
  , spaces  = __webpack_require__(68)
  , space   = '[' + spaces + ']'
  , non     = '\u200b\u0085'
  , ltrim   = RegExp('^' + space + space + '*')
  , rtrim   = RegExp(space + space + '*$');

var exporter = function(KEY, exec, ALIAS){
  var exp   = {};
  var FORCE = fails(function(){
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if(ALIAS)exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function(string, TYPE){
  string = String(defined(string));
  if(TYPE & 1)string = string.replace(ltrim, '');
  if(TYPE & 2)string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;

/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = {};

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(5)('unscopables')
  , ArrayProto  = Array.prototype;
if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(11)(ArrayProto, UNSCOPABLES, {});
module.exports = function(key){
  ArrayProto[UNSCOPABLES][key] = true;
};

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var ctx         = __webpack_require__(25)
  , call        = __webpack_require__(100)
  , isArrayIter = __webpack_require__(78)
  , anObject    = __webpack_require__(1)
  , toLength    = __webpack_require__(8)
  , getIterFn   = __webpack_require__(80)
  , BREAK       = {}
  , RETURN      = {};
var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
    , f      = ctx(fn, that, entries ? 2 : 1)
    , index  = 0
    , length, step, iterator, result;
  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if(result === BREAK || result === RETURN)return result;
  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
    result = call(iterator, f, step.value, entries);
    if(result === BREAK || result === RETURN)return result;
  }
};
exports.BREAK  = BREAK;
exports.RETURN = RETURN;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(18);
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
  return cof(it) == 'String' ? it.split('') : Object(it);
};

/***/ }),
/* 47 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(18)
  , TAG = __webpack_require__(5)('toStringTag')
  // ES3 wrong here
  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function(it, key){
  try {
    return it[key];
  } catch(e){ /* empty */ }
};

module.exports = function(it){
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

/***/ }),
/* 49 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2)
  , SHARED = '__core-js_shared__'
  , store  = global[SHARED] || (global[SHARED] = {});
module.exports = function(key){
  return store[key] || (store[key] = {});
};

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(14)
  , toLength  = __webpack_require__(8)
  , toIndex   = __webpack_require__(35);
module.exports = function(IS_INCLUDES){
  return function($this, el, fromIndex){
    var O      = toIObject($this)
      , length = toLength(O.length)
      , index  = toIndex(fromIndex, length)
      , value;
    // Array#includes uses SameValueZero equality algorithm
    if(IS_INCLUDES && el != el)while(length > index){
      value = O[index++];
      if(value != value)return true;
    // Array#toIndex ignores holes, Array#includes - not
    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
      if(O[index] === el)return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

/***/ }),
/* 52 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;

/***/ }),
/* 53 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function(fn, args, that){
  var un = that === undefined;
  switch(args.length){
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return              fn.apply(that, args);
};

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(4)
  , cof      = __webpack_require__(18)
  , MATCH    = __webpack_require__(5)('match');
module.exports = function(it){
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR     = __webpack_require__(5)('iterator')
  , SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function(){ SAFE_CLOSING = true; };
  Array.from(riter, function(){ throw 2; });
} catch(e){ /* empty */ }

module.exports = function(exec, skipClosing){
  if(!skipClosing && !SAFE_CLOSING)return false;
  var safe = false;
  try {
    var arr  = [7]
      , iter = arr[ITERATOR]();
    iter.next = function(){ return {done: safe = true}; };
    arr[ITERATOR] = function(){ return iter; };
    exec(arr);
  } catch(e){ /* empty */ }
  return safe;
};

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__(1);
module.exports = function(){
  var that   = anObject(this)
    , result = '';
  if(that.global)     result += 'g';
  if(that.ignoreCase) result += 'i';
  if(that.multiline)  result += 'm';
  if(that.unicode)    result += 'u';
  if(that.sticky)     result += 'y';
  return result;
};

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var hide     = __webpack_require__(11)
  , redefine = __webpack_require__(12)
  , fails    = __webpack_require__(3)
  , defined  = __webpack_require__(19)
  , wks      = __webpack_require__(5);

module.exports = function(KEY, length, exec){
  var SYMBOL   = wks(KEY)
    , fns      = exec(defined, SYMBOL, ''[KEY])
    , strfn    = fns[0]
    , rxfn     = fns[1];
  if(fails(function(){
    var O = {};
    O[SYMBOL] = function(){ return 7; };
    return ''[KEY](O) != 7;
  })){
    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function(string, arg){ return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function(string){ return rxfn.call(string, this); }
    );
  }
};

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global            = __webpack_require__(2)
  , $export           = __webpack_require__(0)
  , redefine          = __webpack_require__(12)
  , redefineAll       = __webpack_require__(40)
  , meta              = __webpack_require__(29)
  , forOf             = __webpack_require__(45)
  , anInstance        = __webpack_require__(39)
  , isObject          = __webpack_require__(4)
  , fails             = __webpack_require__(3)
  , $iterDetect       = __webpack_require__(55)
  , setToStringTag    = __webpack_require__(41)
  , inheritIfRequired = __webpack_require__(69);

module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
  var Base  = global[NAME]
    , C     = Base
    , ADDER = IS_MAP ? 'set' : 'add'
    , proto = C && C.prototype
    , O     = {};
  var fixMethod = function(KEY){
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function(a){
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a){
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a){
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
    new C().entries().next();
  }))){
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance             = new C
      // early implementations not supports chaining
      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
      // most early implementations doesn't supports iterables, most modern - not close it correctly
      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
      // for early implementations -0 and +0 not the same
      , BUGGY_ZERO = !IS_WEAK && fails(function(){
        // V8 ~ Chromium 42- fails only with 5+ elements
        var $instance = new C()
          , index     = 5;
        while(index--)$instance[ADDER](index, index);
        return !$instance.has(-0);
      });
    if(!ACCEPT_ITERABLES){ 
      C = wrapper(function(target, iterable){
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base, target, C);
        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
    // weak collections should not contains .clear method
    if(IS_WEAK && proto.clear)delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

  return C;
};

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2)
  , hide   = __webpack_require__(11)
  , uid    = __webpack_require__(32)
  , TYPED  = uid('typed_array')
  , VIEW   = uid('view')
  , ABV    = !!(global.ArrayBuffer && global.DataView)
  , CONSTR = ABV
  , i = 0, l = 9, Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while(i < l){
  if(Typed = global[TypedArrayConstructors[i++]]){
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV:    ABV,
  CONSTR: CONSTR,
  TYPED:  TYPED,
  VIEW:   VIEW
};

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

// Forced replacement prototype accessors methods
module.exports = __webpack_require__(33)|| !__webpack_require__(3)(function(){
  var K = Math.random();
  // In FF throws only define methods
  __defineSetter__.call(null, K, function(){ /* empty */});
  delete __webpack_require__(2)[K];
});

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(4)
  , document = __webpack_require__(2).document
  // in old IE typeof document.createElement is 'object'
  , is = isObject(document) && isObject(document.createElement);
module.exports = function(it){
  return is ? document.createElement(it) : {};
};

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var global         = __webpack_require__(2)
  , core           = __webpack_require__(24)
  , LIBRARY        = __webpack_require__(33)
  , wksExt         = __webpack_require__(88)
  , defineProperty = __webpack_require__(7).f;
module.exports = function(name){
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
};

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(50)('keys')
  , uid    = __webpack_require__(32);
module.exports = function(key){
  return shared[key] || (shared[key] = uid(key));
};

/***/ }),
/* 64 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(18);
module.exports = Array.isArray || function isArray(arg){
  return cof(arg) == 'Array';
};

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(2).document && document.documentElement;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(4)
  , anObject = __webpack_require__(1);
var check = function(O, proto){
  anObject(O);
  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function(test, buggy, set){
      try {
        set = __webpack_require__(25)(Function.call, __webpack_require__(16).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch(e){ buggy = true; }
      return function setPrototypeOf(O, proto){
        check(O, proto);
        if(buggy)O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

/***/ }),
/* 68 */
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var isObject       = __webpack_require__(4)
  , setPrototypeOf = __webpack_require__(67).set;
module.exports = function(that, target, C){
  var P, S = target.constructor;
  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
    setPrototypeOf(that, P);
  } return that;
};

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(30)
  , defined   = __webpack_require__(19);

module.exports = function repeat(count){
  var str = String(defined(this))
    , res = ''
    , n   = toInteger(count);
  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
  return res;
};

/***/ }),
/* 71 */
/***/ (function(module, exports) {

// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x){
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

/***/ }),
/* 72 */
/***/ (function(module, exports) {

// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x){
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(30)
  , defined   = __webpack_require__(19);
// true  -> String#at
// false -> String#codePointAt
module.exports = function(TO_STRING){
  return function(that, pos){
    var s = String(defined(that))
      , i = toInteger(pos)
      , l = s.length
      , a, b;
    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY        = __webpack_require__(33)
  , $export        = __webpack_require__(0)
  , redefine       = __webpack_require__(12)
  , hide           = __webpack_require__(11)
  , has            = __webpack_require__(10)
  , Iterators      = __webpack_require__(43)
  , $iterCreate    = __webpack_require__(75)
  , setToStringTag = __webpack_require__(41)
  , getPrototypeOf = __webpack_require__(17)
  , ITERATOR       = __webpack_require__(5)('iterator')
  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
  , FF_ITERATOR    = '@@iterator'
  , KEYS           = 'keys'
  , VALUES         = 'values';

var returnThis = function(){ return this; };

module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
  $iterCreate(Constructor, NAME, next);
  var getMethod = function(kind){
    if(!BUGGY && kind in proto)return proto[kind];
    switch(kind){
      case KEYS: return function keys(){ return new Constructor(this, kind); };
      case VALUES: return function values(){ return new Constructor(this, kind); };
    } return function entries(){ return new Constructor(this, kind); };
  };
  var TAG        = NAME + ' Iterator'
    , DEF_VALUES = DEFAULT == VALUES
    , VALUES_BUG = false
    , proto      = Base.prototype
    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
    , $default   = $native || getMethod(DEFAULT)
    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
    , methods, key, IteratorPrototype;
  // Fix native
  if($anyNative){
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
    if(IteratorPrototype !== Object.prototype){
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if(DEF_VALUES && $native && $native.name !== VALUES){
    VALUES_BUG = true;
    $default = function values(){ return $native.call(this); };
  }
  // Define iterator
  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG]  = returnThis;
  if(DEFAULT){
    methods = {
      values:  DEF_VALUES ? $default : getMethod(VALUES),
      keys:    IS_SET     ? $default : getMethod(KEYS),
      entries: $entries
    };
    if(FORCED)for(key in methods){
      if(!(key in proto))redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create         = __webpack_require__(36)
  , descriptor     = __webpack_require__(28)
  , setToStringTag = __webpack_require__(41)
  , IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(11)(IteratorPrototype, __webpack_require__(5)('iterator'), function(){ return this; });

module.exports = function(Constructor, NAME, next){
  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
  setToStringTag(Constructor, NAME + ' Iterator');
};

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__(54)
  , defined  = __webpack_require__(19);

module.exports = function(that, searchString, NAME){
  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__(5)('match');
module.exports = function(KEY){
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch(e){
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch(f){ /* empty */ }
  } return true;
};

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators  = __webpack_require__(43)
  , ITERATOR   = __webpack_require__(5)('iterator')
  , ArrayProto = Array.prototype;

module.exports = function(it){
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(7)
  , createDesc      = __webpack_require__(28);

module.exports = function(object, index, value){
  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var classof   = __webpack_require__(48)
  , ITERATOR  = __webpack_require__(5)('iterator')
  , Iterators = __webpack_require__(43);
module.exports = __webpack_require__(24).getIteratorMethod = function(it){
  if(it != undefined)return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

var toObject = __webpack_require__(9)
  , toIndex  = __webpack_require__(35)
  , toLength = __webpack_require__(8);
module.exports = function fill(value /*, start = 0, end = @length */){
  var O      = toObject(this)
    , length = toLength(O.length)
    , aLen   = arguments.length
    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
    , end    = aLen > 2 ? arguments[2] : undefined
    , endPos = end === undefined ? length : toIndex(end, length);
  while(endPos > index)O[index++] = value;
  return O;
};

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(44)
  , step             = __webpack_require__(103)
  , Iterators        = __webpack_require__(43)
  , toIObject        = __webpack_require__(14);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(74)(Array, 'Array', function(iterated, kind){
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , kind  = this._k
    , index = this._i++;
  if(!O || index >= O.length){
    this._t = undefined;
    return step(1);
  }
  if(kind == 'keys'  )return step(0, index);
  if(kind == 'values')return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject  = __webpack_require__(1)
  , aFunction = __webpack_require__(13)
  , SPECIES   = __webpack_require__(5)('species');
module.exports = function(O, D){
  var C = anObject(O).constructor, S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var ctx                = __webpack_require__(25)
  , invoke             = __webpack_require__(53)
  , html               = __webpack_require__(66)
  , cel                = __webpack_require__(61)
  , global             = __webpack_require__(2)
  , process            = global.process
  , setTask            = global.setImmediate
  , clearTask          = global.clearImmediate
  , MessageChannel     = global.MessageChannel
  , counter            = 0
  , queue              = {}
  , ONREADYSTATECHANGE = 'onreadystatechange'
  , defer, channel, port;
var run = function(){
  var id = +this;
  if(queue.hasOwnProperty(id)){
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function(event){
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if(!setTask || !clearTask){
  setTask = function setImmediate(fn){
    var args = [], i = 1;
    while(arguments.length > i)args.push(arguments[i++]);
    queue[++counter] = function(){
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id){
    delete queue[id];
  };
  // Node.js 0.8-
  if(__webpack_require__(18)(process) == 'process'){
    defer = function(id){
      process.nextTick(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if(MessageChannel){
    channel = new MessageChannel;
    port    = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
    defer = function(id){
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if(ONREADYSTATECHANGE in cel('script')){
    defer = function(id){
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function(id){
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set:   setTask,
  clear: clearTask
};

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

var global    = __webpack_require__(2)
  , macrotask = __webpack_require__(84).set
  , Observer  = global.MutationObserver || global.WebKitMutationObserver
  , process   = global.process
  , Promise   = global.Promise
  , isNode    = __webpack_require__(18)(process) == 'process';

module.exports = function(){
  var head, last, notify;

  var flush = function(){
    var parent, fn;
    if(isNode && (parent = process.domain))parent.exit();
    while(head){
      fn   = head.fn;
      head = head.next;
      try {
        fn();
      } catch(e){
        if(head)notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if(parent)parent.enter();
  };

  // Node.js
  if(isNode){
    notify = function(){
      process.nextTick(flush);
    };
  // browsers with MutationObserver
  } else if(Observer){
    var toggle = true
      , node   = document.createTextNode('');
    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
    notify = function(){
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if(Promise && Promise.resolve){
    var promise = Promise.resolve();
    notify = function(){
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function(){
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function(fn){
    var task = {fn: fn, next: undefined};
    if(last)last.next = task;
    if(!head){
      head = task;
      notify();
    } last = task;
  };
};

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global         = __webpack_require__(2)
  , DESCRIPTORS    = __webpack_require__(6)
  , LIBRARY        = __webpack_require__(33)
  , $typed         = __webpack_require__(59)
  , hide           = __webpack_require__(11)
  , redefineAll    = __webpack_require__(40)
  , fails          = __webpack_require__(3)
  , anInstance     = __webpack_require__(39)
  , toInteger      = __webpack_require__(30)
  , toLength       = __webpack_require__(8)
  , gOPN           = __webpack_require__(37).f
  , dP             = __webpack_require__(7).f
  , arrayFill      = __webpack_require__(81)
  , setToStringTag = __webpack_require__(41)
  , ARRAY_BUFFER   = 'ArrayBuffer'
  , DATA_VIEW      = 'DataView'
  , PROTOTYPE      = 'prototype'
  , WRONG_LENGTH   = 'Wrong length!'
  , WRONG_INDEX    = 'Wrong index!'
  , $ArrayBuffer   = global[ARRAY_BUFFER]
  , $DataView      = global[DATA_VIEW]
  , Math           = global.Math
  , RangeError     = global.RangeError
  , Infinity       = global.Infinity
  , BaseBuffer     = $ArrayBuffer
  , abs            = Math.abs
  , pow            = Math.pow
  , floor          = Math.floor
  , log            = Math.log
  , LN2            = Math.LN2
  , BUFFER         = 'buffer'
  , BYTE_LENGTH    = 'byteLength'
  , BYTE_OFFSET    = 'byteOffset'
  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
var packIEEE754 = function(value, mLen, nBytes){
  var buffer = Array(nBytes)
    , eLen   = nBytes * 8 - mLen - 1
    , eMax   = (1 << eLen) - 1
    , eBias  = eMax >> 1
    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
    , i      = 0
    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
    , e, m, c;
  value = abs(value)
  if(value != value || value === Infinity){
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if(value * (c = pow(2, -e)) < 1){
      e--;
      c *= 2;
    }
    if(e + eBias >= 1){
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if(value * c >= 2){
      e++;
      c /= 2;
    }
    if(e + eBias >= eMax){
      m = 0;
      e = eMax;
    } else if(e + eBias >= 1){
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
};
var unpackIEEE754 = function(buffer, mLen, nBytes){
  var eLen  = nBytes * 8 - mLen - 1
    , eMax  = (1 << eLen) - 1
    , eBias = eMax >> 1
    , nBits = eLen - 7
    , i     = nBytes - 1
    , s     = buffer[i--]
    , e     = s & 127
    , m;
  s >>= 7;
  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if(e === 0){
    e = 1 - eBias;
  } else if(e === eMax){
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
};

var unpackI32 = function(bytes){
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
};
var packI8 = function(it){
  return [it & 0xff];
};
var packI16 = function(it){
  return [it & 0xff, it >> 8 & 0xff];
};
var packI32 = function(it){
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
};
var packF64 = function(it){
  return packIEEE754(it, 52, 8);
};
var packF32 = function(it){
  return packIEEE754(it, 23, 4);
};

var addGetter = function(C, key, internal){
  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
};

var get = function(view, bytes, index, isLittleEndian){
  var numIndex = +index
    , intIndex = toInteger(numIndex);
  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b
    , start = intIndex + view[$OFFSET]
    , pack  = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
};
var set = function(view, bytes, index, conversion, value, isLittleEndian){
  var numIndex = +index
    , intIndex = toInteger(numIndex);
  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b
    , start = intIndex + view[$OFFSET]
    , pack  = conversion(+value);
  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
};

var validateArrayBufferArguments = function(that, length){
  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
  var numberLength = +length
    , byteLength   = toLength(numberLength);
  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
  return byteLength;
};

if(!$typed.ABV){
  $ArrayBuffer = function ArrayBuffer(length){
    var byteLength = validateArrayBufferArguments(this, length);
    this._b       = arrayFill.call(Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength){
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH]
      , offset       = toInteger(byteOffset);
    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if(DESCRIPTORS){
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset){
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset){
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /*, littleEndian */){
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /*, littleEndian */){
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /*, littleEndian */){
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /*, littleEndian */){
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value){
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value){
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if(!fails(function(){
    new $ArrayBuffer;     // eslint-disable-line no-new
  }) || !fails(function(){
    new $ArrayBuffer(.5); // eslint-disable-line no-new
  })){
    $ArrayBuffer = function ArrayBuffer(length){
      return new BaseBuffer(validateArrayBufferArguments(this, length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
    };
    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2))
    , $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value){
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value){
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(6) && !__webpack_require__(3)(function(){
  return Object.defineProperty(__webpack_require__(61)('div'), 'a', {get: function(){ return 7; }}).a != 7;
});

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(5);

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var has          = __webpack_require__(10)
  , toIObject    = __webpack_require__(14)
  , arrayIndexOf = __webpack_require__(51)(false)
  , IE_PROTO     = __webpack_require__(63)('IE_PROTO');

module.exports = function(object, names){
  var O      = toIObject(object)
    , i      = 0
    , result = []
    , key;
  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while(names.length > i)if(has(O, key = names[i++])){
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var dP       = __webpack_require__(7)
  , anObject = __webpack_require__(1)
  , getKeys  = __webpack_require__(34);

module.exports = __webpack_require__(6) ? Object.defineProperties : function defineProperties(O, Properties){
  anObject(O);
  var keys   = getKeys(Properties)
    , length = keys.length
    , i = 0
    , P;
  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(14)
  , gOPN      = __webpack_require__(37).f
  , toString  = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function(it){
  try {
    return gOPN(it);
  } catch(e){
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it){
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys  = __webpack_require__(34)
  , gOPS     = __webpack_require__(52)
  , pIE      = __webpack_require__(47)
  , toObject = __webpack_require__(9)
  , IObject  = __webpack_require__(46)
  , $assign  = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(3)(function(){
  var A = {}
    , B = {}
    , S = Symbol()
    , K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function(k){ B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
  var T     = toObject(target)
    , aLen  = arguments.length
    , index = 1
    , getSymbols = gOPS.f
    , isEnum     = pIE.f;
  while(aLen > index){
    var S      = IObject(arguments[index++])
      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
      , length = keys.length
      , j      = 0
      , key;
    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
  } return T;
} : $assign;

/***/ }),
/* 93 */
/***/ (function(module, exports) {

// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y){
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction  = __webpack_require__(13)
  , isObject   = __webpack_require__(4)
  , invoke     = __webpack_require__(53)
  , arraySlice = [].slice
  , factories  = {};

var construct = function(F, len, args){
  if(!(len in factories)){
    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /*, args... */){
  var fn       = aFunction(this)
    , partArgs = arraySlice.call(arguments, 1);
  var bound = function(/* args... */){
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if(isObject(fn.prototype))bound.prototype = fn.prototype;
  return bound;
};

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var $parseInt = __webpack_require__(2).parseInt
  , $trim     = __webpack_require__(42).trim
  , ws        = __webpack_require__(68)
  , hex       = /^[\-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

var $parseFloat = __webpack_require__(2).parseFloat
  , $trim       = __webpack_require__(42).trim;

module.exports = 1 / $parseFloat(__webpack_require__(68) + '-0') !== -Infinity ? function parseFloat(str){
  var string = $trim(String(str), 3)
    , result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var cof = __webpack_require__(18);
module.exports = function(it, msg){
  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
  return +it;
};

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var isObject = __webpack_require__(4)
  , floor    = Math.floor;
module.exports = function isInteger(it){
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

/***/ }),
/* 99 */
/***/ (function(module, exports) {

// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x){
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(1);
module.exports = function(iterator, fn, value, entries){
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch(e){
    var ret = iterator['return'];
    if(ret !== undefined)anObject(ret.call(iterator));
    throw e;
  }
};

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(13)
  , toObject  = __webpack_require__(9)
  , IObject   = __webpack_require__(46)
  , toLength  = __webpack_require__(8);

module.exports = function(that, callbackfn, aLen, memo, isRight){
  aFunction(callbackfn);
  var O      = toObject(that)
    , self   = IObject(O)
    , length = toLength(O.length)
    , index  = isRight ? length - 1 : 0
    , i      = isRight ? -1 : 1;
  if(aLen < 2)for(;;){
    if(index in self){
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if(isRight ? index < 0 : length <= index){
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

var toObject = __webpack_require__(9)
  , toIndex  = __webpack_require__(35)
  , toLength = __webpack_require__(8);

module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
  var O     = toObject(this)
    , len   = toLength(O.length)
    , to    = toIndex(target, len)
    , from  = toIndex(start, len)
    , end   = arguments.length > 2 ? arguments[2] : undefined
    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
    , inc   = 1;
  if(from < to && to < from + count){
    inc  = -1;
    from += count - 1;
    to   += count - 1;
  }
  while(count-- > 0){
    if(from in O)O[to] = O[from];
    else delete O[to];
    to   += inc;
    from += inc;
  } return O;
};

/***/ }),
/* 103 */
/***/ (function(module, exports) {

module.exports = function(done, value){
  return {value: value, done: !!done};
};

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if(__webpack_require__(6) && /./g.flags != 'g')__webpack_require__(7).f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(56)
});

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(106);

// 23.1 Map Objects
module.exports = __webpack_require__(58)('Map', function(get){
  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key){
    var entry = strong.getEntry(this, key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value){
    return strong.def(this, key === 0 ? 0 : key, value);
  }
}, strong, true);

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP          = __webpack_require__(7).f
  , create      = __webpack_require__(36)
  , redefineAll = __webpack_require__(40)
  , ctx         = __webpack_require__(25)
  , anInstance  = __webpack_require__(39)
  , defined     = __webpack_require__(19)
  , forOf       = __webpack_require__(45)
  , $iterDefine = __webpack_require__(74)
  , step        = __webpack_require__(103)
  , setSpecies  = __webpack_require__(38)
  , DESCRIPTORS = __webpack_require__(6)
  , fastKey     = __webpack_require__(29).fastKey
  , SIZE        = DESCRIPTORS ? '_s' : 'size';

var getEntry = function(that, key){
  // fast case
  var index = fastKey(key), entry;
  if(index !== 'F')return that._i[index];
  // frozen object case
  for(entry = that._f; entry; entry = entry.n){
    if(entry.k == key)return entry;
  }
};

module.exports = {
  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
    var C = wrapper(function(that, iterable){
      anInstance(that, C, NAME, '_i');
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear(){
        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
          entry.r = true;
          if(entry.p)entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function(key){
        var that  = this
          , entry = getEntry(that, key);
        if(entry){
          var next = entry.n
            , prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if(prev)prev.n = next;
          if(next)next.p = prev;
          if(that._f == entry)that._f = next;
          if(that._l == entry)that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /*, that = undefined */){
        anInstance(this, C, 'forEach');
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
          , entry;
        while(entry = entry ? entry.n : this._f){
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while(entry && entry.r)entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key){
        return !!getEntry(this, key);
      }
    });
    if(DESCRIPTORS)dP(C.prototype, 'size', {
      get: function(){
        return defined(this[SIZE]);
      }
    });
    return C;
  },
  def: function(that, key, value){
    var entry = getEntry(that, key)
      , prev, index;
    // change existing entry
    if(entry){
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if(!that._f)that._f = entry;
      if(prev)prev.n = entry;
      that[SIZE]++;
      // add to index
      if(index !== 'F')that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function(C, NAME, IS_MAP){
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function(iterated, kind){
      this._t = iterated;  // target
      this._k = kind;      // kind
      this._l = undefined; // previous
    }, function(){
      var that  = this
        , kind  = that._k
        , entry = that._l;
      // revert to the last existing entry
      while(entry && entry.r)entry = entry.p;
      // get next entry
      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if(kind == 'keys'  )return step(0, entry.k);
      if(kind == 'values')return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(106);

// 23.2 Set Objects
module.exports = __webpack_require__(58)('Set', function(get){
  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value){
    return strong.def(this, value = value === 0 ? 0 : value, value);
  }
}, strong);

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var each         = __webpack_require__(23)(0)
  , redefine     = __webpack_require__(12)
  , meta         = __webpack_require__(29)
  , assign       = __webpack_require__(92)
  , weak         = __webpack_require__(109)
  , isObject     = __webpack_require__(4)
  , getWeak      = meta.getWeak
  , isExtensible = Object.isExtensible
  , uncaughtFrozenStore = weak.ufstore
  , tmp          = {}
  , InternalMap;

var wrapper = function(get){
  return function WeakMap(){
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key){
    if(isObject(key)){
      var data = getWeak(key);
      if(data === true)return uncaughtFrozenStore(this).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value){
    return weak.def(this, key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = __webpack_require__(58)('WeakMap', wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
  InternalMap = weak.getConstructor(wrapper);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function(key){
    var proto  = $WeakMap.prototype
      , method = proto[key];
    redefine(proto, key, function(a, b){
      // store frozen objects on internal weakmap shim
      if(isObject(a) && !isExtensible(a)){
        if(!this._f)this._f = new InternalMap;
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefineAll       = __webpack_require__(40)
  , getWeak           = __webpack_require__(29).getWeak
  , anObject          = __webpack_require__(1)
  , isObject          = __webpack_require__(4)
  , anInstance        = __webpack_require__(39)
  , forOf             = __webpack_require__(45)
  , createArrayMethod = __webpack_require__(23)
  , $has              = __webpack_require__(10)
  , arrayFind         = createArrayMethod(5)
  , arrayFindIndex    = createArrayMethod(6)
  , id                = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function(that){
  return that._l || (that._l = new UncaughtFrozenStore);
};
var UncaughtFrozenStore = function(){
  this.a = [];
};
var findUncaughtFrozen = function(store, key){
  return arrayFind(store.a, function(it){
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function(key){
    var entry = findUncaughtFrozen(this, key);
    if(entry)return entry[1];
  },
  has: function(key){
    return !!findUncaughtFrozen(this, key);
  },
  set: function(key, value){
    var entry = findUncaughtFrozen(this, key);
    if(entry)entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function(key){
    var index = arrayFindIndex(this.a, function(it){
      return it[0] === key;
    });
    if(~index)this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
    var C = wrapper(function(that, iterable){
      anInstance(that, C, NAME, '_i');
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function(key){
        if(!isObject(key))return false;
        var data = getWeak(key);
        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key){
        if(!isObject(key))return false;
        var data = getWeak(key);
        if(data === true)return uncaughtFrozenStore(this).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function(that, key, value){
    var data = getWeak(anObject(key), true);
    if(data === true)uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
var gOPN     = __webpack_require__(37)
  , gOPS     = __webpack_require__(52)
  , anObject = __webpack_require__(1)
  , Reflect  = __webpack_require__(2).Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
  var keys       = gOPN.f(anObject(it))
    , getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(8)
  , repeat   = __webpack_require__(70)
  , defined  = __webpack_require__(19);

module.exports = function(that, maxLength, fillString, left){
  var S            = String(defined(that))
    , stringLength = S.length
    , fillStr      = fillString === undefined ? ' ' : String(fillString)
    , intMaxLength = toLength(maxLength);
  if(intMaxLength <= stringLength || fillStr == '')return S;
  var fillLen = intMaxLength - stringLength
    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys   = __webpack_require__(34)
  , toIObject = __webpack_require__(14)
  , isEnum    = __webpack_require__(47).f;
module.exports = function(isEntries){
  return function(it){
    var O      = toIObject(it)
      , keys   = getKeys(O)
      , length = keys.length
      , i      = 0
      , result = []
      , key;
    while(length > i)if(isEnum.call(O, key = keys[i++])){
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = __webpack_require__(48)
  , from    = __webpack_require__(114);
module.exports = function(NAME){
  return function toJSON(){
    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var forOf = __webpack_require__(45);

module.exports = function(iter, ITERATOR){
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * This program source code file is part of kicad-utils.
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * imported from:
 * eeschema/lib_text.cpp
 * eeschema/lib_rectangle.cpp
 * eeschema/lib_polyline.cpp
 * eeschema/lib_pin.cpp
 * eeschema/lib_field.cpp
 * eeschema/lib_draw_item.cpp
 * eeschema/lib_circle.cpp
 * eeschema/lib_arc.cpp
 */
var kicad_common_1 = __webpack_require__(31);

var ParseError = function (_Error) {
    _inherits(ParseError, _Error);

    function ParseError(message, lines) {
        _classCallCheck(this, ParseError);

        var _this = _possibleConstructorReturn(this, (ParseError.__proto__ || Object.getPrototypeOf(ParseError)).call(this, message));

        _this.lines = lines;
        return _this;
    }

    return ParseError;
}(Error);

exports.ParseError = ParseError;

var Library = function () {
    _createClass(Library, null, [{
        key: "load",
        value: function load(content) {
            var lines = content.split(/\r?\n/);
            var lib = new this();
            lib.parse(lines);
            return lib;
        }
    }]);

    function Library() {
        _classCallCheck(this, Library);

        this.components = [];
    }

    _createClass(Library, [{
        key: "parse",
        value: function parse(lines) {
            var totalLines = lines.length;
            var version = lines.shift();
            var LIBRARY_HEADER = "EESchema-LIBRARY Version ";
            var SUPPORTED_VERSION = 2.3;
            if (!version || version.indexOf(LIBRARY_HEADER) !== 0) {
                throw "unknwon library format";
            }
            this.version = Number(version.slice(LIBRARY_HEADER.length));
            if (this.version > SUPPORTED_VERSION) {
                throw "library format version is greater than supported version: " + this.version + '>' + SUPPORTED_VERSION;
            }
            try {
                var line = void 0;
                while ((line = lines.shift()) !== undefined) {
                    if (line[0] === '#') continue;
                    if (line === "") continue;
                    var tokens = line.split(/ +/);
                    if (tokens[0] === 'DEF') {
                        this.components.push(new LibComponent(tokens.slice(1)).parse(lines));
                    } else {
                        throw new ParseError('unknown token', lines);
                    }
                }
            } catch (e) {
                if (e instanceof ParseError) {
                    e.lineNumber = totalLines - e.lines.length + 1;
                    e.message += ' at line ' + e.lineNumber;
                }
                throw e;
            }
        }
    }, {
        key: "findByName",
        value: function findByName(name) {
            var ret = this.components.find(function (i) {
                return i.name === name;
            });
            if (!ret) {
                return null;
            }
            return ret;
        }
    }]);

    return Library;
}();

exports.Library = Library;

var LibComponent = function () {
    function LibComponent(params) {
        _classCallCheck(this, LibComponent);

        this.name = params[0];
        this.reference = params[1];
        this.textOffset = Number(params[3]);
        this.drawPinnumber = params[4] === 'Y';
        this.drawPinname = params[5] === 'Y';
        this.unitCount = Number(params[6]);
        this.unitsLocked = params[7] === 'Y';
        this.optionFlag = params[8];
        this.fields = [];
    }

    _createClass(LibComponent, [{
        key: "parse",
        value: function parse(lines) {
            var line = void 0;
            while ((line = lines.shift()) !== undefined) {
                if (line === 'ENDDEF') break;
                var tokens = line.split(/ +/);
                if (tokens[0] === 'DRAW') {
                    this.draw = new Draw().parse(lines);
                } else if (tokens[0] === 'ALIAS') {
                    this.aliases = tokens.slice(1);
                } else if (tokens[0] === 'F0') {
                    this.field = new Field0(tokens.slice(1));
                } else if (tokens[0].match(/^F\d+/)) {
                    this.fields.push(new FieldN(tokens.slice(1)));
                } else if (tokens[0] === '$FPLIST') {
                    this.fplist = [];
                    while ((line = lines.shift()) !== undefined) {
                        if (line === '$ENDFPLIST') break;
                        this.fplist.push(tokens[0]);
                    }
                } else {
                    throw new ParseError('unknown token ' + tokens.join(' '), lines);
                }
            }
            if (this.name[0] === "~") {
                this.name = this.name.slice(1);
                this.field.visibility = false;
            }
            return this;
        }
    }]);

    return LibComponent;
}();

exports.LibComponent = LibComponent;

var Field0 = function Field0(params) {
    _classCallCheck(this, Field0);

    this.reference = kicad_common_1.ReadDelimitedText(params[0]);
    var posx = Number(params[1]);
    var posy = Number(params[2]);
    this.pos = new kicad_common_1.Point(posx, posy);
    this.textSize = Number(params[3]);
    this.textOrientation = params[4] === 'H' ? kicad_common_1.TextAngle.HORIZ : kicad_common_1.TextAngle.VERT;
    this.visibility = params[5] === 'V';
    this.hjustify = params[6];
    this.vjustify = params[7][0];
    this.italic = params[7][1] === "I";
    this.bold = params[7][2] === "B";
};

exports.Field0 = Field0;

var FieldN = function FieldN(params) {
    _classCallCheck(this, FieldN);

    this.name = kicad_common_1.ReadDelimitedText(params[0]);
    if (this.name === "~") this.name = "";
    var posx = Number(params[1]);
    var posy = Number(params[2]);
    this.pos = new kicad_common_1.Point(posx, posy);
    this.textSize = Number(params[3]);
    this.textOrientation = params[4] === 'H' ? kicad_common_1.TextAngle.HORIZ : kicad_common_1.TextAngle.VERT;
    this.visibility = params[5] === 'V';
    this.hjustify = params[6];
    this.vjustify = params[7][0];
    this.italic = params[7][1] === "I";
    this.bold = params[7][2] === "B";
    this.fieldname = params[8];
};

exports.FieldN = FieldN;

var Draw = function () {
    function Draw() {
        _classCallCheck(this, Draw);

        this.objects = [];
    }

    _createClass(Draw, [{
        key: "parse",
        value: function parse(lines) {
            var line = void 0;
            while ((line = lines.shift()) !== undefined) {
                if (line === 'ENDDRAW') break;
                var tokens = line.split(/ +/);
                if (tokens[0] === 'A') {
                    this.objects.push(new DrawArc(tokens.slice(1)));
                } else if (tokens[0] === 'C') {
                    this.objects.push(new DrawCircle(tokens.slice(1)));
                } else if (tokens[0] === 'P') {
                    this.objects.push(new DrawPolyline(tokens.slice(1)));
                } else if (tokens[0] === 'S') {
                    this.objects.push(new DrawSquare(tokens.slice(1)));
                } else if (tokens[0] === 'T') {
                    this.objects.push(new DrawText(tokens.slice(1)));
                } else if (tokens[0] === 'X') {
                    this.objects.push(new DrawPin(tokens.slice(1)));
                } else {
                    throw new ParseError('unknown token', lines);
                }
            }
            return this;
        }
    }, {
        key: "getBoundingRect",
        value: function getBoundingRect() {
            var rect = void 0;
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = this.objects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var o = _step.value;

                    var box = o.getBoundingBox();
                    if (!rect) {
                        rect = box;
                    } else {
                        rect = rect.merge(box);
                    }
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return rect;
        }
    }]);

    return Draw;
}();

exports.Draw = Draw;

var DrawObject = function DrawObject() {
    _classCallCheck(this, DrawObject);
};

var DrawArc = function (_DrawObject) {
    _inherits(DrawArc, _DrawObject);

    function DrawArc(params) {
        _classCallCheck(this, DrawArc);

        var _this2 = _possibleConstructorReturn(this, (DrawArc.__proto__ || Object.getPrototypeOf(DrawArc)).call(this));

        var posx = Number(params[0]);
        var posy = Number(params[1]);
        _this2.pos = new kicad_common_1.Point(posx, posy);
        _this2.radius = Number(params[2]);
        _this2.startAngle = Number(params[3]);
        _this2.endAngle = Number(params[4]);
        _this2.unit = Number(params[5]);
        _this2.convert = Number(params[6]);
        _this2.lineWidth = Number(params[7]);
        _this2.fill = params[8] || kicad_common_1.Fill.NO_FILL;
        var startx = Number(params[9]);
        var starty = Number(params[10]);
        _this2.start = new kicad_common_1.Point(startx, starty);
        var endx = Number(params[11]);
        var endy = Number(params[12]);
        _this2.end = new kicad_common_1.Point(endx, endy);
        return _this2;
    }

    _createClass(DrawArc, [{
        key: "getBoundingBox",
        value: function getBoundingBox() {
            var ret = new kicad_common_1.Rect(0, 0, 0, 0);
            var arcStart = this.start;
            var arcEnd = this.end;
            var pos = this.pos;
            var normStart = kicad_common_1.Point.sub(arcStart, pos);
            var normEnd = kicad_common_1.Point.sub(arcEnd, pos);
            if (kicad_common_1.Point.isZero(normStart) || kicad_common_1.Point.isZero(normEnd) || this.radius === 0) {
                return ret;
            }
            var transform = new kicad_common_1.Transform();
            var startPos = transform.transformCoordinate(arcStart);
            var endPos = transform.transformCoordinate(arcEnd);
            var centerPos = transform.transformCoordinate(pos);

            var _transform$mapAngles = transform.mapAngles(this.startAngle, this.endAngle),
                _transform$mapAngles2 = _slicedToArray(_transform$mapAngles, 3),
                startAngle = _transform$mapAngles2[0],
                endAngle = _transform$mapAngles2[1],
                swap = _transform$mapAngles2[2];

            if (swap) {
                var _ref = [startPos.x, endPos.x];
                endPos.x = _ref[0];
                startPos.x = _ref[1];
                var _ref2 = [startPos.y, endPos.y];
                endPos.y = _ref2[0];
                startPos.y = _ref2[1];
            }
            var minX = Math.min(startPos.x, endPos.x);
            var minY = Math.min(startPos.y, endPos.y);
            var maxX = Math.max(startPos.x, endPos.x);
            var maxY = Math.max(startPos.y, endPos.y);
            /* Zero degrees is a special case. */
            if (this.startAngle === 0) maxX = centerPos.x + this.radius;
            /* Arc end angle wrapped passed 360. */
            if (startAngle > endAngle) endAngle += 3600;
            if (startAngle <= 900 && endAngle >= 900) maxY = centerPos.y + this.radius;
            if (startAngle <= 1800 && endAngle >= 1800) minX = centerPos.x - this.radius;
            if (startAngle <= 2700 && endAngle >= 2700) minY = centerPos.y - this.radius;
            if (startAngle <= 3600 && endAngle >= 3600) maxX = centerPos.x + this.radius;
            ret.pos1.x = minX;
            ret.pos1.y = minY;
            ret.pos2.x = maxX;
            ret.pos2.y = maxY;
            return ret;
        }
    }]);

    return DrawArc;
}(DrawObject);

exports.DrawArc = DrawArc;

var DrawCircle = function (_DrawObject2) {
    _inherits(DrawCircle, _DrawObject2);

    function DrawCircle(params) {
        _classCallCheck(this, DrawCircle);

        var _this3 = _possibleConstructorReturn(this, (DrawCircle.__proto__ || Object.getPrototypeOf(DrawCircle)).call(this));

        var posx = Number(params[0]);
        var posy = Number(params[1]);
        _this3.pos = new kicad_common_1.Point(posx, posy);
        _this3.radius = Number(params[2]);
        _this3.unit = Number(params[3]);
        _this3.convert = Number(params[4]);
        _this3.lineWidth = Number(params[5]);
        _this3.fill = params[6] || kicad_common_1.Fill.NO_FILL;
        return _this3;
    }

    _createClass(DrawCircle, [{
        key: "getBoundingBox",
        value: function getBoundingBox() {
            var transform = new kicad_common_1.Transform();
            var pos1 = transform.transformCoordinate({ x: this.pos.x - this.radius, y: this.pos.y - this.radius });
            var pos2 = transform.transformCoordinate({ x: this.pos.x + this.radius, y: this.pos.y + this.radius });
            return new kicad_common_1.Rect(Math.min(pos1.x, pos2.x), Math.min(pos1.y, pos2.y), Math.max(pos1.x, pos2.x), Math.max(pos1.y, pos2.y));
        }
    }]);

    return DrawCircle;
}(DrawObject);

exports.DrawCircle = DrawCircle;

var DrawPolyline = function (_DrawObject3) {
    _inherits(DrawPolyline, _DrawObject3);

    function DrawPolyline(params) {
        _classCallCheck(this, DrawPolyline);

        var _this4 = _possibleConstructorReturn(this, (DrawPolyline.__proto__ || Object.getPrototypeOf(DrawPolyline)).call(this));

        _this4.points = [];
        _this4.pointCount = Number(params[0]);
        _this4.unit = Number(params[1]);
        _this4.convert = Number(params[2]);
        _this4.lineWidth = Number(params[3]);
        var points = params.slice(4, 4 + _this4.pointCount * 2).map(function (i) {
            return Number(i);
        });
        _this4.fill = params[4 + _this4.pointCount * 2] || kicad_common_1.Fill.NO_FILL;
        for (var i = 0, len = points.length; i < len; i += 2) {
            _this4.points.push(new kicad_common_1.Point(points[i], points[i + 1]));
        }
        return _this4;
    }

    _createClass(DrawPolyline, [{
        key: "getBoundingBox",
        value: function getBoundingBox() {
            var minx = void 0,
                maxx = void 0;
            var miny = void 0,
                maxy = void 0;
            minx = maxx = this.points[0].x;
            miny = maxy = this.points[0].y;
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = this.points[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var point = _step2.value;

                    var x = point.x;
                    var y = point.y;
                    minx = Math.min(minx, x);
                    maxx = Math.max(maxx, x);
                    miny = Math.min(miny, y);
                    maxy = Math.max(maxy, y);
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }

            var transform = new kicad_common_1.Transform();
            var pos1 = transform.transformCoordinate({ x: minx, y: miny });
            var pos2 = transform.transformCoordinate({ x: maxx, y: maxy });
            return new kicad_common_1.Rect(Math.min(pos1.x, pos2.x), Math.min(pos1.y, pos2.y), Math.max(pos1.x, pos2.x), Math.max(pos1.y, pos2.y));
        }
    }]);

    return DrawPolyline;
}(DrawObject);

exports.DrawPolyline = DrawPolyline;

var DrawSquare = function (_DrawObject4) {
    _inherits(DrawSquare, _DrawObject4);

    function DrawSquare(params) {
        _classCallCheck(this, DrawSquare);

        var _this5 = _possibleConstructorReturn(this, (DrawSquare.__proto__ || Object.getPrototypeOf(DrawSquare)).call(this));

        var startx = Number(params[0]);
        var starty = Number(params[1]);
        _this5.start = new kicad_common_1.Point(startx, starty);
        var endx = Number(params[2]);
        var endy = Number(params[3]);
        _this5.end = new kicad_common_1.Point(endx, endy);
        _this5.unit = Number(params[4]);
        _this5.convert = Number(params[5]);
        _this5.lineWidth = Number(params[6]);
        _this5.fill = params[7] || kicad_common_1.Fill.NO_FILL;
        return _this5;
    }

    _createClass(DrawSquare, [{
        key: "getBoundingBox",
        value: function getBoundingBox() {
            var transform = new kicad_common_1.Transform();
            var pos1 = transform.transformCoordinate(this.start);
            var pos2 = transform.transformCoordinate(this.end);
            return new kicad_common_1.Rect(Math.min(pos1.x, pos2.x), Math.min(pos1.y, pos2.y), Math.max(pos1.x, pos2.x), Math.max(pos1.y, pos2.y));
        }
    }]);

    return DrawSquare;
}(DrawObject);

exports.DrawSquare = DrawSquare;

var DrawText = function (_DrawObject5) {
    _inherits(DrawText, _DrawObject5);

    function DrawText(params) {
        _classCallCheck(this, DrawText);

        var _this6 = _possibleConstructorReturn(this, (DrawText.__proto__ || Object.getPrototypeOf(DrawText)).call(this));

        _this6.angle = Number(params[0]);
        var posx = Number(params[1]);
        var posy = Number(params[2]);
        _this6.pos = new kicad_common_1.Point(posx, posy);
        _this6.textSize = Number(params[3]);
        _this6.textType = Number(params[4]);
        _this6.unit = Number(params[5]);
        _this6.convert = Number(params[6]);
        if (params[7][0] === '"') {
            // quoted
            _this6.text = params[7].slice(1, -1).replace(/''/g, '"');
        } else {
            // not quoted
            _this6.text = params[7].replace(/~/g, ' ');
        }
        _this6.italic = params[8] === 'Italic';
        _this6.bold = Number(params[9]) > 0;
        _this6.hjustify = params[10];
        _this6.vjustify = params[11];
        return _this6;
    }

    _createClass(DrawText, [{
        key: "getBoundingBox",
        value: function getBoundingBox() {
            // TODO
            return new kicad_common_1.Rect(this.pos.x - (this.angle === 0 ? this.text.length * this.textSize : 0), this.pos.y - (this.angle !== 0 ? this.text.length * this.textSize : 0), this.pos.x + (this.angle === 0 ? this.text.length * this.textSize : 0), this.pos.y + (this.angle !== 0 ? this.text.length * this.textSize : 0));
        }
    }]);

    return DrawText;
}(DrawObject);

exports.DrawText = DrawText;

var DrawPin = function (_DrawObject6) {
    _inherits(DrawPin, _DrawObject6);

    function DrawPin(params) {
        _classCallCheck(this, DrawPin);

        var _this7 = _possibleConstructorReturn(this, (DrawPin.__proto__ || Object.getPrototypeOf(DrawPin)).call(this));

        _this7.name = params[0];
        _this7.num = params[1];
        var posx = Number(params[2]);
        var posy = Number(params[3]);
        _this7.pos = new kicad_common_1.Point(posx, posy);
        _this7.length = Number(params[4]);
        _this7.orientation = params[5];
        _this7.nameTextSize = Number(params[6]);
        _this7.numTextSize = Number(params[7]);
        _this7.unit = Number(params[8]);
        _this7.convert = Number(params[9]);
        _this7.pinType = params[10];
        _this7.attributes = (params[11] || '').split('');
        _this7.visibility = _this7.attributes.every(function (i) {
            return i !== 'N';
        });
        return _this7;
    }

    _createClass(DrawPin, [{
        key: "getBoundingBox",
        value: function getBoundingBox() {
            // TODO
            return new kicad_common_1.Rect(this.pos.x - this.length, this.pos.y - this.length, this.pos.x + this.length, this.pos.y + this.length);
        }
    }]);

    return DrawPin;
}(DrawObject);

exports.DrawPin = DrawPin;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * This program source code file is part of kicad-utils.
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var kicad_common_1 = __webpack_require__(31);
var TextOrientationType;
(function (TextOrientationType) {
    TextOrientationType[TextOrientationType["HORIZ_LEFT"] = 0] = "HORIZ_LEFT";
    TextOrientationType[TextOrientationType["UP"] = 1] = "UP";
    TextOrientationType[TextOrientationType["HORIZ_RIGHT"] = 2] = "HORIZ_RIGHT";
    TextOrientationType[TextOrientationType["BOTTOM"] = 3] = "BOTTOM";
})(TextOrientationType = exports.TextOrientationType || (exports.TextOrientationType = {}));
;

var Schematic = function () {
    _createClass(Schematic, null, [{
        key: "load",
        value: function load(content) {
            var lines = content.split(/\r?\n/);
            var sch = new this();
            sch.parse(lines);
            return sch;
        }
    }]);

    function Schematic() {
        _classCallCheck(this, Schematic);

        this.libs = [];
        this.items = [];
        this.parsed = false;
    }

    _createClass(Schematic, [{
        key: "parse",
        value: function parse(lines) {
            var version = lines.shift();
            var SCHEMATIC_HEADER = "EESchema Schematic File Version ";
            var SUPPORTED_VERSION = 2;
            if (!version || version.indexOf(SCHEMATIC_HEADER) !== 0) {
                throw "unknwon library format";
            }
            this.version = Number(version.slice(SCHEMATIC_HEADER.length));
            if (this.version > SUPPORTED_VERSION) {
                throw "schematic format version is greater than supported version: " + this.version + '>' + SUPPORTED_VERSION;
            }
            var line = void 0;
            while ((line = lines.shift()) !== undefined) {
                if (line[0] === '#') continue;
                if (!line) continue;
                if (line.indexOf("LIBS:") === 0) {
                    // should be skipped and see .pro file but it is parsed.
                    this.libs.push(line.slice(5));
                    continue;
                }
                var tokens = line.split(/ +/);
                if (tokens[0] === 'EELAYER') {
                    while ((line = lines.shift()) !== undefined) {
                        if (line === 'EELAYER END') break;
                        // skip this section
                    }
                } else if (tokens[0] === '$Descr') {
                    this.descr = new Descr(tokens.slice(1)).parse(lines);
                } else if (tokens[0] === '$Comp') {
                    this.items.push(new SchComponent().parse(lines));
                } else if (tokens[0] === '$Sheet') {
                    this.items.push(new Sheet().parse(lines));
                } else if (tokens[0] === '$Bitmap') {
                    this.items.push(new Bitmap().parse(lines));
                } else if (tokens[0] === 'Text') {
                    this.items.push(new Text(tokens.slice(1)).parse(lines));
                } else if (tokens[0] === 'Entry') {
                    this.items.push(new Entry(tokens.slice(1)).parse(lines));
                } else if (tokens[0] === 'Connection') {
                    this.items.push(new Connection(tokens.slice(1)).parse(lines));
                } else if (tokens[0] === 'NoConn') {
                    this.items.push(new NoConn(tokens.slice(1)).parse(lines));
                } else if (tokens[0] === 'Wire') {
                    this.items.push(new Wire(tokens.slice(1)).parse(lines));
                } else if (tokens[0] === 'Kmarq') {
                    // this may be DRC error. ignore
                } else if (tokens[0] === '$EndSCHEMATC') {
                    this.parsed = true;
                } else {
                    throw 'unkown token ' + tokens[0];
                }
            }
        }
    }]);

    return Schematic;
}();

exports.Schematic = Schematic;

var SchItem = function SchItem() {
    _classCallCheck(this, SchItem);
};

exports.SchItem = SchItem;

var Sheet = function (_SchItem) {
    _inherits(Sheet, _SchItem);

    function Sheet() {
        _classCallCheck(this, Sheet);

        var _this = _possibleConstructorReturn(this, (Sheet.__proto__ || Object.getPrototypeOf(Sheet)).call(this));

        _this.sheetPins = [];
        return _this;
    }

    _createClass(Sheet, [{
        key: "parse",
        value: function parse(lines) {
            var line = void 0;
            while ((line = lines.shift()) !== undefined) {
                if (line === '$EndSheet') break;
                var tokens = line.split(/\s+/);
                if (tokens[0] === 'S') {
                    var posx = Number(tokens[1]);
                    var posy = Number(tokens[2]);
                    var sizex = Number(tokens[3]);
                    var sizey = Number(tokens[4]);
                    this.pos = new kicad_common_1.Point(posx, posy);
                    this.size = new kicad_common_1.Size(sizex, sizey);
                } else if (tokens[0] === 'U') {
                    this.timestamp = Number(tokens[1]);
                } else if (tokens[0].match(/F(\d)/)) {
                    var n = Number(RegExp.$1);
                    if (n === 0) {
                        this.sheetName = kicad_common_1.ReadDelimitedText(tokens[1]);
                        this.sheetNameSize = Number(tokens[2]);
                    } else if (n === 1) {
                        this.fileName = kicad_common_1.ReadDelimitedText(tokens[1]);
                        this.fileNameSize = Number(tokens[2]);
                    } else {
                        this.sheetPins.push(new SheetPin(n, tokens.slice(1)).parse(lines));
                    }
                }
            }
            return this;
        }
    }]);

    return Sheet;
}(SchItem);

exports.Sheet = Sheet;

var SchComponent = function (_SchItem2) {
    _inherits(SchComponent, _SchItem2);

    function SchComponent() {
        _classCallCheck(this, SchComponent);

        var _this2 = _possibleConstructorReturn(this, (SchComponent.__proto__ || Object.getPrototypeOf(SchComponent)).call(this));

        _this2.ar = {};
        _this2.fields = [];
        return _this2;
    }

    _createClass(SchComponent, [{
        key: "parse",
        value: function parse(lines) {
            var line = void 0;
            var tabLines = [];
            while ((line = lines.shift()) !== undefined) {
                if (line === '$EndComp') break;
                if (line[0] === "\t") {
                    tabLines.push(line.substring(1));
                    continue;
                }
                var tokens = line.split(/\s+/);
                if (tokens[0] === 'L') {
                    this.name = tokens[1].replace(/~/g, ' ');
                    this.reference = tokens[2].replace(/~/g, ' ').replace(/^\s+|\s+$/g, '');
                    if (!this.reference) this.reference = "U";
                } else if (tokens[0] === 'U') {
                    this.unit = Number(tokens[1]);
                    this.convert = Number(tokens[2]);
                    this.timestamp = Number(tokens[3]);
                } else if (tokens[0] === 'P') {
                    var posx = Number(tokens[1]);
                    var posy = Number(tokens[2]);
                    this.pos = new kicad_common_1.Point(posx, posy);
                } else if (tokens[0] === 'AR') {
                    tokens.slice(1).reduce(function (r, i) {
                        var _i$split = i.split(/=/),
                            _i$split2 = _slicedToArray(_i$split, 2),
                            name = _i$split2[0],
                            value = _i$split2[1];

                        r[name] = value;
                        return r;
                    }, this.ar);
                } else if (tokens[0] === 'F') {
                    this.fields.push(new Field(tokens.slice(1)));
                }
            }
            var _oldPosAndUnit = tabLines.shift();
            if (!_oldPosAndUnit) {
                throw 'unexpected line';
            }
            var transform = tabLines.shift();
            if (!transform) {
                throw 'unexpected line';
            }
            var matrix = transform.split(/\s+/).slice(0, 4).map(function (i) {
                return Number(i);
            });
            matrix.push(this.pos.x, this.pos.y);
            this.transform = new (Function.prototype.bind.apply(kicad_common_1.Transform, [null].concat(_toConsumableArray(matrix))))();
            return this;
        }
    }]);

    return SchComponent;
}(SchItem);

exports.SchComponent = SchComponent;

var Field = function (_SchItem3) {
    _inherits(Field, _SchItem3);

    function Field(tokens) {
        _classCallCheck(this, Field);

        var _this3 = _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).call(this));

        var i = 0;
        _this3.number = Number(tokens[i++]);
        _this3.text = kicad_common_1.ReadDelimitedText(tokens[i++]);
        if (tokens[i + 1][0] === '"') {
            _this3.name = kicad_common_1.ReadDelimitedText(tokens[i++]);
        }
        _this3.angle = tokens[i++] === 'V' ? kicad_common_1.TextAngle.VERT : kicad_common_1.TextAngle.HORIZ;
        var posx = Number(tokens[i++]);
        var posy = Number(tokens[i++]);
        _this3.size = Number(tokens[i++]);
        _this3.visibility = Number(tokens[i++]) === 0;
        _this3.hjustify = tokens[i++];
        var char3 = tokens[i++];
        _this3.vjustify = char3[0];
        _this3.italic = char3[1] === 'I';
        _this3.bold = char3[2] === 'B';
        _this3.pos = new kicad_common_1.Point(posx, posy);
        return _this3;
    }

    return Field;
}(SchItem);

exports.Field = Field;

var Descr = function () {
    function Descr(tokens) {
        _classCallCheck(this, Descr);

        var pageType = tokens[0];
        var width = Number(tokens[1]);
        var height = Number(tokens[2]);
        var portrait = (tokens[3] || '') === 'portrait';
        this.pageInfo = new kicad_common_1.PageInfo(pageType, portrait, width, height);
    }

    _createClass(Descr, [{
        key: "parse",
        value: function parse(lines) {
            var line = void 0;
            while ((line = lines.shift()) !== undefined) {
                if (line === '$EndDescr') break;
                var tokens = line.split(/\s+/);
                if (tokens[0] === 'Sheet') {
                    this.screenNumber = Number(tokens[1]);
                    this.numberOfScreens = Number(tokens[2]);
                } else if (tokens[0] === 'Title') {
                    this.title = tokens[1];
                } else if (tokens[0] === 'Date') {
                    this.date = tokens[1];
                } else if (tokens[0] === 'Rev') {
                    this.rev = tokens[1];
                } else if (tokens[0] === 'Comp') {
                    this.date = tokens[1];
                } else if (tokens[0] === 'Date') {
                    this.date = tokens[1];
                } else if (tokens[0] === 'Comment1') {
                    this.comment1 = tokens[1];
                } else if (tokens[0] === 'Comment2') {
                    this.comment2 = tokens[1];
                } else if (tokens[0] === 'Comment3') {
                    this.comment3 = tokens[1];
                } else if (tokens[0] === 'Comment4') {
                    this.comment4 = tokens[1];
                }
            }
            return this;
        }
    }, {
        key: "width",
        get: function get() {
            return this.pageInfo.width;
        }
    }, {
        key: "height",
        get: function get() {
            return this.pageInfo.height;
        }
    }]);

    return Descr;
}();

exports.Descr = Descr;

var Bitmap = function (_SchItem4) {
    _inherits(Bitmap, _SchItem4);

    function Bitmap() {
        _classCallCheck(this, Bitmap);

        return _possibleConstructorReturn(this, (Bitmap.__proto__ || Object.getPrototypeOf(Bitmap)).call(this));
    }

    _createClass(Bitmap, [{
        key: "parse",
        value: function parse(lines) {
            var line = void 0;
            while ((line = lines.shift()) !== undefined) {
                if (line === '$EndBitmap') break;
                var tokens = line.split(/ +/);
                if (tokens[0] === 'Pos') {
                    var posx = Number(tokens[1]);
                    var posy = Number(tokens[2]);
                    this.pos = new kicad_common_1.Point(posx, posy);
                } else if (tokens[0] === 'Scale') {
                    this.scale = Number(tokens[1]);
                } else if (tokens[0] === 'Data') {
                    var chunks = [];
                    while ((line = lines.shift()) !== undefined) {
                        if (line === 'EndData') break;
                        chunks.push(Uint8Array.from(line.replace(/^\s+|\s+$/g, '').split(/\s+/).map(function (hex) {
                            return parseInt(hex, 16);
                        })));
                    }
                    var size = chunks.reduce(function (r, i) {
                        return r + i.length;
                    }, 0);
                    this.data = new Uint8Array(size);
                    var offset = 0;
                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = chunks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var chunk = _step.value;

                            this.data.set(chunk, offset);
                            offset += chunk.length;
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }
                } else {
                    throw "unexpected token " + tokens[0];
                }
            }
            return this;
        }
    }, {
        key: "parseIHDR",

        // we need to parse png file to know image dimension
        value: function parseIHDR() {
            if (!this.isValidPNG) {
                throw "this is not a valid png file: invalid signature";
            }
            var IHDR = new DataView(this.data.buffer, Bitmap.PNG_SIGNATURE.length, 25);
            var size = IHDR.getUint32(0);
            var name = String.fromCharCode(IHDR.getUint8(4), IHDR.getUint8(5), IHDR.getUint8(6), IHDR.getUint8(7));
            if (name !== 'IHDR' || size !== 13) {
                throw "this is not a valid png file: invalid IHDR";
            }
            var width = IHDR.getUint32(0x08);
            var height = IHDR.getUint32(0x0c);
            this.size = new kicad_common_1.Size(width, height);
        }
    }, {
        key: "isValidPNG",
        get: function get() {
            var signature = String.fromCharCode.apply(String, _toConsumableArray(this.data.slice(0, Bitmap.PNG_SIGNATURE.length)));
            return signature === Bitmap.PNG_SIGNATURE;
        }
    }]);

    return Bitmap;
}(SchItem);

Bitmap.PNG_SIGNATURE = "\x89\x50\x4E\x47\x0D\x0A\x1A\x0A";
exports.Bitmap = Bitmap;

var Text = function (_SchItem5) {
    _inherits(Text, _SchItem5);

    function Text(tokens) {
        _classCallCheck(this, Text);

        var _this5 = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this));

        if (!tokens) return _possibleConstructorReturn(_this5);
        _this5.name1 = tokens[0];
        var posx = Number(tokens[1]);
        var posy = Number(tokens[2]);
        _this5.pos = new kicad_common_1.Point(posx, posy);
        var orientationType = Number(tokens[3]);
        _this5.setOrientationType(orientationType);
        _this5.size = Number(tokens[4]);
        var shape = tokens[5][0];
        _this5.italic = tokens[6] == "Italic";
        _this5.bold = Number(tokens[7] || '0') !== 0;
        if (shape === kicad_common_1.Net.INPUT || shape === kicad_common_1.Net.OUTPUT || shape === kicad_common_1.Net.BIDI || shape === kicad_common_1.Net.TRISTATE || shape === kicad_common_1.Net.UNSPECIFIED) {
            _this5.shape = shape;
        } else {
            _this5.shape = kicad_common_1.Net.INPUT;
        }
        return _this5;
    }

    _createClass(Text, [{
        key: "setOrientationType",
        value: function setOrientationType(orientationType) {
            this.orientationType = orientationType;
            if (this.name1 === "GLabel") {
                if (orientationType === TextOrientationType.HORIZ_LEFT) {
                    this.orientation = kicad_common_1.TextAngle.HORIZ;
                    this.hjustify = kicad_common_1.TextHjustify.RIGHT;
                    this.vjustify = kicad_common_1.TextVjustify.CENTER;
                } else if (orientationType === TextOrientationType.UP) {
                    this.orientation = kicad_common_1.TextAngle.VERT;
                    this.hjustify = kicad_common_1.TextHjustify.LEFT;
                    this.vjustify = kicad_common_1.TextVjustify.CENTER;
                } else if (orientationType === TextOrientationType.HORIZ_RIGHT) {
                    this.orientation = kicad_common_1.TextAngle.HORIZ;
                    this.hjustify = kicad_common_1.TextHjustify.LEFT;
                    this.vjustify = kicad_common_1.TextVjustify.CENTER;
                } else if (orientationType === TextOrientationType.BOTTOM) {
                    this.orientation = kicad_common_1.TextAngle.VERT;
                    this.hjustify = kicad_common_1.TextHjustify.RIGHT;
                    this.vjustify = kicad_common_1.TextVjustify.CENTER;
                } else {
                    throw "invalid orientationType: " + orientationType;
                }
            } else if (this.name1 === 'HLabel') {
                if (orientationType === TextOrientationType.HORIZ_LEFT) {
                    this.orientation = kicad_common_1.TextAngle.HORIZ;
                    this.hjustify = kicad_common_1.TextHjustify.RIGHT;
                    this.vjustify = kicad_common_1.TextVjustify.CENTER;
                } else if (orientationType === TextOrientationType.UP) {
                    this.orientation = kicad_common_1.TextAngle.VERT;
                    this.hjustify = kicad_common_1.TextHjustify.LEFT;
                    this.vjustify = kicad_common_1.TextVjustify.CENTER;
                } else if (orientationType === TextOrientationType.HORIZ_RIGHT) {
                    this.orientation = kicad_common_1.TextAngle.HORIZ;
                    this.hjustify = kicad_common_1.TextHjustify.LEFT;
                    this.vjustify = kicad_common_1.TextVjustify.CENTER;
                } else if (orientationType === TextOrientationType.BOTTOM) {
                    this.orientation = kicad_common_1.TextAngle.VERT;
                    this.hjustify = kicad_common_1.TextHjustify.RIGHT;
                    this.vjustify = kicad_common_1.TextVjustify.CENTER;
                } else {
                    throw "invalid orientationType: " + orientationType;
                }
            } else {
                if (orientationType === TextOrientationType.HORIZ_LEFT) {
                    this.orientation = kicad_common_1.TextAngle.HORIZ;
                    this.hjustify = kicad_common_1.TextHjustify.LEFT;
                    this.vjustify = kicad_common_1.TextVjustify.BOTTOM;
                } else if (orientationType === TextOrientationType.UP) {
                    this.orientation = kicad_common_1.TextAngle.VERT;
                    this.hjustify = kicad_common_1.TextHjustify.LEFT;
                    this.vjustify = kicad_common_1.TextVjustify.BOTTOM;
                } else if (orientationType === TextOrientationType.HORIZ_RIGHT) {
                    this.orientation = kicad_common_1.TextAngle.HORIZ;
                    this.hjustify = kicad_common_1.TextHjustify.RIGHT;
                    this.vjustify = kicad_common_1.TextVjustify.BOTTOM;
                } else if (orientationType === TextOrientationType.BOTTOM) {
                    this.orientation = kicad_common_1.TextAngle.VERT;
                    this.hjustify = kicad_common_1.TextHjustify.RIGHT;
                    this.vjustify = kicad_common_1.TextVjustify.BOTTOM;
                } else {
                    throw "invalid orientationType: " + orientationType;
                }
            }
        }
    }, {
        key: "parse",
        value: function parse(lines) {
            var text = lines.shift();
            if (!text) throw "expected text line but not";
            this.text = text.replace(/\\n/g, "\n");
            return this;
        }
    }]);

    return Text;
}(SchItem);

exports.Text = Text;

var Wire = function (_SchItem6) {
    _inherits(Wire, _SchItem6);

    function Wire(tokens) {
        _classCallCheck(this, Wire);

        var _this6 = _possibleConstructorReturn(this, (Wire.__proto__ || Object.getPrototypeOf(Wire)).call(this));

        _this6.name1 = tokens[0];
        _this6.name2 = tokens[1];
        return _this6;
    }

    _createClass(Wire, [{
        key: "parse",
        value: function parse(lines) {
            var wire = lines.shift();
            if (!wire) throw "expected text wire but not";

            var _wire$substring$split = wire.substring(1).split(/\s+/).map(function (i) {
                return Number(i);
            }),
                _wire$substring$split2 = _slicedToArray(_wire$substring$split, 4),
                startx = _wire$substring$split2[0],
                starty = _wire$substring$split2[1],
                endx = _wire$substring$split2[2],
                endy = _wire$substring$split2[3];

            this.start = new kicad_common_1.Point(startx, starty);
            this.end = new kicad_common_1.Point(endx, endy);
            return this;
        }
    }, {
        key: "isBus",
        get: function get() {
            return this.name1[0] === 'B';
        }
    }]);

    return Wire;
}(SchItem);

exports.Wire = Wire;

var Entry = function (_SchItem7) {
    _inherits(Entry, _SchItem7);

    function Entry(tokens) {
        _classCallCheck(this, Entry);

        var _this7 = _possibleConstructorReturn(this, (Entry.__proto__ || Object.getPrototypeOf(Entry)).call(this));

        _this7.name1 = tokens[0];
        _this7.name2 = tokens[1];
        return _this7;
    }

    _createClass(Entry, [{
        key: "parse",
        value: function parse(lines) {
            var entry = lines.shift();
            if (!entry) throw "expected text entry but not";

            var _entry$substring$spli = entry.substring(1).split(/\s+/).map(function (i) {
                return Number(i);
            }),
                _entry$substring$spli2 = _slicedToArray(_entry$substring$spli, 4),
                posx = _entry$substring$spli2[0],
                posy = _entry$substring$spli2[1],
                sizex = _entry$substring$spli2[2],
                sizey = _entry$substring$spli2[3];

            sizex -= posx;
            sizey -= posy;
            this.pos = new kicad_common_1.Point(posx, posy);
            this.size = new kicad_common_1.Size(sizex, sizey);
            return this;
        }
    }, {
        key: "isBus",
        get: function get() {
            return this.name1[0] === 'B';
        }
    }]);

    return Entry;
}(SchItem);

exports.Entry = Entry;

var Connection = function (_SchItem8) {
    _inherits(Connection, _SchItem8);

    function Connection(tokens) {
        _classCallCheck(this, Connection);

        var _this8 = _possibleConstructorReturn(this, (Connection.__proto__ || Object.getPrototypeOf(Connection)).call(this));

        _this8.name1 = tokens[0];
        var posx = Number(tokens[1]);
        var posy = Number(tokens[2]);
        _this8.pos = new kicad_common_1.Point(posx, posy);
        return _this8;
    }

    _createClass(Connection, [{
        key: "parse",
        value: function parse(lines) {
            return this;
        }
    }]);

    return Connection;
}(SchItem);

exports.Connection = Connection;

var NoConn = function (_SchItem9) {
    _inherits(NoConn, _SchItem9);

    function NoConn(tokens) {
        _classCallCheck(this, NoConn);

        var _this9 = _possibleConstructorReturn(this, (NoConn.__proto__ || Object.getPrototypeOf(NoConn)).call(this));

        _this9.name1 = tokens[0];
        var posx = Number(tokens[1]);
        var posy = Number(tokens[2]);
        _this9.pos = new kicad_common_1.Point(posx, posy);
        return _this9;
    }

    _createClass(NoConn, [{
        key: "parse",
        value: function parse(lines) {
            return this;
        }
    }]);

    return NoConn;
}(SchItem);

exports.NoConn = NoConn;

var SheetPin = function (_Text) {
    _inherits(SheetPin, _Text);

    function SheetPin(n, tokens) {
        _classCallCheck(this, SheetPin);

        var _this10 = _possibleConstructorReturn(this, (SheetPin.__proto__ || Object.getPrototypeOf(SheetPin)).call(this));

        _this10.number = n;
        _this10.text = kicad_common_1.ReadDelimitedText(tokens[0]);
        _this10.shape = tokens[1][0];
        _this10.sheetSide = tokens[2][0];
        var posx = Number(tokens[3]);
        var posy = Number(tokens[4]);
        _this10.pos = new kicad_common_1.Point(posx, posy);
        _this10.size = Number(tokens[5]);
        _this10.name1 = 'HLabel';
        if (_this10.sheetSide === kicad_common_1.SheetSide.LEFT) {
            _this10.setOrientationType(TextOrientationType.HORIZ_RIGHT);
        } else if (_this10.sheetSide === kicad_common_1.SheetSide.RIGHT) {
            _this10.setOrientationType(TextOrientationType.HORIZ_LEFT);
        } else if (_this10.sheetSide === kicad_common_1.SheetSide.TOP) {
            _this10.setOrientationType(TextOrientationType.BOTTOM);
        } else if (_this10.sheetSide === kicad_common_1.SheetSide.BOTTOM) {
            _this10.setOrientationType(TextOrientationType.UP);
        }
        return _this10;
    }

    _createClass(SheetPin, [{
        key: "parse",
        value: function parse(lines) {
            return this;
        }
    }]);

    return SheetPin;
}(Text);

exports.SheetPin = SheetPin;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

//#!tsc && NODE_PATH=dist/src node dist/sketch3.js 

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
// based on:
// pcbnew/pcb_parser.cpp 
/*
 * This program source code file is part of kicad-utils
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */
/**
 *
 * IMPL is NOT COMPLETED!!
 */
var kicad_common_1 = __webpack_require__(31);
var kicad_pcb_token_1 = __webpack_require__(305);
var SEXPR_BOARD_FILE_VERSION = 20170123;
var PCB_LAYER_ID;
(function (PCB_LAYER_ID) {
    PCB_LAYER_ID[PCB_LAYER_ID["UNDEFINED_LAYER"] = -1] = "UNDEFINED_LAYER";
    PCB_LAYER_ID[PCB_LAYER_ID["UNSELECTED_LAYER"] = -2] = "UNSELECTED_LAYER";
    PCB_LAYER_ID[PCB_LAYER_ID["F_Cu"] = 0] = "F_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In1_Cu"] = 1] = "In1_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In2_Cu"] = 2] = "In2_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In3_Cu"] = 3] = "In3_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In4_Cu"] = 4] = "In4_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In5_Cu"] = 5] = "In5_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In6_Cu"] = 6] = "In6_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In7_Cu"] = 7] = "In7_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In8_Cu"] = 8] = "In8_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In9_Cu"] = 9] = "In9_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In10_Cu"] = 10] = "In10_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In11_Cu"] = 11] = "In11_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In12_Cu"] = 12] = "In12_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In13_Cu"] = 13] = "In13_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In14_Cu"] = 14] = "In14_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In15_Cu"] = 15] = "In15_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In16_Cu"] = 16] = "In16_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In17_Cu"] = 17] = "In17_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In18_Cu"] = 18] = "In18_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In19_Cu"] = 19] = "In19_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In20_Cu"] = 20] = "In20_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In21_Cu"] = 21] = "In21_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In22_Cu"] = 22] = "In22_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In23_Cu"] = 23] = "In23_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In24_Cu"] = 24] = "In24_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In25_Cu"] = 25] = "In25_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In26_Cu"] = 26] = "In26_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In27_Cu"] = 27] = "In27_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In28_Cu"] = 28] = "In28_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In29_Cu"] = 29] = "In29_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["In30_Cu"] = 30] = "In30_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["B_Cu"] = 31] = "B_Cu";
    PCB_LAYER_ID[PCB_LAYER_ID["B_Adhes"] = 32] = "B_Adhes";
    PCB_LAYER_ID[PCB_LAYER_ID["F_Adhes"] = 33] = "F_Adhes";
    PCB_LAYER_ID[PCB_LAYER_ID["B_Paste"] = 34] = "B_Paste";
    PCB_LAYER_ID[PCB_LAYER_ID["F_Paste"] = 35] = "F_Paste";
    PCB_LAYER_ID[PCB_LAYER_ID["B_SilkS"] = 36] = "B_SilkS";
    PCB_LAYER_ID[PCB_LAYER_ID["F_SilkS"] = 37] = "F_SilkS";
    PCB_LAYER_ID[PCB_LAYER_ID["B_Mask"] = 38] = "B_Mask";
    PCB_LAYER_ID[PCB_LAYER_ID["F_Mask"] = 39] = "F_Mask";
    PCB_LAYER_ID[PCB_LAYER_ID["Dwgs_User"] = 40] = "Dwgs_User";
    PCB_LAYER_ID[PCB_LAYER_ID["Cmts_User"] = 41] = "Cmts_User";
    PCB_LAYER_ID[PCB_LAYER_ID["Eco1_User"] = 42] = "Eco1_User";
    PCB_LAYER_ID[PCB_LAYER_ID["Eco2_User"] = 43] = "Eco2_User";
    PCB_LAYER_ID[PCB_LAYER_ID["Edge_Cuts"] = 44] = "Edge_Cuts";
    PCB_LAYER_ID[PCB_LAYER_ID["Margin"] = 45] = "Margin";
    PCB_LAYER_ID[PCB_LAYER_ID["B_CrtYd"] = 46] = "B_CrtYd";
    PCB_LAYER_ID[PCB_LAYER_ID["F_CrtYd"] = 47] = "F_CrtYd";
    PCB_LAYER_ID[PCB_LAYER_ID["B_Fab"] = 48] = "B_Fab";
    PCB_LAYER_ID[PCB_LAYER_ID["F_Fab"] = 49] = "F_Fab";
    PCB_LAYER_ID[PCB_LAYER_ID["PCB_LAYER_ID_COUNT"] = 50] = "PCB_LAYER_ID_COUNT";
})(PCB_LAYER_ID = exports.PCB_LAYER_ID || (exports.PCB_LAYER_ID = {}));
;
var PadDrillShape;
(function (PadDrillShape) {
    PadDrillShape[PadDrillShape["CIRCLE"] = 0] = "CIRCLE";
    PadDrillShape[PadDrillShape["OBLONG"] = 1] = "OBLONG";
})(PadDrillShape = exports.PadDrillShape || (exports.PadDrillShape = {}));
;
function IsCopperLayer(layerId) {
    return layerId >= PCB_LAYER_ID.F_Cu && layerId <= PCB_LAYER_ID.B_Cu;
}
exports.IsCopperLayer = IsCopperLayer;

var PCB = function () {
    function PCB() {
        _classCallCheck(this, PCB);

        this.layerIndices = {};
        this.layerMasks = {};
        this.netCodes = {};
        this.tooRecent = false;
        this.requiredVersion = 0;
        this.pos = 0;
        this.tokens = [];
        for (var layer = 0; layer < PCB_LAYER_ID.PCB_LAYER_ID_COUNT; layer++) {
            var name = LSET.Name(layer);
            this.layerIndices[name] = layer;
            this.layerMasks[name] = new LSET(layer);
        }
        this.layerMasks["*.Cu"] = LSET.AllCuMask();
        this.layerMasks["F&B.Cu"] = new LSET(PCB_LAYER_ID.F_Cu, PCB_LAYER_ID.B_Cu);
        this.layerMasks["*.Adhes"] = new LSET(PCB_LAYER_ID.B_Adhes, PCB_LAYER_ID.F_Adhes);
        this.layerMasks["*.Paste"] = new LSET(PCB_LAYER_ID.B_Paste, PCB_LAYER_ID.F_Paste);
        this.layerMasks["*.Mask"] = new LSET(PCB_LAYER_ID.B_Mask, PCB_LAYER_ID.F_Mask);
        this.layerMasks["*.SilkS"] = new LSET(PCB_LAYER_ID.B_SilkS, PCB_LAYER_ID.F_SilkS);
        this.layerMasks["*.Fab"] = new LSET(PCB_LAYER_ID.B_Fab, PCB_LAYER_ID.F_Fab);
        this.layerMasks["*.CrtYd"] = new LSET(PCB_LAYER_ID.B_CrtYd, PCB_LAYER_ID.F_CrtYd);
        for (var i = 1; i <= 14; i++) {
            var key = "Inner" + i + ".Cu";
            this.layerMasks[key] = new LSET(PCB_LAYER_ID.In15_Cu - i);
        }
    }

    _createClass(PCB, [{
        key: "curTok",
        value: function curTok() {
            return this.tokens[this.pos];
        }
    }, {
        key: "curText",
        value: function curText() {
            var str = this.tokens[this.pos].token;
            if (str.startsWith('"') && str.endsWith('"')) {
                return str.slice(1, -1);
            }
            return str;
        }
    }, {
        key: "nextTok",
        value: function nextTok() {
            return this.tokens[++this.pos];
        }
    }, {
        key: "needLEFT",
        value: function needLEFT() {
            if (!this.nextTok().is(kicad_pcb_token_1.Token.LEFT)) {
                var token = this.curTok();
                throw "expect ( but found" + token.token + ' at line ' + token.line;
            }
        }
    }, {
        key: "needRIGHT",
        value: function needRIGHT() {
            if (!this.nextTok().is(kicad_pcb_token_1.Token.RIGHT)) {
                var token = this.curTok();
                throw "expect ) but found" + token.token + ' at line ' + token.line;
            }
        }
    }, {
        key: "needNUMBER",
        value: function needNUMBER() {
            var expected = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'number';

            if (!this.nextTok().isNUMBER()) {
                var token = this.curTok();
                throw "expect " + expected + " but found " + token.token + ' at line ' + token.line;
            }
            return this.curTok();
        }
    }, {
        key: "needSYMBOL",
        value: function needSYMBOL() {
            var expected = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'symbol';

            if (!this.nextTok().isSYMBOL()) {
                var token = this.curTok();
                throw "expect " + expected + " but found " + token.token + ' at line ' + token.line;
            }
            return this.curTok();
        }
    }, {
        key: "needSYMBOLorNUMBER",
        value: function needSYMBOLorNUMBER() {
            var expected = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "symbol|number";

            var token = this.nextTok();
            if (!token.isNUMBER() && !token.isSYMBOL()) {
                throw "expect " + expected + " but found " + token.token + ' at line ' + token.line;
            }
            return token;
        }
    }, {
        key: "expecting",
        value: function expecting(got) {
            for (var _len = arguments.length, expected = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                expected[_key - 1] = arguments[_key];
            }

            if (!expected.some(function (e) {
                return e.is(got);
            })) {
                throw "expecting " + expected + ' but ' + got + " at line " + got.line;
            }
        }
        /**
         * KiCAD's odd behaviour:
         *   pareseInt/parseDouble/parseBoardUnit is
         *     with expected:     call nextTok() and parse it (returning number is next token)
         *     without expected:  parse curToke() (returning number is current token)
         *
         *   parseHex
         *   parseBool
         *     always:   parse curToke() (returning number is current token)
         */

    }, {
        key: "parseInt",
        value: function (_parseInt) {
            function parseInt(_x) {
                return _parseInt.apply(this, arguments);
            }

            parseInt.toString = function () {
                return _parseInt.toString();
            };

            return parseInt;
        }(function (expected) {
            if (expected) {
                this.needNUMBER(expected);
            }
            return parseInt(this.curText(), 10);
        })
    }, {
        key: "parseFloat",
        value: function (_parseFloat) {
            function parseFloat(_x2) {
                return _parseFloat.apply(this, arguments);
            }

            parseFloat.toString = function () {
                return _parseFloat.toString();
            };

            return parseFloat;
        }(function (expected) {
            if (expected) {
                this.needNUMBER(expected);
            }
            var ret = parseFloat(this.curText());
            if (isNaN(ret)) {
                throw "expecting floating value but got " + this.curText();
            }
            return ret;
        })
    }, {
        key: "parseBoardUnits",
        value: function parseBoardUnits(expected) {
            return kicad_common_1.MM2MIL(this.parseFloat(expected));
        }
        // unify interface to parseInt

    }, {
        key: "parseHex",
        value: function parseHex(expected) {
            if (expected) {
                // XXX
                this.nextTok();
            }
            return parseInt(this.curText(), 16);
        }
        // unify interface to parseInt

    }, {
        key: "parseBool",
        value: function parseBool(expected) {
            if (expected) {
                this.nextTok();
            }
            var token = this.curTok();
            if (token.is(kicad_pcb_token_1.Token.yes)) {
                return true;
            } else if (token.is(kicad_pcb_token_1.Token.no)) {
                return false;
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.yes, kicad_pcb_token_1.Token.no);
            }
        }
    }, {
        key: "parseXY",
        value: function parseXY(expected) {
            if (!this.curTok().is(kicad_pcb_token_1.Token.LEFT)) {
                this.needLEFT();
            }
            var token = this.nextTok();
            this.expecting(token, kicad_pcb_token_1.Token.xy);
            var x = this.parseBoardUnits(expected + '->x');
            var y = this.parseBoardUnits(expected + '->y');
            this.needRIGHT();
            return new kicad_common_1.Point(x, y);
        }
    }, {
        key: "parseBoardItemLayer",
        value: function parseBoardItemLayer(expected) {
            this.nextTok();
            return this.layerIndices[this.curText()];
        }
    }, {
        key: "parseBoardItemLayersAsMask",
        value: function parseBoardItemLayersAsMask(expected) {
            var layerMask = new LSET();
            for (var token = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(token); token = this.nextTok()) {
                var mask = this.layerMasks[this.curText()];
                layerMask.union(mask);
            }
            return layerMask;
        }
    }, {
        key: "parse",
        value: function parse() {
            var token = this.curTok();
            this.expecting(token, kicad_pcb_token_1.Token.LEFT);
            token = this.nextTok();
            if (token.is(kicad_pcb_token_1.Token.kicad_pcb)) {
                this.board = new Board();
                this.parseBoard();
                return this.board;
            } else if (token.is(kicad_pcb_token_1.Token.module)) {
                return this.parseModuleSection();
            } else {
                throw 'unknown token ' + token;
            }
        }
    }, {
        key: "parseBoard",
        value: function parseBoard() {
            // console.log('parseBoard');
            this.parseHeader();
            for (var token = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(token); token = this.nextTok()) {
                this.expecting(token, kicad_pcb_token_1.Token.LEFT);
                token = this.nextTok();
                // console.log('parseBoard', token);
                if (token.is(kicad_pcb_token_1.Token.general)) {
                    this.parseGeneralSection();
                } else if (token.is(kicad_pcb_token_1.Token.page)) {
                    this.parsePageSection();
                } else if (token.is(kicad_pcb_token_1.Token.title_block)) {
                    this.skipSection();
                } else if (token.is(kicad_pcb_token_1.Token.layers)) {
                    this.parseLayersSection();
                } else if (token.is(kicad_pcb_token_1.Token.setup)) {
                    this.parseSetupSection();
                } else if (token.is(kicad_pcb_token_1.Token.net)) {
                    this.parseNetSection();
                } else if (token.is(kicad_pcb_token_1.Token.net_class)) {
                    this.parseNetClassSection();
                } else if (token.is(kicad_pcb_token_1.Token.gr_arc) || token.is(kicad_pcb_token_1.Token.gr_circle) || token.is(kicad_pcb_token_1.Token.gr_curve) || token.is(kicad_pcb_token_1.Token.gr_line) || token.is(kicad_pcb_token_1.Token.gr_poly)) {
                    this.parseDrawSegmentSection();
                } else if (token.is(kicad_pcb_token_1.Token.gr_text)) {
                    this.board.texts.push(this.parseTextSection());
                } else if (token.is(kicad_pcb_token_1.Token.dimension)) {
                    this.board.dimensions.push(this.parseDimensionSection());
                } else if (token.is(kicad_pcb_token_1.Token.module)) {
                    this.board.modules.push(this.parseModuleSection());
                } else if (token.is(kicad_pcb_token_1.Token.segment)) {
                    this.board.tracks.push(this.parseSegmentSection());
                } else if (token.is(kicad_pcb_token_1.Token.via)) {
                    this.board.vias.push(this.parseViaSection());
                } else if (token.is(kicad_pcb_token_1.Token.zone)) {
                    this.board.zones.push(this.parseZoneSection());
                } else if (token.is(kicad_pcb_token_1.Token.target)) {
                    this.board.targets.push(this.parseTargetSection());
                } else {
                    throw "unknown token " + token + ' at line ' + token.line;
                }
            }
        }
    }, {
        key: "parseHeader",
        value: function parseHeader() {
            this.needLEFT();
            var token = this.nextTok();
            if (token.is(kicad_pcb_token_1.Token.version)) {
                var version = this.parseInt("version");
                // console.log('version', version);
                this.needRIGHT();
                // (host pcbnew 4.0.2-stable)
                this.needLEFT();
                this.needSYMBOL();
                this.needSYMBOL();
                this.needSYMBOL();
                this.needRIGHT();
            } else {
                this.needSYMBOL();
                this.needSYMBOL();
                this.needRIGHT();
            }
        }
    }, {
        key: "parseGeneralSection",
        value: function parseGeneralSection() {
            for (var token = this.nextTok(); token && !token.is(kicad_pcb_token_1.Token.RIGHT); token = this.nextTok()) {
                this.expecting(token, kicad_pcb_token_1.Token.LEFT);
                if (token.is(kicad_pcb_token_1.Token.thickness)) {
                    this.board.boardDesignSetting.boardThickness = this.parseInt("board thickness");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.nets)) {
                    this.parseInt("nets count");
                    this.needRIGHT();
                } else {
                    this.skipSection();
                }
            }
        }
    }, {
        key: "parsePageSection",
        value: function parsePageSection() {
            var pageType = this.needSYMBOL().toString();
            if (pageType === 'User') {
                var width = this.parseFloat("width"); // unit=mm
                var height = this.parseFloat("height"); // unit=mm
                this.board.pageInfo.setPageType('User');
                this.board.pageInfo.width = width;
                this.board.pageInfo.height = height;
            } else {
                this.board.pageInfo.setPageType('User');
            }
            var token = this.nextTok();
            if (token.is(kicad_pcb_token_1.Token.portrait)) {
                // set portrate mode
                this.board.pageInfo.setPortrait(true);
            } else if (token.is(kicad_pcb_token_1.Token.RIGHT)) {
                // done
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.portrait, kicad_pcb_token_1.Token.RIGHT);
            }
        }
    }, {
        key: "parseLayersSection",
        value: function parseLayersSection() {
            var cuLayers = [];
            var layer = void 0,
                token = void 0;
            for (token = this.nextTok(); token && !token.is(kicad_pcb_token_1.Token.RIGHT); token = this.nextTok()) {
                layer = this.parseLayer();
                if (layer.type === LayerType.UNDEFINED) break;
                cuLayers.push(layer);
            }
            if (cuLayers.length) {
                cuLayers[cuLayers.length - 1].number = PCB_LAYER_ID.B_Cu;
                for (var i = 0; i < cuLayers.length - 1; i++) {
                    cuLayers[i].number = i;
                }
                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                    for (var _iterator = cuLayers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var _layer = _step.value;

                        this.board.enabledLayers.push(_layer.number);
                        if (_layer.visible) {
                            this.board.visibleLayers.push(_layer.number);
                        }
                        this.board.layerDescr[_layer.number] = _layer;
                        this.layerIndices[_layer.name] = _layer.number;
                        this.layerMasks[_layer.name] = new LSET(_layer.number);
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return) {
                            _iterator.return();
                        }
                    } finally {
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }

                this.board.copperLayerCount = cuLayers.length;
            }
            if (!layer) throw "layers is invalid";
            while (!token.is(kicad_pcb_token_1.Token.RIGHT)) {
                layer.number = this.layerIndices[layer.name];
                if (layer.number === undefined) {
                    throw "layer is not in fixed layer hash";
                }
                this.board.enabledLayers.push(layer.number);
                if (layer.visible) {
                    this.board.visibleLayers.push(layer.number);
                }
                this.board.layerDescr[layer.number] = layer;
                var _token = this.nextTok();
                if (!_token.is(kicad_pcb_token_1.Token.LEFT)) break;
                layer = this.parseLayer();
            }
        }
    }, {
        key: "parseLayer",
        value: function parseLayer() {
            this.expecting(this.curTok(), kicad_pcb_token_1.Token.LEFT);
            var num = this.parseInt("layer number");
            this.needSYMBOLorNUMBER();
            var name = this.curText();
            this.needSYMBOL();
            var type = this.curText();
            var visible = true;
            var token = this.nextTok();
            if (token.is(kicad_pcb_token_1.Token.hide)) {
                visible = false;
                this.needRIGHT();
            } else if (token.is(kicad_pcb_token_1.Token.RIGHT)) {
                // done
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.hide, kicad_pcb_token_1.Token.RIGHT);
            }
            return new Layer(name, type, num, visible);
        }
    }, {
        key: "parseSetupSection",
        value: function parseSetupSection() {
            // TODO baordDesignSetting
            this.skipSection();
        }
    }, {
        key: "parseNetSection",
        value: function parseNetSection() {
            var netCode = this.parseInt("net number");
            this.needSYMBOLorNUMBER();
            var name = this.curText();
            this.needRIGHT();
            var net = new NetInfoItem(this.board, name, netCode);
            this.board.netInfos.push(net);
            this.netCodes[netCode] = net;
        }
    }, {
        key: "parseNetClassSection",
        value: function parseNetClassSection() {
            var nc = new NetClass();
            this.needSYMBOLorNUMBER();
            nc.name = this.curText();
            this.needSYMBOL();
            nc.description = this.curText();
            for (var token = this.nextTok(); token && !token.is(kicad_pcb_token_1.Token.RIGHT); token = this.nextTok()) {
                this.expecting(token, kicad_pcb_token_1.Token.LEFT);
                token = this.nextTok();
                if (token.is(kicad_pcb_token_1.Token.clearance)) {
                    nc.clearance = this.parseBoardUnits(kicad_pcb_token_1.Token.clearance.toString());
                } else if (token.is(kicad_pcb_token_1.Token.trace_width)) {
                    nc.trackWidth = this.parseBoardUnits(kicad_pcb_token_1.Token.trace_width.toString());
                } else if (token.is(kicad_pcb_token_1.Token.via_dia)) {
                    nc.viaDia = this.parseBoardUnits(kicad_pcb_token_1.Token.via_dia.toString());
                } else if (token.is(kicad_pcb_token_1.Token.via_drill)) {
                    nc.viaDrill = this.parseBoardUnits(kicad_pcb_token_1.Token.via_drill.toString());
                } else if (token.is(kicad_pcb_token_1.Token.uvia_dia)) {
                    nc.microViaDia = this.parseBoardUnits(kicad_pcb_token_1.Token.uvia_dia.toString());
                } else if (token.is(kicad_pcb_token_1.Token.uvia_drill)) {
                    nc.microViaDrill = this.parseBoardUnits(kicad_pcb_token_1.Token.uvia_drill.toString());
                } else if (token.is(kicad_pcb_token_1.Token.diff_pair_width)) {
                    nc.diffPairWidth = this.parseBoardUnits(kicad_pcb_token_1.Token.diff_pair_width.toString());
                } else if (token.is(kicad_pcb_token_1.Token.diff_pair_gap)) {
                    nc.diffPairGap = this.parseBoardUnits(kicad_pcb_token_1.Token.diff_pair_gap.toString());
                } else if (token.is(kicad_pcb_token_1.Token.add_net)) {
                    this.needSYMBOLorNUMBER();
                    nc.members.push(this.curText());
                } else {
                    this.expecting(token, kicad_pcb_token_1.Token.clearance, kicad_pcb_token_1.Token.trace_width, kicad_pcb_token_1.Token.via_dia, kicad_pcb_token_1.Token.via_drill, kicad_pcb_token_1.Token.uvia_dia, kicad_pcb_token_1.Token.uvia_drill, kicad_pcb_token_1.Token.diff_pair_width, kicad_pcb_token_1.Token.diff_pair_gap, kicad_pcb_token_1.Token.add_net);
                }
                this.needRIGHT();
            }
            this.board.boardDesignSetting.netClasses.add(nc);
        }
    }, {
        key: "parseDrawSegmentSection",
        value: function parseDrawSegmentSection() {
            var token = this.curTok();
            var segment = new DrawSegment();
            if (token.is(kicad_pcb_token_1.Token.gr_arc)) {
                segment.shape = Shape.ARC;
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.start, kicad_pcb_token_1.Token.center);
                    var x = this.parseBoardUnits("x");
                    var y = this.parseBoardUnits("y");
                    segment.start = new kicad_common_1.Point(x, y);
                    this.needRIGHT();
                }
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.end);
                    var _x6 = this.parseBoardUnits("x");
                    var _y = this.parseBoardUnits("y");
                    segment.end = new kicad_common_1.Point(_x6, _y);
                    this.needRIGHT();
                }
                ;
            } else if (token.is(kicad_pcb_token_1.Token.gr_circle)) {
                segment.shape = Shape.CIRCLE;
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.center);
                    var _x7 = this.parseBoardUnits("x");
                    var _y2 = this.parseBoardUnits("y");
                    segment.start = new kicad_common_1.Point(_x7, _y2);
                    this.needRIGHT();
                }
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.end);
                    var _x8 = this.parseBoardUnits("x");
                    var _y3 = this.parseBoardUnits("y");
                    segment.end = new kicad_common_1.Point(_x8, _y3);
                    this.needRIGHT();
                }
                ;
            } else if (token.is(kicad_pcb_token_1.Token.gr_curve)) {
                segment.shape = Shape.CURVE;
                this.needLEFT();
                token = this.nextTok();
                this.expecting(token, kicad_pcb_token_1.Token.pts);
                segment.start = this.parseXY("start");
                segment.bezierC1 = this.parseXY("bezierC1");
                segment.bezierC2 = this.parseXY("bezierC2");
                segment.end = this.parseXY("end");
                this.needRIGHT();
            } else if (token.is(kicad_pcb_token_1.Token.gr_line)) {
                segment.shape = Shape.SEGMENT;
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.start);
                    var _x9 = this.parseBoardUnits("x");
                    var _y4 = this.parseBoardUnits("y");
                    segment.start = new kicad_common_1.Point(_x9, _y4);
                    this.needRIGHT();
                }
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.end);
                    var _x10 = this.parseBoardUnits("x");
                    var _y5 = this.parseBoardUnits("y");
                    segment.end = new kicad_common_1.Point(_x10, _y5);
                    this.needRIGHT();
                }
                ;
            } else if (token.is(kicad_pcb_token_1.Token.gr_poly)) {
                segment.shape = Shape.POLYGON;
                this.needLEFT();
                token = this.nextTok();
                this.expecting(token, kicad_pcb_token_1.Token.pts);
                while (!kicad_pcb_token_1.Token.RIGHT.is(token = this.nextTok())) {
                    segment.polyPoints.push(this.parseXY("polypoint"));
                }
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.gr_arc, kicad_pcb_token_1.Token.gr_circle, kicad_pcb_token_1.Token.gr_curve, kicad_pcb_token_1.Token.gr_line, kicad_pcb_token_1.Token.gr_poly);
            }
            for (var _token2 = this.nextTok(); _token2 && !_token2.is(kicad_pcb_token_1.Token.RIGHT); _token2 = this.nextTok()) {
                this.expecting(_token2, kicad_pcb_token_1.Token.LEFT);
                _token2 = this.nextTok();
                if (_token2.is(kicad_pcb_token_1.Token.angle)) {
                    segment.angle = this.parseFloat("angle") * 10;
                } else if (_token2.is(kicad_pcb_token_1.Token.layer)) {
                    segment.layer = this.parseBoardItemLayer("layer");
                } else if (_token2.is(kicad_pcb_token_1.Token.width)) {
                    segment.lineWidth = this.parseBoardUnits(kicad_pcb_token_1.Token.width.toString());
                } else if (_token2.is(kicad_pcb_token_1.Token.tstamp)) {
                    segment.tstamp = this.parseHex("tstamp");
                } else if (_token2.is(kicad_pcb_token_1.Token.status)) {
                    segment.status = this.parseHex("status");
                } else {
                    this.expecting(_token2, kicad_pcb_token_1.Token.angle, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.width, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.status);
                }
                this.needRIGHT();
            }
            this.board.drawSegments.push(segment);
        }
    }, {
        key: "parseTextSection",
        value: function parseTextSection() {
            var text = new Text();
            this.needSYMBOLorNUMBER();
            text.text = this.curText();
            this.needLEFT();
            var token = this.nextTok();
            this.expecting(token, kicad_pcb_token_1.Token.at);
            var x = this.parseBoardUnits('x');
            var y = this.parseBoardUnits('y');
            text.pos = new kicad_common_1.Point(x, y);
            token = this.nextTok();
            if (token.isNUMBER()) {
                text.angle = this.parseFloat() * 10;
                this.needRIGHT();
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.RIGHT);
            }
            for (var _token3 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token3); _token3 = this.nextTok()) {
                this.expecting(_token3, kicad_pcb_token_1.Token.LEFT);
                _token3 = this.nextTok();
                if (_token3.is(kicad_pcb_token_1.Token.layer)) {
                    text.layer = this.parseBoardItemLayer("layer");
                    this.needRIGHT();
                } else if (_token3.is(kicad_pcb_token_1.Token.tstamp)) {
                    text.tstamp = this.parseHex("tstamp");
                    this.needRIGHT();
                } else if (_token3.is(kicad_pcb_token_1.Token.effects)) {
                    this.parseEDATEXT(text);
                } else {
                    this.expecting(_token3, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.effects);
                }
            }
            return text;
        }
    }, {
        key: "parseTextModule",
        value: function parseTextModule() {
            var text = new TextModule();
            var token = this.nextTok();
            this.expecting(token, kicad_pcb_token_1.Token.reference, kicad_pcb_token_1.Token.value, kicad_pcb_token_1.Token.user);
            text.type = token.toString();
            this.needSYMBOLorNUMBER();
            text.text = this.curText();
            this.needLEFT();
            token = this.nextTok();
            this.expecting(token, kicad_pcb_token_1.Token.at);
            var x = this.parseBoardUnits('x');
            var y = this.parseBoardUnits('y');
            text.pos = new kicad_common_1.Point(x, y);
            token = this.nextTok();
            if (token.isNUMBER()) {
                text.angle = this.parseFloat() * 10;
                this.needRIGHT();
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.RIGHT);
            }
            for (var _token4 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token4); _token4 = this.nextTok()) {
                if (_token4.is(kicad_pcb_token_1.Token.LEFT)) _token4 = this.nextTok();
                if (_token4.is(kicad_pcb_token_1.Token.layer)) {
                    text.layer = this.parseBoardItemLayer("layer");
                    this.needRIGHT();
                } else if (_token4.is(kicad_pcb_token_1.Token.hide)) {
                    text.visibility = false;
                } else if (_token4.is(kicad_pcb_token_1.Token.effects)) {
                    this.parseEDATEXT(text);
                } else {
                    this.expecting(_token4, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.effects);
                }
            }
            return text;
        }
    }, {
        key: "parseEdgeModule",
        value: function parseEdgeModule() {
            var segment = new EdgeModule();
            var token = this.curTok();
            if (token.is(kicad_pcb_token_1.Token.fp_arc)) {
                segment.shape = Shape.ARC;
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.start, kicad_pcb_token_1.Token.center);
                    var x = this.parseBoardUnits("x");
                    var y = this.parseBoardUnits("y");
                    segment.start = new kicad_common_1.Point(x, y);
                    this.needRIGHT();
                }
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.end);
                    var _x11 = this.parseBoardUnits("x");
                    var _y6 = this.parseBoardUnits("y");
                    segment.end = new kicad_common_1.Point(_x11, _y6);
                    this.needRIGHT();
                }
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.angle);
                    segment.angle = this.parseFloat("segment angle") * 10;
                    this.needRIGHT();
                }
            } else if (token.is(kicad_pcb_token_1.Token.fp_circle)) {
                segment.shape = Shape.CIRCLE;
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.center);
                    var _x12 = this.parseBoardUnits("x");
                    var _y7 = this.parseBoardUnits("y");
                    segment.start = new kicad_common_1.Point(_x12, _y7);
                    this.needRIGHT();
                }
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.end);
                    var _x13 = this.parseBoardUnits("x");
                    var _y8 = this.parseBoardUnits("y");
                    segment.end = new kicad_common_1.Point(_x13, _y8);
                    this.needRIGHT();
                }
            } else if (token.is(kicad_pcb_token_1.Token.fp_curve)) {
                segment.shape = Shape.CURVE;
                this.needLEFT();
                token = this.nextTok();
                this.expecting(token, kicad_pcb_token_1.Token.pts);
                segment.start = this.parseXY("start");
                segment.bezierC1 = this.parseXY("bezierC1");
                segment.bezierC2 = this.parseXY("bezierC2");
                segment.end = this.parseXY("end");
                this.needRIGHT();
            } else if (token.is(kicad_pcb_token_1.Token.fp_line)) {
                segment.shape = Shape.SEGMENT;
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.start);
                    var _x14 = this.parseBoardUnits("x");
                    var _y9 = this.parseBoardUnits("y");
                    segment.start = new kicad_common_1.Point(_x14, _y9);
                    this.needRIGHT();
                }
                {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.end);
                    var _x15 = this.parseBoardUnits("x");
                    var _y10 = this.parseBoardUnits("y");
                    segment.end = new kicad_common_1.Point(_x15, _y10);
                    this.needRIGHT();
                }
                ;
            } else if (token.is(kicad_pcb_token_1.Token.fp_poly)) {
                segment.shape = Shape.POLYGON;
                this.needLEFT();
                token = this.nextTok();
                this.expecting(token, kicad_pcb_token_1.Token.pts);
                while (!kicad_pcb_token_1.Token.RIGHT.is(token = this.nextTok())) {
                    segment.polyPoints.push(this.parseXY("polypoint"));
                }
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.fp_arc, kicad_pcb_token_1.Token.fp_circle, kicad_pcb_token_1.Token.fp_curve, kicad_pcb_token_1.Token.fp_line, kicad_pcb_token_1.Token.fp_poly);
            }
            for (var _token5 = this.nextTok(); _token5 && !_token5.is(kicad_pcb_token_1.Token.RIGHT); _token5 = this.nextTok()) {
                this.expecting(_token5, kicad_pcb_token_1.Token.LEFT);
                _token5 = this.nextTok();
                if (_token5.is(kicad_pcb_token_1.Token.layer)) {
                    segment.layer = this.parseBoardItemLayer("layer");
                } else if (_token5.is(kicad_pcb_token_1.Token.width)) {
                    segment.lineWidth = this.parseBoardUnits(kicad_pcb_token_1.Token.width.toString());
                } else if (_token5.is(kicad_pcb_token_1.Token.tstamp)) {
                    segment.tstamp = this.parseHex("tstamp");
                } else if (_token5.is(kicad_pcb_token_1.Token.status)) {
                    segment.status = this.parseHex("status");
                } else {
                    this.expecting(_token5, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.width, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.status);
                }
                this.needRIGHT();
            }
            return segment;
        }
    }, {
        key: "parsePad",
        value: function parsePad() {
            var pad = new Pad();
            this.needSYMBOLorNUMBER();
            pad.name = this.curText();
            var token = this.nextTok();
            // console.log('parsePad', token);
            if (token.is(kicad_pcb_token_1.Token.thru_hole)) {
                pad.attribute = PadAttr.STANDARD;
            } else if (token.is(kicad_pcb_token_1.Token.smd)) {
                pad.attribute = PadAttr.SMD;
                pad.drillSize = new kicad_common_1.Size(0, 0);
            } else if (token.is(kicad_pcb_token_1.Token.connect)) {
                pad.attribute = PadAttr.CONN;
                pad.drillSize = new kicad_common_1.Size(0, 0);
            } else if (token.is(kicad_pcb_token_1.Token.np_thru_hole)) {
                pad.attribute = PadAttr.HOLE_NOT_PLATED;
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.thru_hole, kicad_pcb_token_1.Token.smd, kicad_pcb_token_1.Token.connect, kicad_pcb_token_1.Token.np_thru_hole);
            }
            token = this.nextTok();
            // console.log('parsePad', token);
            if (token.is(kicad_pcb_token_1.Token.circle)) {
                pad.shape = PadShape.CIRCLE;
            } else if (token.is(kicad_pcb_token_1.Token.rect)) {
                pad.shape = PadShape.RECT;
            } else if (token.is(kicad_pcb_token_1.Token.oval)) {
                pad.shape = PadShape.OVAL;
            } else if (token.is(kicad_pcb_token_1.Token.trapezoid)) {
                pad.shape = PadShape.TRAPEZOID;
            } else if (token.is(kicad_pcb_token_1.Token.roundrect)) {
                pad.shape = PadShape.ROUNDRECT;
            } else {
                this.expecting(token, kicad_pcb_token_1.Token.circle, kicad_pcb_token_1.Token.rect, kicad_pcb_token_1.Token.oval, kicad_pcb_token_1.Token.trapezoid, kicad_pcb_token_1.Token.roundrect);
            }
            for (var _token6 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token6); _token6 = this.nextTok()) {
                this.expecting(_token6, kicad_pcb_token_1.Token.LEFT);
                _token6 = this.nextTok();
                // console.log('parsePad', token);
                if (_token6.is(kicad_pcb_token_1.Token.size)) {
                    var width = this.parseBoardUnits("width");
                    var height = this.parseBoardUnits("height");
                    pad.size = new kicad_common_1.Size(width, height);
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.at)) {
                    // console.log('at', this.tokens.slice(this.pos,this.pos+10));
                    var x = this.parseBoardUnits("x");
                    var y = this.parseBoardUnits("y");
                    pad.pos = new kicad_common_1.Point(x, y);
                    _token6 = this.nextTok();
                    if (_token6.isNUMBER()) {
                        pad.orientation = this.parseFloat() * 10;
                        this.needRIGHT();
                    } else {
                        this.expecting(_token6, kicad_pcb_token_1.Token.RIGHT);
                    }
                } else if (_token6.is(kicad_pcb_token_1.Token.rect_delta)) {
                    var _width = this.parseBoardUnits("width");
                    var _height = this.parseBoardUnits("height");
                    pad.delta = new kicad_common_1.Size(_width, _height);
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.drill)) {
                    var drillSize = pad.drillSize;
                    var haveWidth = false;
                    for (var _token7 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token7); _token7 = this.nextTok()) {
                        if (_token7.is(kicad_pcb_token_1.Token.LEFT)) _token7 = this.nextTok();
                        if (_token7.is(kicad_pcb_token_1.Token.oval)) {
                            pad.drillShape = PadDrillShape.OBLONG;
                        } else if (_token7.isNUMBER()) {
                            if (!haveWidth) {
                                haveWidth = true;
                                drillSize.width = this.parseBoardUnits();
                                drillSize.height = this.parseBoardUnits();
                            } else {
                                drillSize.height = this.parseBoardUnits();
                            }
                        } else if (_token7.is(kicad_pcb_token_1.Token.offset)) {
                            var _x16 = this.parseBoardUnits("x");
                            var _y11 = this.parseBoardUnits("y");
                            pad.offset = new kicad_common_1.Point(_x16, _y11);
                            this.needRIGHT();
                        } else {
                            this.expecting(_token7, kicad_pcb_token_1.Token.oval, kicad_pcb_token_1.Token.offset);
                        }
                        if (pad.attribute === PadAttr.SMD || pad.attribute === PadAttr.CONN) {
                            drillSize.width = 0;
                            drillSize.height = 0;
                        }
                    }
                } else if (_token6.is(kicad_pcb_token_1.Token.layers)) {
                    pad.layers = this.parseBoardItemLayersAsMask("layers");
                } else if (_token6.is(kicad_pcb_token_1.Token.net)) {
                    var net = this.parseInt("net");
                    pad.netCode = this.netCodes[net];
                    this.needSYMBOLorNUMBER();
                    var name = this.curText();
                    if (pad.netCode.name !== name) {
                        throw "invalid net name";
                    }
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.die_length)) {
                    pad.padToDieLength = this.parseBoardUnits(kicad_pcb_token_1.Token.die_length.toString());
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.solder_mask_margin)) {
                    pad.solderMaskMargin = this.parseBoardUnits("solder mask margin");
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.solder_paste_margin)) {
                    pad.solderPasteMargin = this.parseBoardUnits("solder paste margin");
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.solder_paste_margin_ratio)) {
                    pad.solderPasteRatio = this.parseFloat("solder paste ratio");
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.clearance)) {
                    pad.clearance = this.parseBoardUnits("clearance");
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.zone_connect)) {
                    pad.zoneConnection = this.parseInt("zone connect");
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.thermal_width)) {
                    pad.thermalWidth = this.parseBoardUnits("thermal width");
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.thermal_gap)) {
                    pad.thermalGap = this.parseBoardUnits("thermal gap");
                    this.needRIGHT();
                } else if (_token6.is(kicad_pcb_token_1.Token.roundrect_rratio)) {
                    pad.roundRectRatio = this.parseFloat("roundrect ratio");
                    this.needRIGHT();
                } else {
                    this.expecting(_token6, kicad_pcb_token_1.Token.size, kicad_pcb_token_1.Token.at, kicad_pcb_token_1.Token.rect_delta, kicad_pcb_token_1.Token.drill, kicad_pcb_token_1.Token.layers, kicad_pcb_token_1.Token.net, kicad_pcb_token_1.Token.die_length, kicad_pcb_token_1.Token.solder_mask_margin, kicad_pcb_token_1.Token.solder_paste_margin, kicad_pcb_token_1.Token.solder_paste_margin_ratio, kicad_pcb_token_1.Token.clearance, kicad_pcb_token_1.Token.zone_connect, kicad_pcb_token_1.Token.thermal_width, kicad_pcb_token_1.Token.thermal_gap, kicad_pcb_token_1.Token.roundrect_rratio);
                }
            }
            return pad;
        }
    }, {
        key: "parseEDATEXT",
        value: function parseEDATEXT(text) {
            for (var token = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(token); token = this.nextTok()) {
                if (token.is(kicad_pcb_token_1.Token.LEFT)) {
                    token = this.nextTok();
                }
                if (token.is(kicad_pcb_token_1.Token.font)) {
                    for (var _token8 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token8); _token8 = this.nextTok()) {
                        if (_token8.is(kicad_pcb_token_1.Token.LEFT)) continue;
                        if (_token8.is(kicad_pcb_token_1.Token.size)) {
                            var textHeight = this.parseBoardUnits("text height");
                            var textWidth = this.parseBoardUnits("text width");
                            text.size = textHeight;
                            this.needRIGHT();
                        } else if (_token8.is(kicad_pcb_token_1.Token.thickness)) {
                            var lineWidth = this.parseBoardUnits("text thickness");
                            text.lineWidth = lineWidth;
                            this.needRIGHT();
                        } else if (_token8.is(kicad_pcb_token_1.Token.bold)) {
                            text.bold = true;
                        } else if (_token8.is(kicad_pcb_token_1.Token.italic)) {
                            text.italic = true;
                        } else {
                            this.expecting(_token8, kicad_pcb_token_1.Token.size, kicad_pcb_token_1.Token.thickness, kicad_pcb_token_1.Token.bold, kicad_pcb_token_1.Token.italic);
                        }
                    }
                } else if (token.is(kicad_pcb_token_1.Token.justify)) {
                    for (var _token9 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token9); _token9 = this.nextTok()) {
                        if (_token9.is(kicad_pcb_token_1.Token.LEFT)) continue;
                        if (_token9.is(kicad_pcb_token_1.Token.left)) {
                            text.hjustify = kicad_common_1.TextHjustify.LEFT;
                        } else if (_token9.is(kicad_pcb_token_1.Token.right)) {
                            text.hjustify = kicad_common_1.TextHjustify.RIGHT;
                        } else if (_token9.is(kicad_pcb_token_1.Token.top)) {
                            text.vjustify = kicad_common_1.TextVjustify.TOP;
                        } else if (_token9.is(kicad_pcb_token_1.Token.bottom)) {
                            text.vjustify = kicad_common_1.TextVjustify.BOTTOM;
                        } else if (_token9.is(kicad_pcb_token_1.Token.mirror)) {
                            text.mirror = true;
                        } else {
                            this.expecting(_token9, kicad_pcb_token_1.Token.left, kicad_pcb_token_1.Token.right, kicad_pcb_token_1.Token.top, kicad_pcb_token_1.Token.bottom, kicad_pcb_token_1.Token.mirror);
                        }
                    }
                } else if (token.is(kicad_pcb_token_1.Token.hide)) {
                    text.visibility = false;
                } else {
                    this.expecting(kicad_pcb_token_1.Token.font, kicad_pcb_token_1.Token.justify, kicad_pcb_token_1.Token.hide);
                }
            }
        }
    }, {
        key: "parseDimensionSection",
        value: function parseDimensionSection() {
            var dimension = new Dimension();
            dimension.value = this.parseBoardUnits('dimension value');
            this.needLEFT();
            var token = this.nextTok();
            // console.log('parseDimensionSection', token);
            this.expecting(token, kicad_pcb_token_1.Token.width);
            dimension.lineWidth = this.parseBoardUnits("dimension width");
            this.needRIGHT();
            for (var _token10 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token10); _token10 = this.nextTok()) {
                this.expecting(_token10, kicad_pcb_token_1.Token.LEFT);
                _token10 = this.nextTok();
                // console.log('parseDimensionSection', token);
                if (_token10.is(kicad_pcb_token_1.Token.layer)) {
                    dimension.layer = this.parseBoardItemLayer("dimension layer");
                    this.needRIGHT();
                } else if (_token10.is(kicad_pcb_token_1.Token.tstamp)) {
                    dimension.tstamp = this.parseHex("tstamp");
                    this.needRIGHT();
                } else if (_token10.is(kicad_pcb_token_1.Token.gr_text)) {
                    dimension.text = this.parseTextSection();
                    dimension.pos = dimension.text.pos;
                } else if (_token10.is(kicad_pcb_token_1.Token.feature1)) {
                    this.needLEFT();
                    _token10 = this.nextTok();
                    this.expecting(_token10, kicad_pcb_token_1.Token.pts);
                    dimension.featureLineDO = this.parseXY("featureLineDO");
                    dimension.featureLineDF = this.parseXY("featureLineDF");
                    this.needRIGHT();
                    this.needRIGHT();
                } else if (_token10.is(kicad_pcb_token_1.Token.feature2)) {
                    this.needLEFT();
                    _token10 = this.nextTok();
                    this.expecting(_token10, kicad_pcb_token_1.Token.pts);
                    dimension.featureLineGO = this.parseXY("featureLineGO");
                    dimension.featureLineGF = this.parseXY("featureLineGF");
                    this.needRIGHT();
                    this.needRIGHT();
                } else if (_token10.is(kicad_pcb_token_1.Token.crossbar)) {
                    this.needLEFT();
                    _token10 = this.nextTok();
                    this.expecting(_token10, kicad_pcb_token_1.Token.pts);
                    dimension.crossBarO = this.parseXY("crossBarO");
                    dimension.crossBarF = this.parseXY("crossBarF");
                    this.needRIGHT();
                    this.needRIGHT();
                } else if (_token10.is(kicad_pcb_token_1.Token.arrow1a)) {
                    this.needLEFT();
                    _token10 = this.nextTok();
                    this.expecting(_token10, kicad_pcb_token_1.Token.pts);
                    dimension.crossBarF = this.parseXY("crossBarF");
                    dimension.arrowD1F = this.parseXY("arrowD1F");
                    this.needRIGHT();
                    this.needRIGHT();
                } else if (_token10.is(kicad_pcb_token_1.Token.arrow1b)) {
                    this.needLEFT();
                    _token10 = this.nextTok();
                    this.expecting(_token10, kicad_pcb_token_1.Token.pts);
                    dimension.crossBarF = this.parseXY("crossBarF");
                    dimension.arrowD2F = this.parseXY("arrowD2F");
                    this.needRIGHT();
                    this.needRIGHT();
                } else if (_token10.is(kicad_pcb_token_1.Token.arrow2a)) {
                    this.needLEFT();
                    _token10 = this.nextTok();
                    this.expecting(_token10, kicad_pcb_token_1.Token.pts);
                    dimension.crossBarO = this.parseXY("crossBarO");
                    dimension.arrowG1F = this.parseXY("arrowG1F");
                    this.needRIGHT();
                    this.needRIGHT();
                } else if (_token10.is(kicad_pcb_token_1.Token.arrow2b)) {
                    this.needLEFT();
                    _token10 = this.nextTok();
                    this.expecting(_token10, kicad_pcb_token_1.Token.pts);
                    dimension.crossBarO = this.parseXY("crossBarO");
                    dimension.arrowG2F = this.parseXY("arrowG2F");
                    this.needRIGHT();
                    this.needRIGHT();
                } else {
                    this.expecting(_token10, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.gr_text, kicad_pcb_token_1.Token.feature1, kicad_pcb_token_1.Token.feature2, kicad_pcb_token_1.Token.crossbar, kicad_pcb_token_1.Token.arrow1a, kicad_pcb_token_1.Token.arrow1b, kicad_pcb_token_1.Token.arrow2a, kicad_pcb_token_1.Token.arrow2b);
                }
            }
            return dimension;
        }
    }, {
        key: "parseModuleSection",
        value: function parseModuleSection() {
            // console.log('parseModuleSection');
            var mod = new Module();
            this.needSYMBOLorNUMBER();
            var name = this.curText();
            var fpid = LibId.parse(name);
            for (var token = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(token); token = this.nextTok()) {
                if (token.is(kicad_pcb_token_1.Token.LEFT)) {
                    token = this.nextTok();
                }
                // console.log('parseModuleSection', token);
                if (token.is(kicad_pcb_token_1.Token.version)) {
                    var version = this.parseInt("version");
                    this.needRIGHT();
                    this.requiredVersion = Math.max(version, this.requiredVersion);
                    this.tooRecent = this.requiredVersion > SEXPR_BOARD_FILE_VERSION;
                } else if (token.is(kicad_pcb_token_1.Token.locked)) {
                    mod.locked = true;
                } else if (token.is(kicad_pcb_token_1.Token.placed)) {
                    mod.placed = true;
                } else if (token.is(kicad_pcb_token_1.Token.layer)) {
                    mod.layer = this.parseBoardItemLayer("module layer");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.tedit)) {
                    mod.lastEditTime = this.parseHex("tedit");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.tstamp)) {
                    mod.tstamp = this.parseHex("tstamp");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.at)) {
                    var x = this.parseBoardUnits('at x');
                    var y = this.parseBoardUnits('at y');
                    mod.pos = new kicad_common_1.Point(x, y);
                    token = this.nextTok();
                    if (token.isNUMBER()) {
                        mod.orientation = this.parseFloat() * 10.0;
                        this.needRIGHT();
                    } else {
                        this.expecting(token, kicad_pcb_token_1.Token.RIGHT);
                    }
                } else if (token.is(kicad_pcb_token_1.Token.descr)) {
                    this.needSYMBOLorNUMBER();
                    mod.description = this.curText();
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.tags)) {
                    this.needSYMBOLorNUMBER();
                    mod.keywords = this.curText();
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.path)) {
                    this.needSYMBOLorNUMBER();
                    mod.path = this.curText();
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.autoplace_cost90)) {
                    mod.placementCost90 = this.parseInt("place cost 90");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.autoplace_cost180)) {
                    mod.placementCost90 = this.parseInt("place cost 180");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.solder_mask_margin)) {
                    mod.solderMaskMargin = this.parseBoardUnits("solder mask margin");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.solder_paste_margin)) {
                    mod.solderPasteMargin = this.parseBoardUnits("solder paste margin");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.solder_paste_ratio)) {
                    mod.solderPasteRatio = this.parseFloat("solder paste ratio");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.clearance)) {
                    mod.clearance = this.parseBoardUnits("clearance");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.zone_connect)) {
                    mod.zoneConnection = this.parseInt("zone connect");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.thermal_width)) {
                    mod.thermalWidth = this.parseBoardUnits("thermal width");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.thermal_gap)) {
                    mod.thermalGap = this.parseBoardUnits("thermal gap");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.attr)) {
                    for (var _token11 = this.nextTok(); kicad_pcb_token_1.Token.RIGHT.is(_token11); _token11 = this.nextTok()) {
                        if (_token11.is(kicad_pcb_token_1.Token.smd)) {
                            mod.attributes |= MODULE_ATTR.MOD_CMS;
                        } else if (_token11.is(kicad_pcb_token_1.Token.virtual)) {
                            mod.attributes |= MODULE_ATTR.MOD_VIRTUAL;
                        } else {
                            this.expecting(_token11, kicad_pcb_token_1.Token.smd, kicad_pcb_token_1.Token.virtual);
                        }
                    }
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.fp_text)) {
                    var text = this.parseTextModule();
                    text.angle = text.angle - mod.orientation;
                    if (text.type === TextModuleType.reference) {
                        mod.reference = text;
                    } else if (text.type === TextModuleType.value) {
                        mod.value = text;
                    } else {
                        mod.graphics.push(text);
                    }
                } else if (token.is(kicad_pcb_token_1.Token.fp_arc) || token.is(kicad_pcb_token_1.Token.fp_circle) || token.is(kicad_pcb_token_1.Token.fp_curve) || token.is(kicad_pcb_token_1.Token.fp_line) || token.is(kicad_pcb_token_1.Token.fp_poly)) {
                    var edge = this.parseEdgeModule();
                    mod.graphics.push(edge);
                } else if (token.is(kicad_pcb_token_1.Token.pad)) {
                    var pad = this.parsePad();
                    var pos = pad.pos;
                    kicad_common_1.RotatePoint(pos, mod.orientation);
                    pad.pos = kicad_common_1.Point.add(pos, mod.pos);
                    mod.pads.push(pad);
                } else if (token.is(kicad_pcb_token_1.Token.model)) {
                    this.skipSection();
                } else {
                    this.expecting(token, kicad_pcb_token_1.Token.version, kicad_pcb_token_1.Token.locked, kicad_pcb_token_1.Token.placed, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.tedit, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.at, kicad_pcb_token_1.Token.descr, kicad_pcb_token_1.Token.tags, kicad_pcb_token_1.Token.path, kicad_pcb_token_1.Token.autoplace_cost90, kicad_pcb_token_1.Token.autoplace_cost180, kicad_pcb_token_1.Token.solder_mask_margin, kicad_pcb_token_1.Token.solder_paste_margin, kicad_pcb_token_1.Token.solder_paste_ratio, kicad_pcb_token_1.Token.clearance, kicad_pcb_token_1.Token.zone_connect, kicad_pcb_token_1.Token.thermal_width, kicad_pcb_token_1.Token.thermal_gap, kicad_pcb_token_1.Token.attr, kicad_pcb_token_1.Token.fp_text, kicad_pcb_token_1.Token.fp_arc, kicad_pcb_token_1.Token.fp_circle, kicad_pcb_token_1.Token.fp_curve, kicad_pcb_token_1.Token.fp_line, kicad_pcb_token_1.Token.fp_poly, kicad_pcb_token_1.Token.pad, kicad_pcb_token_1.Token.model);
                }
            }
            return mod;
        }
    }, {
        key: "parseSegmentSection",
        value: function parseSegmentSection() {
            var track = new Track();
            for (var token = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(token); token = this.nextTok()) {
                this.expecting(token, kicad_pcb_token_1.Token.LEFT);
                token = this.nextTok();
                if (token.is(kicad_pcb_token_1.Token.start)) {
                    var x = this.parseBoardUnits("x");
                    var y = this.parseBoardUnits("y");
                    track.start = new kicad_common_1.Point(x, y);
                } else if (token.is(kicad_pcb_token_1.Token.end)) {
                    var _x17 = this.parseBoardUnits("x");
                    var _y12 = this.parseBoardUnits("y");
                    track.end = new kicad_common_1.Point(_x17, _y12);
                } else if (token.is(kicad_pcb_token_1.Token.width)) {
                    track.width = this.parseBoardUnits("width");
                } else if (token.is(kicad_pcb_token_1.Token.layer)) {
                    track.layer = this.parseBoardItemLayer("layer");
                } else if (token.is(kicad_pcb_token_1.Token.net)) {
                    var net = this.parseInt("net");
                    track.net = this.netCodes[net];
                } else if (token.is(kicad_pcb_token_1.Token.tstamp)) {
                    track.tstamp = this.parseHex("tstamp");
                } else if (token.is(kicad_pcb_token_1.Token.status)) {
                    track.status = this.parseHex("status");
                } else {
                    this.expecting(token, kicad_pcb_token_1.Token.start, kicad_pcb_token_1.Token.end, kicad_pcb_token_1.Token.width, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.net, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.status);
                }
                this.needRIGHT();
            }
            return track;
        }
    }, {
        key: "parseViaSection",
        value: function parseViaSection() {
            var via = new Via();
            for (var token = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(token); token = this.nextTok()) {
                if (token.is(kicad_pcb_token_1.Token.LEFT)) {
                    token = this.nextTok();
                }
                // console.log('parseViaSection', token);
                if (token.is(kicad_pcb_token_1.Token.blind)) {
                    via.viaType = ViaType.BLIND_BURIED;
                } else if (token.is(kicad_pcb_token_1.Token.micro)) {
                    via.viaType = ViaType.MICROVIA;
                } else if (token.is(kicad_pcb_token_1.Token.at)) {
                    var x = this.parseBoardUnits('x');
                    var y = this.parseBoardUnits('y');
                    var pos = new kicad_common_1.Point(x, y);
                    via.start = pos;
                    via.end = pos;
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.size)) {
                    via.width = this.parseBoardUnits("via width");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.drill)) {
                    via.drill = this.parseBoardUnits("via drill");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.layers)) {
                    this.nextTok();
                    via.layer1 = this.layerIndices[this.curText()];
                    this.nextTok();
                    via.layer2 = this.layerIndices[this.curText()];
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.net)) {
                    var net = this.parseInt("net");
                    via.net = this.netCodes[net];
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.tstamp)) {
                    via.tstamp = this.parseHex("tstamp");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.status)) {
                    via.status = this.parseHex("status");
                    this.needRIGHT();
                } else {
                    this.expecting(token, kicad_pcb_token_1.Token.blind, kicad_pcb_token_1.Token.micro, kicad_pcb_token_1.Token.at, kicad_pcb_token_1.Token.size, kicad_pcb_token_1.Token.drill, kicad_pcb_token_1.Token.layers, kicad_pcb_token_1.Token.net, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.status);
                }
            }
            return via;
        }
    }, {
        key: "parseZoneSection",
        value: function parseZoneSection() {
            var zone = new Zone();
            for (var token = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(token); token = this.nextTok()) {
                if (token.is(kicad_pcb_token_1.Token.LEFT)) {
                    token = this.nextTok();
                }
                // console.log('parseZoneSection', token);
                if (token.is(kicad_pcb_token_1.Token.net)) {
                    var net = this.parseInt("net");
                    zone.netCode = this.netCodes[net];
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.net_name)) {
                    this.needSYMBOLorNUMBER();
                    var netname = this.curText();
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.layer)) {
                    zone.layer = this.parseBoardItemLayer("layer");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.tstamp)) {
                    zone.tstamp = this.parseHex("tstamp");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.hatch)) {
                    token = this.nextTok();
                    if (token.is(kicad_pcb_token_1.Token.none)) {
                        zone.hatchStyle = HatchStyle.NO_HATCH;
                    } else if (token.is(kicad_pcb_token_1.Token.edge)) {
                        zone.hatchStyle = HatchStyle.DIAGONAL_EDGE;
                    } else if (token.is(kicad_pcb_token_1.Token.full)) {
                        zone.hatchStyle = HatchStyle.DIAGONAL_FULL;
                    } else {
                        this.expecting(token, kicad_pcb_token_1.Token.none, kicad_pcb_token_1.Token.edge, kicad_pcb_token_1.Token.full);
                    }
                    zone.hatchPitch = this.parseBoardUnits("hatch pitch");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.priority)) {
                    zone.priority = this.parseInt("zone priority");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.connect_pads)) {
                    for (var _token12 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token12); _token12 = this.nextTok()) {
                        if (_token12.is(kicad_pcb_token_1.Token.LEFT)) _token12 = this.nextTok();
                        if (_token12.is(kicad_pcb_token_1.Token.yes)) {
                            zone.padConnection = PadConnection.CONN_FULL;
                        } else if (_token12.is(kicad_pcb_token_1.Token.no)) {
                            zone.padConnection = PadConnection.CONN_NONE;
                        } else if (_token12.is(kicad_pcb_token_1.Token.thru_hole_only)) {
                            zone.padConnection = PadConnection.CONN_THT_THERMAL;
                        } else if (_token12.is(kicad_pcb_token_1.Token.clearance)) {
                            zone.zoneClearance = this.parseBoardUnits("zone clearance");
                            this.needRIGHT();
                        } else {
                            this.expecting(_token12, kicad_pcb_token_1.Token.yes, kicad_pcb_token_1.Token.no, kicad_pcb_token_1.Token.thru_hole_only, kicad_pcb_token_1.Token.clearance);
                        }
                    }
                } else if (token.is(kicad_pcb_token_1.Token.min_thickness)) {
                    zone.minThickness = this.parseBoardUnits("min thickness");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.fill)) {
                    for (var _token13 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token13); _token13 = this.nextTok()) {
                        if (_token13.is(kicad_pcb_token_1.Token.LEFT)) _token13 = this.nextTok();
                        if (_token13.is(kicad_pcb_token_1.Token.yes)) {
                            zone.filled = true;
                        } else if (_token13.is(kicad_pcb_token_1.Token.mode)) {
                            _token13 = this.nextTok();
                            if (_token13.is(kicad_pcb_token_1.Token.polygon)) {
                                zone.fillMode = 0;
                            } else if (_token13.is(kicad_pcb_token_1.Token.segment)) {
                                zone.fillMode = 1;
                            } else {
                                this.expecting(_token13, kicad_pcb_token_1.Token.polygon, kicad_pcb_token_1.Token.segment);
                            }
                            this.needRIGHT();
                        } else if (_token13.is(kicad_pcb_token_1.Token.arc_segments)) {
                            zone.arcSegumentCount = this.parseInt("arc segment count");
                            this.needRIGHT();
                        } else if (_token13.is(kicad_pcb_token_1.Token.thermal_gap)) {
                            zone.thermalReliefGap = this.parseBoardUnits("thermal gap");
                            this.needRIGHT();
                        } else if (_token13.is(kicad_pcb_token_1.Token.thermal_bridge_width)) {
                            zone.thermalReliefCopperBridge = this.parseBoardUnits("thermal bridge width");
                            this.needRIGHT();
                        } else if (_token13.is(kicad_pcb_token_1.Token.smoothing)) {
                            _token13 = this.nextTok();
                            if (_token13.is(kicad_pcb_token_1.Token.none)) {
                                zone.cornerSmoothingType = CornerSmoothingType.NONE;
                            } else if (_token13.is(kicad_pcb_token_1.Token.chamfer)) {
                                zone.cornerSmoothingType = CornerSmoothingType.CHAMFER;
                            } else if (_token13.is(kicad_pcb_token_1.Token.fillet)) {
                                zone.cornerSmoothingType = CornerSmoothingType.FILLET;
                            } else {
                                this.expecting(_token13, kicad_pcb_token_1.Token.none, kicad_pcb_token_1.Token.chamfer, kicad_pcb_token_1.Token.fillet);
                            }
                            this.needRIGHT();
                        } else if (_token13.is(kicad_pcb_token_1.Token.radius)) {
                            zone.cornerRadius = this.parseBoardUnits("corner radius");
                            this.needRIGHT();
                        } else {
                            this.expecting(_token13, kicad_pcb_token_1.Token.yes, kicad_pcb_token_1.Token.mode, kicad_pcb_token_1.Token.arc_segments, kicad_pcb_token_1.Token.thermal_gap, kicad_pcb_token_1.Token.thermal_bridge_width, kicad_pcb_token_1.Token.smoothing, kicad_pcb_token_1.Token.radius);
                        }
                    }
                } else if (token.is(kicad_pcb_token_1.Token.keepout)) {
                    zone.keepout = true;
                    for (var _token14 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token14); _token14 = this.nextTok()) {
                        if (_token14.is(kicad_pcb_token_1.Token.LEFT)) _token14 = this.nextTok();
                        if (_token14.is(kicad_pcb_token_1.Token.tracks)) {
                            _token14 = this.nextTok();
                            if (_token14.is(kicad_pcb_token_1.Token.allowed)) {
                                zone.doNotAllowTracks = false;
                            } else if (_token14.is(kicad_pcb_token_1.Token.not_allowed)) {
                                zone.doNotAllowTracks = true;
                            } else {
                                this.expecting(_token14, kicad_pcb_token_1.Token.allowed, kicad_pcb_token_1.Token.not_allowed);
                            }
                        } else if (_token14.is(kicad_pcb_token_1.Token.vias)) {
                            _token14 = this.nextTok();
                            if (_token14.is(kicad_pcb_token_1.Token.allowed)) {
                                zone.doNotAllowVias = false;
                            } else if (_token14.is(kicad_pcb_token_1.Token.not_allowed)) {
                                zone.doNotAllowVias = true;
                            } else {
                                this.expecting(_token14, kicad_pcb_token_1.Token.allowed, kicad_pcb_token_1.Token.not_allowed);
                            }
                        } else if (_token14.is(kicad_pcb_token_1.Token.copperpour)) {
                            _token14 = this.nextTok();
                            if (_token14.is(kicad_pcb_token_1.Token.allowed)) {
                                zone.doNotAllowCopperPour = false;
                            } else if (_token14.is(kicad_pcb_token_1.Token.not_allowed)) {
                                zone.doNotAllowCopperPour = true;
                            } else {
                                this.expecting(_token14, kicad_pcb_token_1.Token.allowed, kicad_pcb_token_1.Token.not_allowed);
                            }
                        } else {
                            this.expecting(_token14, kicad_pcb_token_1.Token.tracks, kicad_pcb_token_1.Token.vias, kicad_pcb_token_1.Token.copperpour);
                        }
                        this.needRIGHT();
                    }
                } else if (token.is(kicad_pcb_token_1.Token.polygon)) {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.pts);
                    var corners = [];
                    for (var _token15 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token15); _token15 = this.nextTok()) {
                        corners.push(this.parseXY("xy"));
                    }
                    this.needRIGHT();
                    zone.polygons.push(corners);
                } else if (token.is(kicad_pcb_token_1.Token.filled_polygon)) {
                    this.needLEFT();
                    token = this.nextTok();
                    this.expecting(token, kicad_pcb_token_1.Token.pts);
                    var _corners = [];
                    for (var _token16 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token16); _token16 = this.nextTok()) {
                        _corners.push(this.parseXY("xy"));
                    }
                    this.needRIGHT();
                    zone.filledPolygons.push(_corners);
                } else if (token.is(kicad_pcb_token_1.Token.fill_segments)) {
                    var segments = [];
                    for (var _token17 = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(_token17); _token17 = this.nextTok()) {
                        this.expecting(_token17, kicad_pcb_token_1.Token.LEFT);
                        _token17 = this.nextTok();
                        this.expecting(_token17, kicad_pcb_token_1.Token.pts);
                        var segment = new Segment(this.parseXY("segment start"), this.parseXY("segment end"));
                        this.needRIGHT();
                        segments.push(segment);
                    }
                    zone.fillSegments.push(segments);
                } else {
                    this.expecting(token, kicad_pcb_token_1.Token.net, kicad_pcb_token_1.Token.net_name, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.tstamp, kicad_pcb_token_1.Token.hatch, kicad_pcb_token_1.Token.priority, kicad_pcb_token_1.Token.connect_pads, kicad_pcb_token_1.Token.min_thickness, kicad_pcb_token_1.Token.fill, kicad_pcb_token_1.Token.keepout, kicad_pcb_token_1.Token.polygon, kicad_pcb_token_1.Token.filled_polygon, kicad_pcb_token_1.Token.fill_segments);
                }
            }
            return zone;
        }
    }, {
        key: "parseTargetSection",
        value: function parseTargetSection() {
            var target = new Target();
            for (var token = this.nextTok(); !kicad_pcb_token_1.Token.RIGHT.is(token); token = this.nextTok()) {
                if (token.is(kicad_pcb_token_1.Token.LEFT)) token = this.nextTok();
                if (token.is(kicad_pcb_token_1.Token.x)) {
                    target.shape = 1;
                } else if (token.is(kicad_pcb_token_1.Token.plus)) {
                    target.shape = 0;
                } else if (token.is(kicad_pcb_token_1.Token.at)) {
                    var x = this.parseBoardUnits("target x");
                    var y = this.parseBoardUnits("target y");
                    target.pos = new kicad_common_1.Point(x, y);
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.size)) {
                    target.size = this.parseBoardUnits("target size");
                    this.needRIGHT();
                } else if (token.is(kicad_pcb_token_1.Token.width)) {
                    target.lineWidth = this.parseBoardUnits("target line width");
                } else if (token.is(kicad_pcb_token_1.Token.layer)) {
                    target.layer = this.parseBoardItemLayer("layer");
                } else if (token.is(kicad_pcb_token_1.Token.tstamp)) {
                    target.tstamp = this.parseHex("tstamp");
                } else {
                    this.expecting(token, kicad_pcb_token_1.Token.x, kicad_pcb_token_1.Token.plus, kicad_pcb_token_1.Token.at, kicad_pcb_token_1.Token.size, kicad_pcb_token_1.Token.width, kicad_pcb_token_1.Token.layer, kicad_pcb_token_1.Token.tstamp);
                }
            }
            return target;
        }
    }, {
        key: "skipSection",
        value: function skipSection() {
            var token = void 0;
            for (var depth = 1; depth > 0;) {
                token = this.nextTok();
                if (token.is(kicad_pcb_token_1.Token.LEFT)) {
                    depth++;
                } else if (token.is(kicad_pcb_token_1.Token.RIGHT)) {
                    depth--;
                } else {
                    // skip
                }
            }
        }
    }], [{
        key: "load",
        value: function load(content) {
            var lines = content.split(/\r?\n/);
            var tokens = [];
            // lexer

            var _loop = function _loop(i, len) {
                // remove comment
                var line = lines[i].replace(/#.*$/, '');
                tokens.push.apply(tokens, _toConsumableArray(line.split(/([()]|"(?:\\"|[^"])*")|\s+/).filter(function (t) {
                    return !!t;
                }).map(function (t) {
                    return new kicad_pcb_token_1.Token(t, i + 1);
                })));
            };

            for (var i = 0, len = lines.length; i < len; i++) {
                _loop(i, len);
            }
            var pcb = new this();
            pcb.pos = 0;
            pcb.tokens = tokens;
            return pcb.parse();
        }
    }]);

    return PCB;
}();

exports.PCB = PCB;
var LayerType;
(function (LayerType) {
    LayerType["SIGNAL"] = "signal";
    LayerType["POWER"] = "power";
    LayerType["MIXED"] = "mixed";
    LayerType["JUMPER"] = "jumper";
    LayerType["UNDEFINED"] = "undefined";
})(LayerType = exports.LayerType || (exports.LayerType = {}));

var Layer = function Layer(name, type, number, visible) {
    _classCallCheck(this, Layer);

    this.name = name;
    this.type = type;
    this.number = number;
    this.visible = visible;
    if (type !== LayerType.SIGNAL && type !== LayerType.POWER && type !== LayerType.MIXED && type !== LayerType.JUMPER) {
        this.type = LayerType.UNDEFINED;
    }
};

exports.Layer = Layer;

var Board = function Board() {
    _classCallCheck(this, Board);

    this.filename = "";
    this.layers = [];
    this.boardDesignSetting = new BoardDesignSetting();
    this.pageInfo = kicad_common_1.PageInfo.A3;
    this.netInfos = [];
    this.drawSegments = [];
    this.texts = [];
    this.dimensions = [];
    this.modules = [];
    this.tracks = [];
    this.vias = [];
    this.zones = [];
    this.targets = [];
    this.copperLayerCount = 0;
    this.enabledLayers = [];
    this.visibleLayers = [];
    this.layerDescr = {};
};

exports.Board = Board;

var LSET = function () {
    function LSET() {
        _classCallCheck(this, LSET);

        this._layerIds = [];

        for (var _len2 = arguments.length, layerIds = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            layerIds[_key2] = arguments[_key2];
        }

        this._layerIds = layerIds;
    }

    _createClass(LSET, [{
        key: Symbol.iterator,
        value: function value() {
            return this._layerIds[Symbol.iterator]();
        }
    }, {
        key: "add",
        value: function add() {
            for (var _len3 = arguments.length, layerIds = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                layerIds[_key3] = arguments[_key3];
            }

            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = layerIds[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var id = _step2.value;

                    if (this._layerIds.indexOf(id) === -1) {
                        this._layerIds.push(id);
                    }
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }

            return this;
        }
    }, {
        key: "has",
        value: function has(id) {
            return this._layerIds.indexOf(id) !== -1;
        }
    }, {
        key: "delete",
        value: function _delete(id) {
            var pos = this._layerIds.indexOf(id);
            if (pos === -1) return this;
            this._layerIds.splice(pos, 1);
            return this;
        }
    }, {
        key: "is",
        value: function is(o) {
            return this.length === o.length && LSET.intersect(this, o).length === this.length;
        }
    }, {
        key: "entries",
        value: function entries() {
            return this._layerIds;
        }
    }, {
        key: "union",
        value: function union(o) {
            this.add.apply(this, _toConsumableArray(o._layerIds));
            return this;
        }
    }, {
        key: "intersect",
        value: function intersect(o) {
            this._layerIds = this._layerIds.filter(function (id) {
                return o._layerIds.indexOf(id) !== -1;
            });
            return this;
        }
    }, {
        key: "except",
        value: function except(o) {
            this._layerIds = this._layerIds.filter(function (id) {
                return o._layerIds.indexOf(id) === -1;
            });
            return this;
        }
    }, {
        key: "length",
        get: function get() {
            return this._layerIds.length;
        }
    }], [{
        key: "AllCuMask",
        value: function AllCuMask(count) {
            var internalCu = new LSET(PCB_LAYER_ID.In1_Cu, PCB_LAYER_ID.In2_Cu, PCB_LAYER_ID.In3_Cu, PCB_LAYER_ID.In4_Cu, PCB_LAYER_ID.In5_Cu, PCB_LAYER_ID.In6_Cu, PCB_LAYER_ID.In7_Cu, PCB_LAYER_ID.In8_Cu, PCB_LAYER_ID.In9_Cu, PCB_LAYER_ID.In10_Cu, PCB_LAYER_ID.In11_Cu, PCB_LAYER_ID.In12_Cu, PCB_LAYER_ID.In13_Cu, PCB_LAYER_ID.In14_Cu, PCB_LAYER_ID.In15_Cu, PCB_LAYER_ID.In16_Cu, PCB_LAYER_ID.In17_Cu, PCB_LAYER_ID.In18_Cu, PCB_LAYER_ID.In19_Cu, PCB_LAYER_ID.In20_Cu, PCB_LAYER_ID.In21_Cu, PCB_LAYER_ID.In22_Cu, PCB_LAYER_ID.In23_Cu, PCB_LAYER_ID.In24_Cu, PCB_LAYER_ID.In25_Cu, PCB_LAYER_ID.In26_Cu, PCB_LAYER_ID.In27_Cu, PCB_LAYER_ID.In28_Cu, PCB_LAYER_ID.In29_Cu, PCB_LAYER_ID.In30_Cu);
            var fbCu = new LSET(PCB_LAYER_ID.F_Cu, PCB_LAYER_ID.B_Cu);
            return LSET.union(internalCu, fbCu);
        }
    }, {
        key: "Name",
        value: function Name(layerId) {
            switch (layerId) {
                case PCB_LAYER_ID.F_Cu:
                    return "F.Cu";
                case PCB_LAYER_ID.In1_Cu:
                    return "In1.Cu";
                case PCB_LAYER_ID.In2_Cu:
                    return "In2.Cu";
                case PCB_LAYER_ID.In3_Cu:
                    return "In3.Cu";
                case PCB_LAYER_ID.In4_Cu:
                    return "In4.Cu";
                case PCB_LAYER_ID.In5_Cu:
                    return "In5.Cu";
                case PCB_LAYER_ID.In6_Cu:
                    return "In6.Cu";
                case PCB_LAYER_ID.In7_Cu:
                    return "In7.Cu";
                case PCB_LAYER_ID.In8_Cu:
                    return "In8.Cu";
                case PCB_LAYER_ID.In9_Cu:
                    return "In9.Cu";
                case PCB_LAYER_ID.In10_Cu:
                    return "In10.Cu";
                case PCB_LAYER_ID.In11_Cu:
                    return "In11.Cu";
                case PCB_LAYER_ID.In12_Cu:
                    return "In12.Cu";
                case PCB_LAYER_ID.In13_Cu:
                    return "In13.Cu";
                case PCB_LAYER_ID.In14_Cu:
                    return "In14.Cu";
                case PCB_LAYER_ID.In15_Cu:
                    return "In15.Cu";
                case PCB_LAYER_ID.In16_Cu:
                    return "In16.Cu";
                case PCB_LAYER_ID.In17_Cu:
                    return "In17.Cu";
                case PCB_LAYER_ID.In18_Cu:
                    return "In18.Cu";
                case PCB_LAYER_ID.In19_Cu:
                    return "In19.Cu";
                case PCB_LAYER_ID.In20_Cu:
                    return "In20.Cu";
                case PCB_LAYER_ID.In21_Cu:
                    return "In21.Cu";
                case PCB_LAYER_ID.In22_Cu:
                    return "In22.Cu";
                case PCB_LAYER_ID.In23_Cu:
                    return "In23.Cu";
                case PCB_LAYER_ID.In24_Cu:
                    return "In24.Cu";
                case PCB_LAYER_ID.In25_Cu:
                    return "In25.Cu";
                case PCB_LAYER_ID.In26_Cu:
                    return "In26.Cu";
                case PCB_LAYER_ID.In27_Cu:
                    return "In27.Cu";
                case PCB_LAYER_ID.In28_Cu:
                    return "In28.Cu";
                case PCB_LAYER_ID.In29_Cu:
                    return "In29.Cu";
                case PCB_LAYER_ID.In30_Cu:
                    return "In30.Cu";
                case PCB_LAYER_ID.B_Cu:
                    return "B.Cu";
                // Technicals
                case PCB_LAYER_ID.B_Adhes:
                    return "B.Adhes";
                case PCB_LAYER_ID.F_Adhes:
                    return "F.Adhes";
                case PCB_LAYER_ID.B_Paste:
                    return "B.Paste";
                case PCB_LAYER_ID.F_Paste:
                    return "F.Paste";
                case PCB_LAYER_ID.B_SilkS:
                    return "B.SilkS";
                case PCB_LAYER_ID.F_SilkS:
                    return "F.SilkS";
                case PCB_LAYER_ID.B_Mask:
                    return "B.Mask";
                case PCB_LAYER_ID.F_Mask:
                    return "F.Mask";
                // Users
                case PCB_LAYER_ID.Dwgs_User:
                    return "Dwgs.User";
                case PCB_LAYER_ID.Cmts_User:
                    return "Cmts.User";
                case PCB_LAYER_ID.Eco1_User:
                    return "Eco1.User";
                case PCB_LAYER_ID.Eco2_User:
                    return "Eco2.User";
                case PCB_LAYER_ID.Edge_Cuts:
                    return "Edge.Cuts";
                case PCB_LAYER_ID.Margin:
                    return "Margin";
                // Footprint
                case PCB_LAYER_ID.F_CrtYd:
                    return "F.CrtYd";
                case PCB_LAYER_ID.B_CrtYd:
                    return "B.CrtYd";
                case PCB_LAYER_ID.F_Fab:
                    return "F.Fab";
                case PCB_LAYER_ID.B_Fab:
                    return "B.Fab";
                default:
                    throw "layerId is out of range";
            }
        }
    }, {
        key: "intersect",
        value: function intersect(a, b) {
            return new (Function.prototype.bind.apply(this, [null].concat(_toConsumableArray(a._layerIds))))().intersect(b);
        }
    }, {
        key: "union",
        value: function union(a, b) {
            return new (Function.prototype.bind.apply(this, [null].concat(_toConsumableArray(a._layerIds))))().union(b);
        }
    }]);

    return LSET;
}();

exports.LSET = LSET;

var ViaDimension = function () {
    function ViaDimension(diameter, drill) {
        _classCallCheck(this, ViaDimension);

        this.diameter = diameter;
        this.drill = drill;
    }

    _createClass(ViaDimension, [{
        key: "is",
        value: function is(o) {
            return this.diameter === o.diameter && this.drill === o.diameter;
        }
    }, {
        key: "lessThan",
        value: function lessThan(o) {
            if (this.diameter != o.diameter) {
                return this.diameter < o.diameter;
            }
            return this.drill < o.drill;
        }
    }]);

    return ViaDimension;
}();

exports.ViaDimension = ViaDimension;

var BoardDesignSetting = function BoardDesignSetting() {
    _classCallCheck(this, BoardDesignSetting);

    this.viasDimenstionsList = [];
    this.trackWidthList = [];
    this.netClasses = new NetClasses();
    this.solderMaskMargin = 0;
    this.solderMaskMinWidth = 0;
};

exports.BoardDesignSetting = BoardDesignSetting;
var ViaType;
(function (ViaType) {
    ViaType[ViaType["VIA_BLIND_BURIED"] = 0] = "VIA_BLIND_BURIED";
    ViaType[ViaType["VIA_THROUGH"] = 1] = "VIA_THROUGH";
    ViaType[ViaType["VIA_MICROVIA"] = 2] = "VIA_MICROVIA";
})(ViaType = exports.ViaType || (exports.ViaType = {}));

var NetClasses = function () {
    function NetClasses() {
        _classCallCheck(this, NetClasses);

        this.netClasses = {};
    }

    _createClass(NetClasses, [{
        key: "add",
        value: function add(nc) {
            if (nc.name === 'Default') {
                this.default = nc;
            } else {
                this.netClasses[nc.name] = nc;
            }
        }
    }]);

    return NetClasses;
}();

exports.NetClasses = NetClasses;

var NetClass = function NetClass() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

    _classCallCheck(this, NetClass);

    this.members = [];
};

exports.NetClass = NetClass;

var BoardItem = function BoardItem() {
    _classCallCheck(this, BoardItem);

    this.pos = new kicad_common_1.Point(0, 0);
    this.layer = 0;
    this.tstamp = 0;
    this.status = 0;
    this.attributes = 0;
};

var NetInfoItem = function (_BoardItem) {
    _inherits(NetInfoItem, _BoardItem);

    function NetInfoItem(parent, name) {
        var netCode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;

        _classCallCheck(this, NetInfoItem);

        var _this = _possibleConstructorReturn(this, (NetInfoItem.__proto__ || Object.getPrototypeOf(NetInfoItem)).call(this));

        _this.board = parent;
        _this.name = name;
        _this.netCode = netCode;
        return _this;
    }

    return NetInfoItem;
}(BoardItem);

exports.NetInfoItem = NetInfoItem;
// T_STROKE
var Shape;
(function (Shape) {
    Shape[Shape["SEGMENT"] = 0] = "SEGMENT";
    Shape[Shape["RECT"] = 1] = "RECT";
    Shape[Shape["ARC"] = 2] = "ARC";
    Shape[Shape["CIRCLE"] = 3] = "CIRCLE";
    Shape[Shape["POLYGON"] = 4] = "POLYGON";
    Shape[Shape["CURVE"] = 5] = "CURVE";
    Shape[Shape["LAST"] = 6] = "LAST"; ///< last value for this list
})(Shape = exports.Shape || (exports.Shape = {}));

var DrawSegment = function (_BoardItem2) {
    _inherits(DrawSegment, _BoardItem2);

    function DrawSegment() {
        _classCallCheck(this, DrawSegment);

        var _this2 = _possibleConstructorReturn(this, (DrawSegment.__proto__ || Object.getPrototypeOf(DrawSegment)).apply(this, arguments));

        _this2.bezierPoints = [];
        _this2.polyPoints = [];
        return _this2;
    }

    return DrawSegment;
}(BoardItem);

exports.DrawSegment = DrawSegment;

var EdgeModule = function (_DrawSegment) {
    _inherits(EdgeModule, _DrawSegment);

    function EdgeModule() {
        _classCallCheck(this, EdgeModule);

        return _possibleConstructorReturn(this, (EdgeModule.__proto__ || Object.getPrototypeOf(EdgeModule)).apply(this, arguments));
    }

    return EdgeModule;
}(DrawSegment);

exports.EdgeModule = EdgeModule;

var Text = function (_BoardItem3) {
    _inherits(Text, _BoardItem3);

    function Text() {
        _classCallCheck(this, Text);

        var _this4 = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));

        _this4.text = "";
        _this4.angle = 0;
        _this4.bold = false;
        _this4.italic = false;
        _this4.mirror = false;
        _this4.hjustify = kicad_common_1.TextHjustify.CENTER;
        _this4.vjustify = kicad_common_1.TextVjustify.CENTER;
        _this4.visibility = true;
        return _this4;
    }

    return Text;
}(BoardItem);

exports.Text = Text;
var Unit;
(function (Unit) {
    Unit["MM"] = "mm";
    Unit["INCH"] = "inch";
})(Unit = exports.Unit || (exports.Unit = {}));

var Dimension = function (_BoardItem4) {
    _inherits(Dimension, _BoardItem4);

    function Dimension() {
        _classCallCheck(this, Dimension);

        var _this5 = _possibleConstructorReturn(this, (Dimension.__proto__ || Object.getPrototypeOf(Dimension)).apply(this, arguments));

        _this5.shape = 0;
        _this5.unit = Unit.MM;
        return _this5;
    }

    return Dimension;
}(BoardItem);

exports.Dimension = Dimension;

var Module = function (_BoardItem5) {
    _inherits(Module, _BoardItem5);

    function Module() {
        _classCallCheck(this, Module);

        var _this6 = _possibleConstructorReturn(this, (Module.__proto__ || Object.getPrototypeOf(Module)).apply(this, arguments));

        _this6.orientation = 0;
        _this6.placementCost90 = 0;
        _this6.placementCost180 = 0;
        _this6.solderMaskMargin = 0;
        _this6.solderPasteMargin = 0;
        _this6.solderPasteRatio = 0;
        _this6.clearance = 0;
        _this6.zoneConnection = 0;
        _this6.thermalWidth = 0;
        _this6.thermalGap = 0;
        _this6.graphics = [];
        _this6.pads = [];
        return _this6;
    }

    return Module;
}(BoardItem);

exports.Module = Module;

var LibId = function () {
    function LibId(nickname, itemname, revision) {
        _classCallCheck(this, LibId);

        this.nickname = nickname;
    }

    _createClass(LibId, null, [{
        key: "parse",
        value: function parse(id) {
            var _id$split = id.split(/\//),
                _id$split2 = _slicedToArray(_id$split, 2),
                name = _id$split2[0],
                rev = _id$split2[1];

            var _name$split = name.split(/:/),
                _name$split2 = _slicedToArray(_name$split, 2),
                nickname = _name$split2[0],
                itemname = _name$split2[1];

            return new this(nickname, itemname, rev);
        }
    }]);

    return LibId;
}();

exports.LibId = LibId;

var Pad = function Pad() {
    _classCallCheck(this, Pad);

    this.drillSize = new kicad_common_1.Size(0, 0);
    this.orientation = 0;
};

exports.Pad = Pad;
var PadShape;
(function (PadShape) {
    PadShape[PadShape["CIRCLE"] = 0] = "CIRCLE";
    PadShape[PadShape["RECT"] = 1] = "RECT";
    PadShape[PadShape["OVAL"] = 2] = "OVAL";
    PadShape[PadShape["TRAPEZOID"] = 3] = "TRAPEZOID";
    PadShape[PadShape["ROUNDRECT"] = 4] = "ROUNDRECT";
})(PadShape = exports.PadShape || (exports.PadShape = {}));
;
var PadAttr;
(function (PadAttr) {
    PadAttr["STANDARD"] = "STANDARD";
    PadAttr["SMD"] = "SMD";
    PadAttr["CONN"] = "CONN";
    PadAttr["HOLE_NOT_PLATED"] = "HOLE_NOT_PLATED";
})(PadAttr = exports.PadAttr || (exports.PadAttr = {}));
;

var TextModule = function (_Text) {
    _inherits(TextModule, _Text);

    function TextModule() {
        _classCallCheck(this, TextModule);

        var _this7 = _possibleConstructorReturn(this, (TextModule.__proto__ || Object.getPrototypeOf(TextModule)).apply(this, arguments));

        _this7.type = TextModuleType.user;
        return _this7;
    }

    return TextModule;
}(Text);

exports.TextModule = TextModule;
var TextModuleType;
(function (TextModuleType) {
    TextModuleType["reference"] = "reference";
    TextModuleType["value"] = "value";
    TextModuleType["user"] = "user";
})(TextModuleType = exports.TextModuleType || (exports.TextModuleType = {}));
var MODULE_ATTR;
(function (MODULE_ATTR) {
    MODULE_ATTR[MODULE_ATTR["MOD_DEFAULT"] = 0] = "MOD_DEFAULT";
    MODULE_ATTR[MODULE_ATTR["MOD_CMS"] = 1] = "MOD_CMS";
    ///< (usually SMD footprints)
    MODULE_ATTR[MODULE_ATTR["MOD_VIRTUAL"] = 2] = "MOD_VIRTUAL"; ///< Virtual component: when created by copper shapes on
    ///<  board (Like edge card connectors, mounting hole...)
})(MODULE_ATTR = exports.MODULE_ATTR || (exports.MODULE_ATTR = {}));
;

var Track = function (_BoardItem6) {
    _inherits(Track, _BoardItem6);

    function Track() {
        _classCallCheck(this, Track);

        return _possibleConstructorReturn(this, (Track.__proto__ || Object.getPrototypeOf(Track)).apply(this, arguments));
    }

    return Track;
}(BoardItem);

exports.Track = Track;
(function (ViaType) {
    ViaType[ViaType["THROUGH"] = 3] = "THROUGH";
    ViaType[ViaType["BLIND_BURIED"] = 2] = "BLIND_BURIED";
    ViaType[ViaType["MICROVIA"] = 1] = "MICROVIA";
    ViaType[ViaType["NOT_DEFINED"] = 0] = "NOT_DEFINED"; /* not yet used */
})(ViaType = exports.ViaType || (exports.ViaType = {}));

var Via = function (_BoardItem7) {
    _inherits(Via, _BoardItem7);

    function Via() {
        _classCallCheck(this, Via);

        var _this9 = _possibleConstructorReturn(this, (Via.__proto__ || Object.getPrototypeOf(Via)).apply(this, arguments));

        _this9.viaType = ViaType.THROUGH;
        return _this9;
    }

    return Via;
}(BoardItem);

exports.Via = Via;

var Zone = function (_BoardItem8) {
    _inherits(Zone, _BoardItem8);

    function Zone() {
        _classCallCheck(this, Zone);

        var _this10 = _possibleConstructorReturn(this, (Zone.__proto__ || Object.getPrototypeOf(Zone)).apply(this, arguments));

        _this10.priority = 0;
        _this10.filled = false;
        _this10.fillMode = 0;
        _this10.keepout = false;
        _this10.polygons = [];
        _this10.filledPolygons = [];
        _this10.fillSegments = [];
        return _this10;
    }

    _createClass(Zone, [{
        key: "setHatch",
        value: function setHatch(hashStyle, hatchPitch) {}
    }]);

    return Zone;
}(BoardItem);

exports.Zone = Zone;
var HatchStyle;
(function (HatchStyle) {
    HatchStyle[HatchStyle["NO_HATCH"] = 0] = "NO_HATCH";
    HatchStyle[HatchStyle["DIAGONAL_EDGE"] = 1] = "DIAGONAL_EDGE";
    HatchStyle[HatchStyle["DIAGONAL_FULL"] = 2] = "DIAGONAL_FULL";
})(HatchStyle = exports.HatchStyle || (exports.HatchStyle = {}));
var PadConnection;
(function (PadConnection) {
    PadConnection[PadConnection["CONN_FULL"] = 0] = "CONN_FULL";
    PadConnection[PadConnection["CONN_NONE"] = 1] = "CONN_NONE";
    PadConnection[PadConnection["CONN_THT_THERMAL"] = 2] = "CONN_THT_THERMAL";
})(PadConnection = exports.PadConnection || (exports.PadConnection = {}));
var CornerSmoothingType;
(function (CornerSmoothingType) {
    CornerSmoothingType[CornerSmoothingType["NONE"] = 0] = "NONE";
    CornerSmoothingType[CornerSmoothingType["CHAMFER"] = 1] = "CHAMFER";
    CornerSmoothingType[CornerSmoothingType["FILLET"] = 2] = "FILLET";
})(CornerSmoothingType = exports.CornerSmoothingType || (exports.CornerSmoothingType = {}));

var Segment = function Segment(start, end) {
    _classCallCheck(this, Segment);

    this.start = start;
    this.end = end;
};

exports.Segment = Segment;

var Target = function (_BoardItem9) {
    _inherits(Target, _BoardItem9);

    function Target() {
        _classCallCheck(this, Target);

        return _possibleConstructorReturn(this, (Target.__proto__ || Object.getPrototypeOf(Target)).apply(this, arguments));
    }

    return Target;
}(BoardItem);

exports.Target = Target;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * This program source code file is part of kicad-utils.
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var kicad_common_1 = __webpack_require__(31);
var kicad_strokefont_data_1 = __webpack_require__(306);
var INTERLINE_PITCH_RATIO = 1.5;
var OVERBAR_POSITION_FACTOR = 1.22;
var BOLD_FACTOR = 1.3;
var STROKE_FONT_SCALE = 1.0 / 21.0;
var ITALIC_TILT = 1.0 / 8;
// common/drawtxt.cpp
// common/gal/stroke_font.cpp

var Glyph = function () {
    function Glyph() {
        _classCallCheck(this, Glyph);

        this.lines = [];
    }

    _createClass(Glyph, [{
        key: "computeBoundingBox",
        value: function computeBoundingBox() {
            var points = [];
            var rect = new kicad_common_1.Rect(0, 0, this.endX - this.startX, 0);
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = this.lines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var line = _step.value;
                    var _iteratorNormalCompletion2 = true;
                    var _didIteratorError2 = false;
                    var _iteratorError2 = undefined;

                    try {
                        for (var _iterator2 = line[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                            var point = _step2.value;

                            rect = rect.merge(new kicad_common_1.Rect(0, 0, this.endX - this.startX, point.y).normalize());
                        }
                    } catch (err) {
                        _didIteratorError2 = true;
                        _iteratorError2 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion2 && _iterator2.return) {
                                _iterator2.return();
                            }
                        } finally {
                            if (_didIteratorError2) {
                                throw _iteratorError2;
                            }
                        }
                    }
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            this.boundingBox = rect;
        }
    }]);

    return Glyph;
}();

exports.Glyph = Glyph;

var StrokeFont = function () {
    function StrokeFont() {
        _classCallCheck(this, StrokeFont);

        this.glyphs = [];
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
            for (var _iterator3 = kicad_strokefont_data_1.STROKE_FONT[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                var def = _step3.value;

                var glyph = new Glyph();
                var points = [];
                var SERIALIZE_OFFSET = 'R'.charCodeAt(0);
                var FONT_OFFSET = -10;
                var glyphStartX = (def.charCodeAt(0) - SERIALIZE_OFFSET) * STROKE_FONT_SCALE;
                var glyphEndX = (def.charCodeAt(1) - SERIALIZE_OFFSET) * STROKE_FONT_SCALE;
                for (var i = 2; i < def.length; i += 2) {
                    if (def[i] === ' ' && def[i + 1] === 'R') {
                        // raise pen
                        if (points.length) {
                            glyph.lines.push(points.slice(0));
                            points.length = 0;
                        }
                    } else {
                        var x = (def.charCodeAt(i) - SERIALIZE_OFFSET) * STROKE_FONT_SCALE - glyphStartX;
                        var y = (def.charCodeAt(i + 1) - SERIALIZE_OFFSET + FONT_OFFSET) * STROKE_FONT_SCALE;
                        points.push(new kicad_common_1.Point(x, y));
                    }
                }
                if (points.length) {
                    glyph.lines.push(points.slice(0));
                }
                glyph.startX = glyphStartX;
                glyph.endX = glyphEndX;
                glyph.computeBoundingBox();
                this.glyphs.push(glyph);
            }
        } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                    _iterator3.return();
                }
            } finally {
                if (_didIteratorError3) {
                    throw _iteratorError3;
                }
            }
        }
    }

    _createClass(StrokeFont, [{
        key: "getInterline",
        value: function getInterline(size, lineWidth) {
            return size * INTERLINE_PITCH_RATIO + lineWidth;
        }
    }, {
        key: "computeTextLineSize",
        value: function computeTextLineSize(line, size, lineWidth) {
            var italic = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

            return this.computeStringBoundaryLimits(line, size, lineWidth, italic).width;
        }
    }, {
        key: "computeStringBoundaryLimits",
        value: function computeStringBoundaryLimits(line, size, lineWidth) {
            var italic = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

            var ymax = 0;
            var ymin = 0;
            var width = 0;
            for (var i = 0, len = line.length; i < len; i++) {
                var c = line.charCodeAt(i);
                var n = c - ' '.charCodeAt(0);
                var glyph = this.glyphs[n] || this.glyphs['?'.charCodeAt(0) - ' '.charCodeAt(0)];
                width += glyph.boundingBox.width;
                ymax = Math.max(ymax, glyph.boundingBox.pos1.y, glyph.boundingBox.pos2.y);
                ymin = Math.min(ymin, glyph.boundingBox.pos1.y, glyph.boundingBox.pos2.y);
            }
            width = width * size + lineWidth;
            var height = size + lineWidth;
            if (italic) {
                width += height * ITALIC_TILT;
            }
            return {
                width: width,
                height: height,
                topLimit: ymax * size,
                bottomLimit: ymin * size
            };
        }
    }, {
        key: "drawGlyph",
        value: function drawGlyph(plotter, p, glyph, size, italic) {
            var _iteratorNormalCompletion4 = true;
            var _didIteratorError4 = false;
            var _iteratorError4 = undefined;

            try {
                for (var _iterator4 = glyph.lines[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                    var line = _step4.value;

                    {
                        var x = line[0].x * size + p.x;
                        var y = line[0].y * size + p.y;
                        if (italic) {
                            x -= y * ITALIC_TILT;
                        }
                        plotter.moveTo(x, y);
                    }
                    for (var i = 1, len = line.length; i < len; i++) {
                        var point = line[i];
                        var _x3 = point.x * size + p.x;
                        var _y = point.y * size + p.y;
                        if (italic) {
                            _x3 -= _y * ITALIC_TILT;
                        }
                        plotter.lineTo(_x3, _y);
                    }
                    plotter.finishPen();
                }
            } catch (err) {
                _didIteratorError4 = true;
                _iteratorError4 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion4 && _iterator4.return) {
                        _iterator4.return();
                    }
                } finally {
                    if (_didIteratorError4) {
                        throw _iteratorError4;
                    }
                }
            }
        }
    }, {
        key: "drawLineText",
        value: function drawLineText(plotter, p, line, size, lineWidth, hjustify, vjustify, italic) {
            var offset = lineWidth / 2;
            if (hjustify === kicad_common_1.TextHjustify.LEFT) {
                offset += 0;
            } else if (hjustify === kicad_common_1.TextHjustify.CENTER) {
                offset += -this.computeTextLineSize(line, size, lineWidth) / 2;
            } else if (hjustify === kicad_common_1.TextHjustify.RIGHT) {
                offset += -this.computeTextLineSize(line, size, lineWidth);
            }
            for (var i = 0, len = line.length; i < len; i++) {
                var c = line.charCodeAt(i);
                var n = c - ' '.charCodeAt(0);
                var glyph = this.glyphs[n];
                this.drawGlyph(plotter, { x: offset + p.x, y: p.y }, glyph, size, italic);
                offset += glyph.boundingBox.pos2.x * size;
            }
        }
    }, {
        key: "drawText",
        value: function drawText(plotter, p, text, size, lineWidth, angle, hjustify, vjustify, italic, bold) {
            if (lineWidth === 0 && bold) {
                lineWidth = size / 5.0;
            }
            lineWidth = this.clampTextPenSize(lineWidth, size, bold);
            plotter.save();
            plotter.setCurrentLineWidth(lineWidth * BOLD_FACTOR);
            plotter.translate(p.x, p.y);
            if (size < 0) {
                size = -size;
                plotter.scale(-1, 1);
            }
            plotter.rotate(-kicad_common_1.DECIDEG2RAD(angle));
            var offset = 0;
            var lines = text.split(/\n/);
            if (vjustify === kicad_common_1.TextVjustify.TOP) {
                offset = size * lines.length;
            } else if (vjustify === kicad_common_1.TextVjustify.CENTER) {
                offset = size * lines.length / 2;
            } else if (vjustify === kicad_common_1.TextVjustify.BOTTOM) {
                offset = 0;
            }
            var _iteratorNormalCompletion5 = true;
            var _didIteratorError5 = false;
            var _iteratorError5 = undefined;

            try {
                for (var _iterator5 = lines[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                    var line = _step5.value;

                    this.drawLineText(plotter, { x: 0, y: offset }, line, size, lineWidth, hjustify, vjustify, italic);
                    offset += size * INTERLINE_PITCH_RATIO + lineWidth;
                }
            } catch (err) {
                _didIteratorError5 = true;
                _iteratorError5 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion5 && _iterator5.return) {
                        _iterator5.return();
                    }
                } finally {
                    if (_didIteratorError5) {
                        throw _iteratorError5;
                    }
                }
            }

            plotter.restore();
        }
    }, {
        key: "clampTextPenSize",
        value: function clampTextPenSize(lineWidth, size, bold) {
            var scale = bold ? 4.0 : 6.0;
            var max = Math.abs(size) / scale;
            if (lineWidth > max) {
                return max;
            } else {
                return lineWidth;
            }
        }
    }], [{
        key: "instance",
        get: function get() {
            if (!this._instance) this._instance = new StrokeFont();
            return this._instance;
        }
    }]);

    return StrokeFont;
}();

exports.StrokeFont = StrokeFont;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 *
 *
 * @author Jerry Bendy <jerry@icewingcc.com>
 * @licence MIT
 *
 */

(function(self) {
    'use strict';

    var nativeURLSearchParams = self.URLSearchParams ? self.URLSearchParams : null,
        isSupportObjectConstructor = nativeURLSearchParams && (new nativeURLSearchParams({a: 1})).toString() === 'a=1',
        __URLSearchParams__ = "__URLSearchParams__",
        prototype = URLSearchParamsPolyfill.prototype,
        iterable = !!(self.Symbol && self.Symbol.iterator);

    if (nativeURLSearchParams && isSupportObjectConstructor) {
        return;
    }


    /**
     * Make a URLSearchParams instance
     *
     * @param {object|string|URLSearchParams} search
     * @constructor
     */
    function URLSearchParamsPolyfill(search) {
        search = search || "";

        // support construct object with another URLSearchParams instance
        if (search instanceof URLSearchParams || search instanceof URLSearchParamsPolyfill) {
            search = search.toString();
        }

        this [__URLSearchParams__] = parseToDict(search);
    }


    /**
     * Appends a specified key/value pair as a new search parameter.
     *
     * @param {string} name
     * @param {string} value
     */
    prototype.append = function(name, value) {
        appendTo(this [__URLSearchParams__], name, value);
    };

    /**
     * Deletes the given search parameter, and its associated value,
     * from the list of all search parameters.
     *
     * @param {string} name
     */
    prototype.delete = function(name) {
        delete this [__URLSearchParams__] [name];
    };

    /**
     * Returns the first value associated to the given search parameter.
     *
     * @param {string} name
     * @returns {string|null}
     */
    prototype.get = function(name) {
        var dict = this [__URLSearchParams__];
        return name in dict ? dict[name][0] : null;
    };

    /**
     * Returns all the values association with a given search parameter.
     *
     * @param {string} name
     * @returns {Array}
     */
    prototype.getAll = function(name) {
        var dict = this [__URLSearchParams__];
        return name in dict ? dict [name].slice(0) : [];
    };

    /**
     * Returns a Boolean indicating if such a search parameter exists.
     *
     * @param {string} name
     * @returns {boolean}
     */
    prototype.has = function(name) {
        return name in this [__URLSearchParams__];
    };

    /**
     * Sets the value associated to a given search parameter to
     * the given value. If there were several values, delete the
     * others.
     *
     * @param {string} name
     * @param {string} value
     */
    prototype.set = function set(name, value) {
        this [__URLSearchParams__][name] = ['' + value];
    };

    /**
     * Returns a string containg a query string suitable for use in a URL.
     *
     * @returns {string}
     */
    prototype.toString = function() {
        var dict = this[__URLSearchParams__], query = [], i, key, name, value;
        for (key in dict) {
            name = encode(key);
            for (i = 0, value = dict[key]; i < value.length; i++) {
                query.push(name + '=' + encode(value[i]));
            }
        }
        return query.join('&');
    };


    /*
     * Apply polifill to global object and append other prototype into it
     */
    self.URLSearchParams = (nativeURLSearchParams && !isSupportObjectConstructor) ?
        new Proxy(nativeURLSearchParams, {
            construct: function(target, args) {
                return new target((new URLSearchParamsPolyfill(args[0]).toString()));
            }
        }) :
        URLSearchParamsPolyfill;


    var USPProto = self.URLSearchParams.prototype;

    USPProto.polyfill = true;

    /**
     *
     * @param {function} callback
     * @param {object} thisArg
     */
    USPProto.forEach = USPProto.forEach || function(callback, thisArg) {
        var dict = parseToDict(this.toString());
        Object.getOwnPropertyNames(dict).forEach(function(name) {
            dict[name].forEach(function(value) {
                callback.call(thisArg, value, name, this);
            }, this);
        }, this);
    };

    /**
     * Sort all name-value pairs
     */
    USPProto.sort = USPProto.sort || function() {
        var dict = parseToDict(this.toString()), keys = [], k, i, j;
        for (k in dict) {
            keys.push(k);
        }
        keys.sort();

        for (i = 0; i < keys.length; i++) {
            this.delete(keys[i]);
        }
        for (i = 0; i < keys.length; i++) {
            var key = keys[i], values = dict[key];
            for (j = 0; j < values.length; j++) {
                this.append(key, values[j]);
            }
        }
    };

    /**
     * Returns an iterator allowing to go through all keys of
     * the key/value pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.keys = USPProto.keys || function() {
        var items = [];
        this.forEach(function(item, name) {
            items.push([name]);
        });
        return makeIterator(items);
    };

    /**
     * Returns an iterator allowing to go through all values of
     * the key/value pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.values = USPProto.values || function() {
        var items = [];
        this.forEach(function(item) {
            items.push([item]);
        });
        return makeIterator(items);
    };

    /**
     * Returns an iterator allowing to go through all key/value
     * pairs contained in this object.
     *
     * @returns {function}
     */
    USPProto.entries = USPProto.entries || function() {
        var items = [];
        this.forEach(function(item, name) {
            items.push([name, item]);
        });
        return makeIterator(items);
    };


    if (iterable) {
        USPProto[self.Symbol.iterator] = USPProto[self.Symbol.iterator] || USPProto.entries;
    }


    function encode(str) {
        var replace = {
            '!': '%21',
            "'": '%27',
            '(': '%28',
            ')': '%29',
            '~': '%7E',
            '%20': '+',
            '%00': '\x00'
        };
        return encodeURIComponent(str).replace(/[!'\(\)~]|%20|%00/g, function(match) {
            return replace[match];
        });
    }

    function decode(str) {
        return decodeURIComponent(str.replace(/\+/g, ' '));
    }

    function makeIterator(arr) {
        var iterator = {
            next: function() {
                var value = arr.shift();
                return {done: value === undefined, value: value};
            }
        };

        if (iterable) {
            iterator[self.Symbol.iterator] = function() {
                return iterator;
            };
        }

        return iterator;
    }

    function parseToDict(search) {
        var dict = {};

        if (typeof search === "object") {
            for (var i in search) {
                if (search.hasOwnProperty(i)) {
                    var str = typeof search [i] === 'string' ? search [i] : JSON.stringify(search [i]);
                    appendTo(dict, i, str);
                }
            }

        } else {
            // remove first '?'
            if (search.indexOf("?") === 0) {
                search = search.slice(1);
            }

            var pairs = search.split("&");
            for (var j = 0; j < pairs.length; j++) {
                var value = pairs [j],
                    index = value.indexOf('=');

                if (-1 < index) {
                    appendTo(dict, decode(value.slice(0, index)), decode(value.slice(index + 1)));
                }
            }
        }

        return dict;
    }

    function appendTo(dict, name, value) {
        if (name in dict) {
            dict[name].push('' + value);
        } else {
            dict[name] = ['' + value];
        }
    }

})(typeof global !== 'undefined' ? global : (typeof window !== 'undefined' ? window : this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

__webpack_require__(121);

__webpack_require__(299);

__webpack_require__(300);

if (global._babelPolyfill) {
  throw new Error("only one instance of babel-polyfill is allowed");
}
global._babelPolyfill = true;

var DEFINE_PROPERTY = "defineProperty";
function define(O, key, value) {
  O[key] || Object[DEFINE_PROPERTY](O, key, {
    writable: true,
    configurable: true,
    value: value
  });
}

define(String.prototype, "padLeft", "".padStart);
define(String.prototype, "padRight", "".padEnd);

"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
  [][key] && define(Array, key, Function.call.bind([][key]));
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(122);
__webpack_require__(125);
__webpack_require__(126);
__webpack_require__(127);
__webpack_require__(128);
__webpack_require__(129);
__webpack_require__(130);
__webpack_require__(131);
__webpack_require__(132);
__webpack_require__(133);
__webpack_require__(134);
__webpack_require__(135);
__webpack_require__(136);
__webpack_require__(137);
__webpack_require__(138);
__webpack_require__(139);
__webpack_require__(140);
__webpack_require__(141);
__webpack_require__(142);
__webpack_require__(143);
__webpack_require__(144);
__webpack_require__(145);
__webpack_require__(146);
__webpack_require__(147);
__webpack_require__(148);
__webpack_require__(149);
__webpack_require__(150);
__webpack_require__(151);
__webpack_require__(152);
__webpack_require__(153);
__webpack_require__(154);
__webpack_require__(155);
__webpack_require__(156);
__webpack_require__(157);
__webpack_require__(158);
__webpack_require__(159);
__webpack_require__(160);
__webpack_require__(161);
__webpack_require__(162);
__webpack_require__(163);
__webpack_require__(164);
__webpack_require__(165);
__webpack_require__(166);
__webpack_require__(167);
__webpack_require__(168);
__webpack_require__(169);
__webpack_require__(170);
__webpack_require__(171);
__webpack_require__(172);
__webpack_require__(173);
__webpack_require__(174);
__webpack_require__(175);
__webpack_require__(176);
__webpack_require__(177);
__webpack_require__(178);
__webpack_require__(179);
__webpack_require__(180);
__webpack_require__(181);
__webpack_require__(182);
__webpack_require__(183);
__webpack_require__(184);
__webpack_require__(185);
__webpack_require__(186);
__webpack_require__(187);
__webpack_require__(188);
__webpack_require__(189);
__webpack_require__(190);
__webpack_require__(191);
__webpack_require__(192);
__webpack_require__(193);
__webpack_require__(194);
__webpack_require__(195);
__webpack_require__(196);
__webpack_require__(197);
__webpack_require__(198);
__webpack_require__(199);
__webpack_require__(200);
__webpack_require__(201);
__webpack_require__(202);
__webpack_require__(204);
__webpack_require__(205);
__webpack_require__(206);
__webpack_require__(207);
__webpack_require__(208);
__webpack_require__(209);
__webpack_require__(210);
__webpack_require__(213);
__webpack_require__(214);
__webpack_require__(215);
__webpack_require__(216);
__webpack_require__(217);
__webpack_require__(218);
__webpack_require__(219);
__webpack_require__(220);
__webpack_require__(221);
__webpack_require__(222);
__webpack_require__(223);
__webpack_require__(224);
__webpack_require__(225);
__webpack_require__(82);
__webpack_require__(226);
__webpack_require__(227);
__webpack_require__(104);
__webpack_require__(228);
__webpack_require__(229);
__webpack_require__(230);
__webpack_require__(231);
__webpack_require__(232);
__webpack_require__(105);
__webpack_require__(107);
__webpack_require__(108);
__webpack_require__(233);
__webpack_require__(234);
__webpack_require__(235);
__webpack_require__(236);
__webpack_require__(237);
__webpack_require__(238);
__webpack_require__(239);
__webpack_require__(240);
__webpack_require__(241);
__webpack_require__(242);
__webpack_require__(243);
__webpack_require__(244);
__webpack_require__(245);
__webpack_require__(246);
__webpack_require__(247);
__webpack_require__(248);
__webpack_require__(249);
__webpack_require__(250);
__webpack_require__(251);
__webpack_require__(252);
__webpack_require__(253);
__webpack_require__(254);
__webpack_require__(255);
__webpack_require__(256);
__webpack_require__(257);
__webpack_require__(258);
__webpack_require__(259);
__webpack_require__(260);
__webpack_require__(261);
__webpack_require__(262);
__webpack_require__(263);
__webpack_require__(264);
__webpack_require__(265);
__webpack_require__(266);
__webpack_require__(267);
__webpack_require__(268);
__webpack_require__(269);
__webpack_require__(270);
__webpack_require__(271);
__webpack_require__(272);
__webpack_require__(273);
__webpack_require__(274);
__webpack_require__(275);
__webpack_require__(276);
__webpack_require__(277);
__webpack_require__(278);
__webpack_require__(279);
__webpack_require__(280);
__webpack_require__(281);
__webpack_require__(282);
__webpack_require__(283);
__webpack_require__(284);
__webpack_require__(285);
__webpack_require__(286);
__webpack_require__(287);
__webpack_require__(288);
__webpack_require__(289);
__webpack_require__(290);
__webpack_require__(291);
__webpack_require__(292);
__webpack_require__(293);
__webpack_require__(294);
__webpack_require__(297);
__webpack_require__(298);
module.exports = __webpack_require__(24);

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global         = __webpack_require__(2)
  , has            = __webpack_require__(10)
  , DESCRIPTORS    = __webpack_require__(6)
  , $export        = __webpack_require__(0)
  , redefine       = __webpack_require__(12)
  , META           = __webpack_require__(29).KEY
  , $fails         = __webpack_require__(3)
  , shared         = __webpack_require__(50)
  , setToStringTag = __webpack_require__(41)
  , uid            = __webpack_require__(32)
  , wks            = __webpack_require__(5)
  , wksExt         = __webpack_require__(88)
  , wksDefine      = __webpack_require__(62)
  , keyOf          = __webpack_require__(123)
  , enumKeys       = __webpack_require__(124)
  , isArray        = __webpack_require__(65)
  , anObject       = __webpack_require__(1)
  , toIObject      = __webpack_require__(14)
  , toPrimitive    = __webpack_require__(21)
  , createDesc     = __webpack_require__(28)
  , _create        = __webpack_require__(36)
  , gOPNExt        = __webpack_require__(91)
  , $GOPD          = __webpack_require__(16)
  , $DP            = __webpack_require__(7)
  , $keys          = __webpack_require__(34)
  , gOPD           = $GOPD.f
  , dP             = $DP.f
  , gOPN           = gOPNExt.f
  , $Symbol        = global.Symbol
  , $JSON          = global.JSON
  , _stringify     = $JSON && $JSON.stringify
  , PROTOTYPE      = 'prototype'
  , HIDDEN         = wks('_hidden')
  , TO_PRIMITIVE   = wks('toPrimitive')
  , isEnum         = {}.propertyIsEnumerable
  , SymbolRegistry = shared('symbol-registry')
  , AllSymbols     = shared('symbols')
  , OPSymbols      = shared('op-symbols')
  , ObjectProto    = Object[PROTOTYPE]
  , USE_NATIVE     = typeof $Symbol == 'function'
  , QObject        = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function(){
  return _create(dP({}, 'a', {
    get: function(){ return dP(this, 'a', {value: 7}).a; }
  })).a != 7;
}) ? function(it, key, D){
  var protoDesc = gOPD(ObjectProto, key);
  if(protoDesc)delete ObjectProto[key];
  dP(it, key, D);
  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function(tag){
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
  return typeof it == 'symbol';
} : function(it){
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D){
  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if(has(AllSymbols, key)){
    if(!D.enumerable){
      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
      D = _create(D, {enumerable: createDesc(0, false)});
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P){
  anObject(it);
  var keys = enumKeys(P = toIObject(P))
    , i    = 0
    , l = keys.length
    , key;
  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P){
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key){
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
  it  = toIObject(it);
  key = toPrimitive(key, true);
  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
  var D = gOPD(it, key);
  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it){
  var names  = gOPN(toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
  var IS_OP  = it === ObjectProto
    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if(!USE_NATIVE){
  $Symbol = function Symbol(){
    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function(value){
      if(this === ObjectProto)$set.call(OPSymbols, value);
      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f   = $defineProperty;
  __webpack_require__(37).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(47).f  = $propertyIsEnumerable;
  __webpack_require__(52).f = $getOwnPropertySymbols;

  if(DESCRIPTORS && !__webpack_require__(33)){
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function(name){
    return wrap(wks(name));
  }
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

for(var symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function(key){
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key){
    if(isSymbol(key))return keyOf(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function(){ setter = true; },
  useSimple: function(){ setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it){
    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
    var args = [it]
      , i    = 1
      , replacer, $replacer;
    while(arguments.length > i)args.push(arguments[i++]);
    replacer = args[1];
    if(typeof replacer == 'function')$replacer = replacer;
    if($replacer || !isArray(replacer))replacer = function(key, value){
      if($replacer)value = $replacer.call(this, key, value);
      if(!isSymbol(value))return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(11)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys   = __webpack_require__(34)
  , toIObject = __webpack_require__(14);
module.exports = function(object, el){
  var O      = toIObject(object)
    , keys   = getKeys(O)
    , length = keys.length
    , index  = 0
    , key;
  while(length > index)if(O[key = keys[index++]] === el)return key;
};

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(34)
  , gOPS    = __webpack_require__(52)
  , pIE     = __webpack_require__(47);
module.exports = function(it){
  var result     = getKeys(it)
    , getSymbols = gOPS.f;
  if(getSymbols){
    var symbols = getSymbols(it)
      , isEnum  = pIE.f
      , i       = 0
      , key;
    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
  } return result;
};

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0)
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', {create: __webpack_require__(36)});

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperty: __webpack_require__(7).f});

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperties: __webpack_require__(90)});

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject                 = __webpack_require__(14)
  , $getOwnPropertyDescriptor = __webpack_require__(16).f;

__webpack_require__(22)('getOwnPropertyDescriptor', function(){
  return function getOwnPropertyDescriptor(it, key){
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject        = __webpack_require__(9)
  , $getPrototypeOf = __webpack_require__(17);

__webpack_require__(22)('getPrototypeOf', function(){
  return function getPrototypeOf(it){
    return $getPrototypeOf(toObject(it));
  };
});

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(9)
  , $keys    = __webpack_require__(34);

__webpack_require__(22)('keys', function(){
  return function keys(it){
    return $keys(toObject(it));
  };
});

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
__webpack_require__(22)('getOwnPropertyNames', function(){
  return __webpack_require__(91).f;
});

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.5 Object.freeze(O)
var isObject = __webpack_require__(4)
  , meta     = __webpack_require__(29).onFreeze;

__webpack_require__(22)('freeze', function($freeze){
  return function freeze(it){
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.17 Object.seal(O)
var isObject = __webpack_require__(4)
  , meta     = __webpack_require__(29).onFreeze;

__webpack_require__(22)('seal', function($seal){
  return function seal(it){
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.15 Object.preventExtensions(O)
var isObject = __webpack_require__(4)
  , meta     = __webpack_require__(29).onFreeze;

__webpack_require__(22)('preventExtensions', function($preventExtensions){
  return function preventExtensions(it){
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.12 Object.isFrozen(O)
var isObject = __webpack_require__(4);

__webpack_require__(22)('isFrozen', function($isFrozen){
  return function isFrozen(it){
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.13 Object.isSealed(O)
var isObject = __webpack_require__(4);

__webpack_require__(22)('isSealed', function($isSealed){
  return function isSealed(it){
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.11 Object.isExtensible(O)
var isObject = __webpack_require__(4);

__webpack_require__(22)('isExtensible', function($isExtensible){
  return function isExtensible(it){
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(0);

$export($export.S + $export.F, 'Object', {assign: __webpack_require__(92)});

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.10 Object.is(value1, value2)
var $export = __webpack_require__(0);
$export($export.S, 'Object', {is: __webpack_require__(93)});

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(0);
$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(67).set});

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(48)
  , test    = {};
test[__webpack_require__(5)('toStringTag')] = 'z';
if(test + '' != '[object z]'){
  __webpack_require__(12)(Object.prototype, 'toString', function toString(){
    return '[object ' + classof(this) + ']';
  }, true);
}

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = __webpack_require__(0);

$export($export.P, 'Function', {bind: __webpack_require__(94)});

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var dP         = __webpack_require__(7).f
  , createDesc = __webpack_require__(28)
  , has        = __webpack_require__(10)
  , FProto     = Function.prototype
  , nameRE     = /^\s*function ([^ (]*)/
  , NAME       = 'name';

var isExtensible = Object.isExtensible || function(){
  return true;
};

// 19.2.4.2 name
NAME in FProto || __webpack_require__(6) && dP(FProto, NAME, {
  configurable: true,
  get: function(){
    try {
      var that = this
        , name = ('' + that).match(nameRE)[1];
      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
      return name;
    } catch(e){
      return '';
    }
  }
});

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isObject       = __webpack_require__(4)
  , getPrototypeOf = __webpack_require__(17)
  , HAS_INSTANCE   = __webpack_require__(5)('hasInstance')
  , FunctionProto  = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(7).f(FunctionProto, HAS_INSTANCE, {value: function(O){
  if(typeof this != 'function' || !isObject(O))return false;
  if(!isObject(this.prototype))return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
  return false;
}});

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

var $export   = __webpack_require__(0)
  , $parseInt = __webpack_require__(95);
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

var $export     = __webpack_require__(0)
  , $parseFloat = __webpack_require__(96);
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global            = __webpack_require__(2)
  , has               = __webpack_require__(10)
  , cof               = __webpack_require__(18)
  , inheritIfRequired = __webpack_require__(69)
  , toPrimitive       = __webpack_require__(21)
  , fails             = __webpack_require__(3)
  , gOPN              = __webpack_require__(37).f
  , gOPD              = __webpack_require__(16).f
  , dP                = __webpack_require__(7).f
  , $trim             = __webpack_require__(42).trim
  , NUMBER            = 'Number'
  , $Number           = global[NUMBER]
  , Base              = $Number
  , proto             = $Number.prototype
  // Opera ~12 has broken Object#toString
  , BROKEN_COF        = cof(__webpack_require__(36)(proto)) == NUMBER
  , TRIM              = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function(argument){
  var it = toPrimitive(argument, false);
  if(typeof it == 'string' && it.length > 2){
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0)
      , third, radix, maxCode;
    if(first === 43 || first === 45){
      third = it.charCodeAt(2);
      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if(first === 48){
      switch(it.charCodeAt(1)){
        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default : return +it;
      }
      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if(code < 48 || code > maxCode)return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
  $Number = function Number(value){
    var it = arguments.length < 1 ? 0 : value
      , that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for(var keys = __webpack_require__(6) ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++){
    if(has(Base, key = keys[j]) && !has($Number, key)){
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__(12)(global, NUMBER, $Number);
}

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export      = __webpack_require__(0)
  , toInteger    = __webpack_require__(30)
  , aNumberValue = __webpack_require__(97)
  , repeat       = __webpack_require__(70)
  , $toFixed     = 1..toFixed
  , floor        = Math.floor
  , data         = [0, 0, 0, 0, 0, 0]
  , ERROR        = 'Number.toFixed: incorrect invocation!'
  , ZERO         = '0';

var multiply = function(n, c){
  var i  = -1
    , c2 = c;
  while(++i < 6){
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};
var divide = function(n){
  var i = 6
    , c = 0;
  while(--i >= 0){
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};
var numToString = function(){
  var i = 6
    , s = '';
  while(--i >= 0){
    if(s !== '' || i === 0 || data[i] !== 0){
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  } return s;
};
var pow = function(x, n, acc){
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function(x){
  var n  = 0
    , x2 = x;
  while(x2 >= 4096){
    n += 12;
    x2 /= 4096;
  }
  while(x2 >= 2){
    n  += 1;
    x2 /= 2;
  } return n;
};

$export($export.P + $export.F * (!!$toFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128..toFixed(0) !== '1000000000000000128'
) || !__webpack_require__(3)(function(){
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits){
    var x = aNumberValue(this, ERROR)
      , f = toInteger(fractionDigits)
      , s = ''
      , m = ZERO
      , e, z, j, k;
    if(f < 0 || f > 20)throw RangeError(ERROR);
    if(x != x)return 'NaN';
    if(x <= -1e21 || x >= 1e21)return String(x);
    if(x < 0){
      s = '-';
      x = -x;
    }
    if(x > 1e-21){
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if(e > 0){
        multiply(0, z);
        j = f;
        while(j >= 7){
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while(j >= 23){
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }
    if(f > 0){
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export      = __webpack_require__(0)
  , $fails       = __webpack_require__(3)
  , aNumberValue = __webpack_require__(97)
  , $toPrecision = 1..toPrecision;

$export($export.P + $export.F * ($fails(function(){
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function(){
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision){
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
  }
});

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.1 Number.EPSILON
var $export = __webpack_require__(0);

$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.2 Number.isFinite(number)
var $export   = __webpack_require__(0)
  , _isFinite = __webpack_require__(2).isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it){
    return typeof it == 'number' && _isFinite(it);
  }
});

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var $export = __webpack_require__(0);

$export($export.S, 'Number', {isInteger: __webpack_require__(98)});

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.4 Number.isNaN(number)
var $export = __webpack_require__(0);

$export($export.S, 'Number', {
  isNaN: function isNaN(number){
    return number != number;
  }
});

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.5 Number.isSafeInteger(number)
var $export   = __webpack_require__(0)
  , isInteger = __webpack_require__(98)
  , abs       = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number){
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = __webpack_require__(0);

$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = __webpack_require__(0);

$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

var $export     = __webpack_require__(0)
  , $parseFloat = __webpack_require__(96);
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

var $export   = __webpack_require__(0)
  , $parseInt = __webpack_require__(95);
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.3 Math.acosh(x)
var $export = __webpack_require__(0)
  , log1p   = __webpack_require__(99)
  , sqrt    = Math.sqrt
  , $acosh  = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x){
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.5 Math.asinh(x)
var $export = __webpack_require__(0)
  , $asinh  = Math.asinh;

function asinh(x){
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0 
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.7 Math.atanh(x)
var $export = __webpack_require__(0)
  , $atanh  = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0 
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x){
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.9 Math.cbrt(x)
var $export = __webpack_require__(0)
  , sign    = __webpack_require__(71);

$export($export.S, 'Math', {
  cbrt: function cbrt(x){
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.11 Math.clz32(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  clz32: function clz32(x){
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.12 Math.cosh(x)
var $export = __webpack_require__(0)
  , exp     = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x){
    return (exp(x = +x) + exp(-x)) / 2;
  }
});

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.14 Math.expm1(x)
var $export = __webpack_require__(0)
  , $expm1  = __webpack_require__(72);

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
var $export   = __webpack_require__(0)
  , sign      = __webpack_require__(71)
  , pow       = Math.pow
  , EPSILON   = pow(2, -52)
  , EPSILON32 = pow(2, -23)
  , MAX32     = pow(2, 127) * (2 - EPSILON32)
  , MIN32     = pow(2, -126);

var roundTiesToEven = function(n){
  return n + 1 / EPSILON - 1 / EPSILON;
};


$export($export.S, 'Math', {
  fround: function fround(x){
    var $abs  = Math.abs(x)
      , $sign = sign(x)
      , a, result;
    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
    a = (1 + EPSILON32 / EPSILON) * $abs;
    result = a - (a - $abs);
    if(result > MAX32 || result != result)return $sign * Infinity;
    return $sign * result;
  }
});

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = __webpack_require__(0)
  , abs     = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
    var sum  = 0
      , i    = 0
      , aLen = arguments.length
      , larg = 0
      , arg, div;
    while(i < aLen){
      arg = abs(arguments[i++]);
      if(larg < arg){
        div  = larg / arg;
        sum  = sum * div * div + 1;
        larg = arg;
      } else if(arg > 0){
        div  = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.18 Math.imul(x, y)
var $export = __webpack_require__(0)
  , $imul   = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * __webpack_require__(3)(function(){
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y){
    var UINT16 = 0xffff
      , xn = +x
      , yn = +y
      , xl = UINT16 & xn
      , yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.21 Math.log10(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  log10: function log10(x){
    return Math.log(x) / Math.LN10;
  }
});

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.20 Math.log1p(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {log1p: __webpack_require__(99)});

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.22 Math.log2(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  log2: function log2(x){
    return Math.log(x) / Math.LN2;
  }
});

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.28 Math.sign(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {sign: __webpack_require__(71)});

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.30 Math.sinh(x)
var $export = __webpack_require__(0)
  , expm1   = __webpack_require__(72)
  , exp     = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * __webpack_require__(3)(function(){
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x){
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.33 Math.tanh(x)
var $export = __webpack_require__(0)
  , expm1   = __webpack_require__(72)
  , exp     = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x){
    var a = expm1(x = +x)
      , b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.34 Math.trunc(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  trunc: function trunc(it){
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var $export        = __webpack_require__(0)
  , toIndex        = __webpack_require__(35)
  , fromCharCode   = String.fromCharCode
  , $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
    var res  = []
      , aLen = arguments.length
      , i    = 0
      , code;
    while(aLen > i){
      code = +arguments[i++];
      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

var $export   = __webpack_require__(0)
  , toIObject = __webpack_require__(14)
  , toLength  = __webpack_require__(8);

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite){
    var tpl  = toIObject(callSite.raw)
      , len  = toLength(tpl.length)
      , aLen = arguments.length
      , res  = []
      , i    = 0;
    while(len > i){
      res.push(String(tpl[i++]));
      if(i < aLen)res.push(String(arguments[i]));
    } return res.join('');
  }
});

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.1.3.25 String.prototype.trim()
__webpack_require__(42)('trim', function($trim){
  return function trim(){
    return $trim(this, 3);
  };
});

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at  = __webpack_require__(73)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(74)(String, 'String', function(iterated){
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , index = this._i
    , point;
  if(index >= O.length)return {value: undefined, done: true};
  point = $at(O, index);
  this._i += point.length;
  return {value: point, done: false};
});

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0)
  , $at     = __webpack_require__(73)(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos){
    return $at(this, pos);
  }
});

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

var $export   = __webpack_require__(0)
  , toLength  = __webpack_require__(8)
  , context   = __webpack_require__(76)
  , ENDS_WITH = 'endsWith'
  , $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * __webpack_require__(77)(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /*, endPosition = @length */){
    var that = context(this, searchString, ENDS_WITH)
      , endPosition = arguments.length > 1 ? arguments[1] : undefined
      , len    = toLength(that.length)
      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
      , search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export  = __webpack_require__(0)
  , context  = __webpack_require__(76)
  , INCLUDES = 'includes';

$export($export.P + $export.F * __webpack_require__(77)(INCLUDES), 'String', {
  includes: function includes(searchString /*, position = 0 */){
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: __webpack_require__(70)
});

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export     = __webpack_require__(0)
  , toLength    = __webpack_require__(8)
  , context     = __webpack_require__(76)
  , STARTS_WITH = 'startsWith'
  , $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__(77)(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /*, position = 0 */){
    var that   = context(this, searchString, STARTS_WITH)
      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
      , search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.2 String.prototype.anchor(name)
__webpack_require__(15)('anchor', function(createHTML){
  return function anchor(name){
    return createHTML(this, 'a', 'name', name);
  }
});

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.3 String.prototype.big()
__webpack_require__(15)('big', function(createHTML){
  return function big(){
    return createHTML(this, 'big', '', '');
  }
});

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.4 String.prototype.blink()
__webpack_require__(15)('blink', function(createHTML){
  return function blink(){
    return createHTML(this, 'blink', '', '');
  }
});

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.5 String.prototype.bold()
__webpack_require__(15)('bold', function(createHTML){
  return function bold(){
    return createHTML(this, 'b', '', '');
  }
});

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.6 String.prototype.fixed()
__webpack_require__(15)('fixed', function(createHTML){
  return function fixed(){
    return createHTML(this, 'tt', '', '');
  }
});

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.7 String.prototype.fontcolor(color)
__webpack_require__(15)('fontcolor', function(createHTML){
  return function fontcolor(color){
    return createHTML(this, 'font', 'color', color);
  }
});

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.8 String.prototype.fontsize(size)
__webpack_require__(15)('fontsize', function(createHTML){
  return function fontsize(size){
    return createHTML(this, 'font', 'size', size);
  }
});

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.9 String.prototype.italics()
__webpack_require__(15)('italics', function(createHTML){
  return function italics(){
    return createHTML(this, 'i', '', '');
  }
});

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.10 String.prototype.link(url)
__webpack_require__(15)('link', function(createHTML){
  return function link(url){
    return createHTML(this, 'a', 'href', url);
  }
});

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.11 String.prototype.small()
__webpack_require__(15)('small', function(createHTML){
  return function small(){
    return createHTML(this, 'small', '', '');
  }
});

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.12 String.prototype.strike()
__webpack_require__(15)('strike', function(createHTML){
  return function strike(){
    return createHTML(this, 'strike', '', '');
  }
});

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.13 String.prototype.sub()
__webpack_require__(15)('sub', function(createHTML){
  return function sub(){
    return createHTML(this, 'sub', '', '');
  }
});

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.14 String.prototype.sup()
__webpack_require__(15)('sup', function(createHTML){
  return function sup(){
    return createHTML(this, 'sup', '', '');
  }
});

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = __webpack_require__(0);

$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export     = __webpack_require__(0)
  , toObject    = __webpack_require__(9)
  , toPrimitive = __webpack_require__(21);

$export($export.P + $export.F * __webpack_require__(3)(function(){
  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
}), 'Date', {
  toJSON: function toJSON(key){
    var O  = toObject(this)
      , pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = __webpack_require__(0)
  , fails   = __webpack_require__(3)
  , getTime = Date.prototype.getTime;

var lz = function(num){
  return num > 9 ? num : '0' + num;
};

// PhantomJS / old WebKit has a broken implementations
$export($export.P + $export.F * (fails(function(){
  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
}) || !fails(function(){
  new Date(NaN).toISOString();
})), 'Date', {
  toISOString: function toISOString(){
    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
    var d = this
      , y = d.getUTCFullYear()
      , m = d.getUTCMilliseconds()
      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
  }
});

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

var DateProto    = Date.prototype
  , INVALID_DATE = 'Invalid Date'
  , TO_STRING    = 'toString'
  , $toString    = DateProto[TO_STRING]
  , getTime      = DateProto.getTime;
if(new Date(NaN) + '' != INVALID_DATE){
  __webpack_require__(12)(DateProto, TO_STRING, function toString(){
    var value = getTime.call(this);
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

var TO_PRIMITIVE = __webpack_require__(5)('toPrimitive')
  , proto        = Date.prototype;

if(!(TO_PRIMITIVE in proto))__webpack_require__(11)(proto, TO_PRIMITIVE, __webpack_require__(203));

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject    = __webpack_require__(1)
  , toPrimitive = __webpack_require__(21)
  , NUMBER      = 'number';

module.exports = function(hint){
  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__(0);

$export($export.S, 'Array', {isArray: __webpack_require__(65)});

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx            = __webpack_require__(25)
  , $export        = __webpack_require__(0)
  , toObject       = __webpack_require__(9)
  , call           = __webpack_require__(100)
  , isArrayIter    = __webpack_require__(78)
  , toLength       = __webpack_require__(8)
  , createProperty = __webpack_require__(79)
  , getIterFn      = __webpack_require__(80);

$export($export.S + $export.F * !__webpack_require__(55)(function(iter){ Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
    var O       = toObject(arrayLike)
      , C       = typeof this == 'function' ? this : Array
      , aLen    = arguments.length
      , mapfn   = aLen > 1 ? arguments[1] : undefined
      , mapping = mapfn !== undefined
      , index   = 0
      , iterFn  = getIterFn(O)
      , length, result, step, iterator;
    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for(result = new C(length); length > index; index++){
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export        = __webpack_require__(0)
  , createProperty = __webpack_require__(79);

// WebKit Array.of isn't generic
$export($export.S + $export.F * __webpack_require__(3)(function(){
  function F(){}
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */){
    var index  = 0
      , aLen   = arguments.length
      , result = new (typeof this == 'function' ? this : Array)(aLen);
    while(aLen > index)createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.13 Array.prototype.join(separator)
var $export   = __webpack_require__(0)
  , toIObject = __webpack_require__(14)
  , arrayJoin = [].join;

// fallback for not array-like strings
$export($export.P + $export.F * (__webpack_require__(46) != Object || !__webpack_require__(20)(arrayJoin)), 'Array', {
  join: function join(separator){
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export    = __webpack_require__(0)
  , html       = __webpack_require__(66)
  , cof        = __webpack_require__(18)
  , toIndex    = __webpack_require__(35)
  , toLength   = __webpack_require__(8)
  , arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$export($export.P + $export.F * __webpack_require__(3)(function(){
  if(html)arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end){
    var len   = toLength(this.length)
      , klass = cof(this);
    end = end === undefined ? len : end;
    if(klass == 'Array')return arraySlice.call(this, begin, end);
    var start  = toIndex(begin, len)
      , upTo   = toIndex(end, len)
      , size   = toLength(upTo - start)
      , cloned = Array(size)
      , i      = 0;
    for(; i < size; i++)cloned[i] = klass == 'String'
      ? this.charAt(start + i)
      : this[start + i];
    return cloned;
  }
});

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export   = __webpack_require__(0)
  , aFunction = __webpack_require__(13)
  , toObject  = __webpack_require__(9)
  , fails     = __webpack_require__(3)
  , $sort     = [].sort
  , test      = [1, 2, 3];

$export($export.P + $export.F * (fails(function(){
  // IE8-
  test.sort(undefined);
}) || !fails(function(){
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__(20)($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn){
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export  = __webpack_require__(0)
  , $forEach = __webpack_require__(23)(0)
  , STRICT   = __webpack_require__(20)([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */){
    return $forEach(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(212);

module.exports = function(original, length){
  return new (speciesConstructor(original))(length);
};

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(4)
  , isArray  = __webpack_require__(65)
  , SPECIES  = __webpack_require__(5)('species');

module.exports = function(original){
  var C;
  if(isArray(original)){
    C = original.constructor;
    // cross-realm fallback
    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
    if(isObject(C)){
      C = C[SPECIES];
      if(C === null)C = undefined;
    }
  } return C === undefined ? Array : C;
};

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0)
  , $map    = __webpack_require__(23)(1);

$export($export.P + $export.F * !__webpack_require__(20)([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */){
    return $map(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0)
  , $filter = __webpack_require__(23)(2);

$export($export.P + $export.F * !__webpack_require__(20)([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */){
    return $filter(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0)
  , $some   = __webpack_require__(23)(3);

$export($export.P + $export.F * !__webpack_require__(20)([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */){
    return $some(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0)
  , $every  = __webpack_require__(23)(4);

$export($export.P + $export.F * !__webpack_require__(20)([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn /* , thisArg */){
    return $every(this, callbackfn, arguments[1]);
  }
});

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0)
  , $reduce = __webpack_require__(101);

$export($export.P + $export.F * !__webpack_require__(20)([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */){
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0)
  , $reduce = __webpack_require__(101);

$export($export.P + $export.F * !__webpack_require__(20)([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn /* , initialValue */){
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export       = __webpack_require__(0)
  , $indexOf      = __webpack_require__(51)(false)
  , $native       = [].indexOf
  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(20)($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export       = __webpack_require__(0)
  , toIObject     = __webpack_require__(14)
  , toInteger     = __webpack_require__(30)
  , toLength      = __webpack_require__(8)
  , $native       = [].lastIndexOf
  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(20)($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
    // convert -0 to +0
    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
    var O      = toIObject(this)
      , length = toLength(O.length)
      , index  = length - 1;
    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
    if(index < 0)index = length + index;
    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
    return -1;
  }
});

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = __webpack_require__(0);

$export($export.P, 'Array', {copyWithin: __webpack_require__(102)});

__webpack_require__(44)('copyWithin');

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = __webpack_require__(0);

$export($export.P, 'Array', {fill: __webpack_require__(81)});

__webpack_require__(44)('fill');

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__(0)
  , $find   = __webpack_require__(23)(5)
  , KEY     = 'find'
  , forced  = true;
// Shouldn't skip holes
if(KEY in [])Array(1)[KEY](function(){ forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn/*, that = undefined */){
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(44)(KEY);

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = __webpack_require__(0)
  , $find   = __webpack_require__(23)(6)
  , KEY     = 'findIndex'
  , forced  = true;
// Shouldn't skip holes
if(KEY in [])Array(1)[KEY](function(){ forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn/*, that = undefined */){
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(44)(KEY);

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(38)('Array');

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

var global            = __webpack_require__(2)
  , inheritIfRequired = __webpack_require__(69)
  , dP                = __webpack_require__(7).f
  , gOPN              = __webpack_require__(37).f
  , isRegExp          = __webpack_require__(54)
  , $flags            = __webpack_require__(56)
  , $RegExp           = global.RegExp
  , Base              = $RegExp
  , proto             = $RegExp.prototype
  , re1               = /a/g
  , re2               = /a/g
  // "new" creates a new object, old webkit buggy here
  , CORRECT_NEW       = new $RegExp(re1) !== re1;

if(__webpack_require__(6) && (!CORRECT_NEW || __webpack_require__(3)(function(){
  re2[__webpack_require__(5)('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))){
  $RegExp = function RegExp(p, f){
    var tiRE = this instanceof $RegExp
      , piRE = isRegExp(p)
      , fiU  = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function(key){
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function(){ return Base[key]; },
      set: function(it){ Base[key] = it; }
    });
  };
  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  __webpack_require__(12)(global, 'RegExp', $RegExp);
}

__webpack_require__(38)('RegExp');

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(104);
var anObject    = __webpack_require__(1)
  , $flags      = __webpack_require__(56)
  , DESCRIPTORS = __webpack_require__(6)
  , TO_STRING   = 'toString'
  , $toString   = /./[TO_STRING];

var define = function(fn){
  __webpack_require__(12)(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if(__webpack_require__(3)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
  define(function toString(){
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if($toString.name != TO_STRING){
  define(function toString(){
    return $toString.call(this);
  });
}

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

// @@match logic
__webpack_require__(57)('match', 1, function(defined, MATCH, $match){
  // 21.1.3.11 String.prototype.match(regexp)
  return [function match(regexp){
    'use strict';
    var O  = defined(this)
      , fn = regexp == undefined ? undefined : regexp[MATCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
  }, $match];
});

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

// @@replace logic
__webpack_require__(57)('replace', 2, function(defined, REPLACE, $replace){
  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
  return [function replace(searchValue, replaceValue){
    'use strict';
    var O  = defined(this)
      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
    return fn !== undefined
      ? fn.call(searchValue, O, replaceValue)
      : $replace.call(String(O), searchValue, replaceValue);
  }, $replace];
});

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

// @@search logic
__webpack_require__(57)('search', 1, function(defined, SEARCH, $search){
  // 21.1.3.15 String.prototype.search(regexp)
  return [function search(regexp){
    'use strict';
    var O  = defined(this)
      , fn = regexp == undefined ? undefined : regexp[SEARCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
  }, $search];
});

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

// @@split logic
__webpack_require__(57)('split', 2, function(defined, SPLIT, $split){
  'use strict';
  var isRegExp   = __webpack_require__(54)
    , _split     = $split
    , $push      = [].push
    , $SPLIT     = 'split'
    , LENGTH     = 'length'
    , LAST_INDEX = 'lastIndex';
  if(
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ){
    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
    // based on es5-shim implementation, need to rework it
    $split = function(separator, limit){
      var string = String(this);
      if(separator === undefined && limit === 0)return [];
      // If `separator` is not a regex, use native split
      if(!isRegExp(separator))return _split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var separator2, match, lastIndex, lastLength, i;
      // Doesn't need flags gy, but they don't hurt
      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
      while(match = separatorCopy.exec(string)){
        // `separatorCopy.lastIndex` is not reliable cross-browser
        lastIndex = match.index + match[0][LENGTH];
        if(lastIndex > lastLastIndex){
          output.push(string.slice(lastLastIndex, match.index));
          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
          });
          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if(output[LENGTH] >= splitLimit)break;
        }
        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if(lastLastIndex === string[LENGTH]){
        if(lastLength || !separatorCopy.test(''))output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
    $split = function(separator, limit){
      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
    };
  }
  // 21.1.3.17 String.prototype.split(separator, limit)
  return [function split(separator, limit){
    var O  = defined(this)
      , fn = separator == undefined ? undefined : separator[SPLIT];
    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
  }, $split];
});

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY            = __webpack_require__(33)
  , global             = __webpack_require__(2)
  , ctx                = __webpack_require__(25)
  , classof            = __webpack_require__(48)
  , $export            = __webpack_require__(0)
  , isObject           = __webpack_require__(4)
  , aFunction          = __webpack_require__(13)
  , anInstance         = __webpack_require__(39)
  , forOf              = __webpack_require__(45)
  , speciesConstructor = __webpack_require__(83)
  , task               = __webpack_require__(84).set
  , microtask          = __webpack_require__(85)()
  , PROMISE            = 'Promise'
  , TypeError          = global.TypeError
  , process            = global.process
  , $Promise           = global[PROMISE]
  , process            = global.process
  , isNode             = classof(process) == 'process'
  , empty              = function(){ /* empty */ }
  , Internal, GenericPromiseCapability, Wrapper;

var USE_NATIVE = !!function(){
  try {
    // correct subclassing with @@species support
    var promise     = $Promise.resolve(1)
      , FakePromise = (promise.constructor = {})[__webpack_require__(5)('species')] = function(exec){ exec(empty, empty); };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
  } catch(e){ /* empty */ }
}();

// helpers
var sameConstructor = function(a, b){
  // with library wrapper special case
  return a === b || a === $Promise && b === Wrapper;
};
var isThenable = function(it){
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var newPromiseCapability = function(C){
  return sameConstructor($Promise, C)
    ? new PromiseCapability(C)
    : new GenericPromiseCapability(C);
};
var PromiseCapability = GenericPromiseCapability = function(C){
  var resolve, reject;
  this.promise = new C(function($$resolve, $$reject){
    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject  = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject  = aFunction(reject);
};
var perform = function(exec){
  try {
    exec();
  } catch(e){
    return {error: e};
  }
};
var notify = function(promise, isReject){
  if(promise._n)return;
  promise._n = true;
  var chain = promise._c;
  microtask(function(){
    var value = promise._v
      , ok    = promise._s == 1
      , i     = 0;
    var run = function(reaction){
      var handler = ok ? reaction.ok : reaction.fail
        , resolve = reaction.resolve
        , reject  = reaction.reject
        , domain  = reaction.domain
        , result, then;
      try {
        if(handler){
          if(!ok){
            if(promise._h == 2)onHandleUnhandled(promise);
            promise._h = 1;
          }
          if(handler === true)result = value;
          else {
            if(domain)domain.enter();
            result = handler(value);
            if(domain)domain.exit();
          }
          if(result === reaction.promise){
            reject(TypeError('Promise-chain cycle'));
          } else if(then = isThenable(result)){
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch(e){
        reject(e);
      }
    };
    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if(isReject && !promise._h)onUnhandled(promise);
  });
};
var onUnhandled = function(promise){
  task.call(global, function(){
    var value = promise._v
      , abrupt, handler, console;
    if(isUnhandled(promise)){
      abrupt = perform(function(){
        if(isNode){
          process.emit('unhandledRejection', value, promise);
        } else if(handler = global.onunhandledrejection){
          handler({promise: promise, reason: value});
        } else if((console = global.console) && console.error){
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if(abrupt)throw abrupt.error;
  });
};
var isUnhandled = function(promise){
  if(promise._h == 1)return false;
  var chain = promise._a || promise._c
    , i     = 0
    , reaction;
  while(chain.length > i){
    reaction = chain[i++];
    if(reaction.fail || !isUnhandled(reaction.promise))return false;
  } return true;
};
var onHandleUnhandled = function(promise){
  task.call(global, function(){
    var handler;
    if(isNode){
      process.emit('rejectionHandled', promise);
    } else if(handler = global.onrejectionhandled){
      handler({promise: promise, reason: promise._v});
    }
  });
};
var $reject = function(value){
  var promise = this;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if(!promise._a)promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function(value){
  var promise = this
    , then;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if(promise === value)throw TypeError("Promise can't be resolved itself");
    if(then = isThenable(value)){
      microtask(function(){
        var wrapper = {_w: promise, _d: false}; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch(e){
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch(e){
    $reject.call({_w: promise, _d: false}, e); // wrap
  }
};

// constructor polyfill
if(!USE_NATIVE){
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor){
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch(err){
      $reject.call(this, err);
    }
  };
  Internal = function Promise(executor){
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(40)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected){
      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail   = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if(this._a)this._a.push(reaction);
      if(this._s)notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function(onRejected){
      return this.then(undefined, onRejected);
    }
  });
  PromiseCapability = function(){
    var promise  = new Internal;
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject  = ctx($reject, promise, 1);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
__webpack_require__(41)($Promise, PROMISE);
__webpack_require__(38)(PROMISE);
Wrapper = __webpack_require__(24)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r){
    var capability = newPromiseCapability(this)
      , $$reject   = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x){
    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
    var capability = newPromiseCapability(this)
      , $$resolve  = capability.resolve;
    $$resolve(x);
    return capability.promise;
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(55)(function(iter){
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , resolve    = capability.resolve
      , reject     = capability.reject;
    var abrupt = perform(function(){
      var values    = []
        , index     = 0
        , remaining = 1;
      forOf(iterable, false, function(promise){
        var $index        = index++
          , alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function(value){
          if(alreadyCalled)return;
          alreadyCalled  = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , reject     = capability.reject;
    var abrupt = perform(function(){
      forOf(iterable, false, function(promise){
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  }
});

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var weak = __webpack_require__(109);

// 23.4 WeakSet Objects
__webpack_require__(58)('WeakSet', function(get){
  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value){
    return weak.def(this, value, true);
  }
}, weak, false, true);

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export      = __webpack_require__(0)
  , $typed       = __webpack_require__(59)
  , buffer       = __webpack_require__(86)
  , anObject     = __webpack_require__(1)
  , toIndex      = __webpack_require__(35)
  , toLength     = __webpack_require__(8)
  , isObject     = __webpack_require__(4)
  , ArrayBuffer  = __webpack_require__(2).ArrayBuffer
  , speciesConstructor = __webpack_require__(83)
  , $ArrayBuffer = buffer.ArrayBuffer
  , $DataView    = buffer.DataView
  , $isView      = $typed.ABV && ArrayBuffer.isView
  , $slice       = $ArrayBuffer.prototype.slice
  , VIEW         = $typed.VIEW
  , ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it){
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * __webpack_require__(3)(function(){
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end){
    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
    var len    = anObject(this).byteLength
      , first  = toIndex(start, len)
      , final  = toIndex(end === undefined ? len : end, len)
      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
      , viewS  = new $DataView(this)
      , viewT  = new $DataView(result)
      , index  = 0;
    while(first < final){
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

__webpack_require__(38)(ARRAY_BUFFER);

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
$export($export.G + $export.W + $export.F * !__webpack_require__(59).ABV, {
  DataView: __webpack_require__(86).DataView
});

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Int8', 1, function(init){
  return function Int8Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Uint8', 1, function(init){
  return function Uint8Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Uint8', 1, function(init){
  return function Uint8ClampedArray(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
}, true);

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Int16', 2, function(init){
  return function Int16Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Uint16', 2, function(init){
  return function Uint16Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Int32', 4, function(init){
  return function Int32Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Uint32', 4, function(init){
  return function Uint32Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Float32', 4, function(init){
  return function Float32Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(26)('Float64', 8, function(init){
  return function Float64Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export   = __webpack_require__(0)
  , aFunction = __webpack_require__(13)
  , anObject  = __webpack_require__(1)
  , rApply    = (__webpack_require__(2).Reflect || {}).apply
  , fApply    = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !__webpack_require__(3)(function(){
  rApply(function(){});
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList){
    var T = aFunction(target)
      , L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export    = __webpack_require__(0)
  , create     = __webpack_require__(36)
  , aFunction  = __webpack_require__(13)
  , anObject   = __webpack_require__(1)
  , isObject   = __webpack_require__(4)
  , fails      = __webpack_require__(3)
  , bind       = __webpack_require__(94)
  , rConstruct = (__webpack_require__(2).Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function(){
  function F(){}
  return !(rConstruct(function(){}, [], F) instanceof F);
});
var ARGS_BUG = !fails(function(){
  rConstruct(function(){});
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /*, newTarget*/){
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
    if(Target == newTarget){
      // w/o altered newTarget, optimization for 0-4 arguments
      switch(args.length){
        case 0: return new Target;
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args));
    }
    // with altered newTarget, not support built-in constructors
    var proto    = newTarget.prototype
      , instance = create(isObject(proto) ? proto : Object.prototype)
      , result   = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP          = __webpack_require__(7)
  , $export     = __webpack_require__(0)
  , anObject    = __webpack_require__(1)
  , toPrimitive = __webpack_require__(21);

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * __webpack_require__(3)(function(){
  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes){
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch(e){
      return false;
    }
  }
});

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export  = __webpack_require__(0)
  , gOPD     = __webpack_require__(16).f
  , anObject = __webpack_require__(1);

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey){
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 26.1.5 Reflect.enumerate(target)
var $export  = __webpack_require__(0)
  , anObject = __webpack_require__(1);
var Enumerate = function(iterated){
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = []       // keys
    , key;
  for(key in iterated)keys.push(key);
};
__webpack_require__(75)(Enumerate, 'Object', function(){
  var that = this
    , keys = that._k
    , key;
  do {
    if(that._i >= keys.length)return {value: undefined, done: true};
  } while(!((key = keys[that._i++]) in that._t));
  return {value: key, done: false};
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target){
    return new Enumerate(target);
  }
});

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD           = __webpack_require__(16)
  , getPrototypeOf = __webpack_require__(17)
  , has            = __webpack_require__(10)
  , $export        = __webpack_require__(0)
  , isObject       = __webpack_require__(4)
  , anObject       = __webpack_require__(1);

function get(target, propertyKey/*, receiver*/){
  var receiver = arguments.length < 3 ? target : arguments[2]
    , desc, proto;
  if(anObject(target) === receiver)return target[propertyKey];
  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', {get: get});

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD     = __webpack_require__(16)
  , $export  = __webpack_require__(0)
  , anObject = __webpack_require__(1);

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
    return gOPD.f(anObject(target), propertyKey);
  }
});

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.8 Reflect.getPrototypeOf(target)
var $export  = __webpack_require__(0)
  , getProto = __webpack_require__(17)
  , anObject = __webpack_require__(1);

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target){
    return getProto(anObject(target));
  }
});

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.9 Reflect.has(target, propertyKey)
var $export = __webpack_require__(0);

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey){
    return propertyKey in target;
  }
});

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.10 Reflect.isExtensible(target)
var $export       = __webpack_require__(0)
  , anObject      = __webpack_require__(1)
  , $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target){
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.11 Reflect.ownKeys(target)
var $export = __webpack_require__(0);

$export($export.S, 'Reflect', {ownKeys: __webpack_require__(110)});

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.12 Reflect.preventExtensions(target)
var $export            = __webpack_require__(0)
  , anObject           = __webpack_require__(1)
  , $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target){
    anObject(target);
    try {
      if($preventExtensions)$preventExtensions(target);
      return true;
    } catch(e){
      return false;
    }
  }
});

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP             = __webpack_require__(7)
  , gOPD           = __webpack_require__(16)
  , getPrototypeOf = __webpack_require__(17)
  , has            = __webpack_require__(10)
  , $export        = __webpack_require__(0)
  , createDesc     = __webpack_require__(28)
  , anObject       = __webpack_require__(1)
  , isObject       = __webpack_require__(4);

function set(target, propertyKey, V/*, receiver*/){
  var receiver = arguments.length < 4 ? target : arguments[3]
    , ownDesc  = gOPD.f(anObject(target), propertyKey)
    , existingDescriptor, proto;
  if(!ownDesc){
    if(isObject(proto = getPrototypeOf(target))){
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if(has(ownDesc, 'value')){
    if(ownDesc.writable === false || !isObject(receiver))return false;
    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
    existingDescriptor.value = V;
    dP.f(receiver, propertyKey, existingDescriptor);
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', {set: set});

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export  = __webpack_require__(0)
  , setProto = __webpack_require__(67);

if(setProto)$export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto){
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch(e){
      return false;
    }
  }
});

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export   = __webpack_require__(0)
  , $includes = __webpack_require__(51)(true);

$export($export.P, 'Array', {
  includes: function includes(el /*, fromIndex = 0 */){
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(44)('includes');

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/mathiasbynens/String.prototype.at
var $export = __webpack_require__(0)
  , $at     = __webpack_require__(73)(true);

$export($export.P, 'String', {
  at: function at(pos){
    return $at(this, pos);
  }
});

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(0)
  , $pad    = __webpack_require__(111);

$export($export.P, 'String', {
  padStart: function padStart(maxLength /*, fillString = ' ' */){
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(0)
  , $pad    = __webpack_require__(111);

$export($export.P, 'String', {
  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(42)('trimLeft', function($trim){
  return function trimLeft(){
    return $trim(this, 1);
  };
}, 'trimStart');

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(42)('trimRight', function($trim){
  return function trimRight(){
    return $trim(this, 2);
  };
}, 'trimEnd');

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/String.prototype.matchAll/
var $export     = __webpack_require__(0)
  , defined     = __webpack_require__(19)
  , toLength    = __webpack_require__(8)
  , isRegExp    = __webpack_require__(54)
  , getFlags    = __webpack_require__(56)
  , RegExpProto = RegExp.prototype;

var $RegExpStringIterator = function(regexp, string){
  this._r = regexp;
  this._s = string;
};

__webpack_require__(75)($RegExpStringIterator, 'RegExp String', function next(){
  var match = this._r.exec(this._s);
  return {value: match, done: match === null};
});

$export($export.P, 'String', {
  matchAll: function matchAll(regexp){
    defined(this);
    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
    var S     = String(this)
      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
    rx.lastIndex = toLength(regexp.lastIndex);
    return new $RegExpStringIterator(rx, S);
  }
});

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(62)('asyncIterator');

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(62)('observable');

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export        = __webpack_require__(0)
  , ownKeys        = __webpack_require__(110)
  , toIObject      = __webpack_require__(14)
  , gOPD           = __webpack_require__(16)
  , createProperty = __webpack_require__(79);

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
    var O       = toIObject(object)
      , getDesc = gOPD.f
      , keys    = ownKeys(O)
      , result  = {}
      , i       = 0
      , key;
    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
    return result;
  }
});

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(0)
  , $values = __webpack_require__(112)(false);

$export($export.S, 'Object', {
  values: function values(it){
    return $values(it);
  }
});

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export  = __webpack_require__(0)
  , $entries = __webpack_require__(112)(true);

$export($export.S, 'Object', {
  entries: function entries(it){
    return $entries(it);
  }
});

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export         = __webpack_require__(0)
  , toObject        = __webpack_require__(9)
  , aFunction       = __webpack_require__(13)
  , $defineProperty = __webpack_require__(7);

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
__webpack_require__(6) && $export($export.P + __webpack_require__(60), 'Object', {
  __defineGetter__: function __defineGetter__(P, getter){
    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
  }
});

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export         = __webpack_require__(0)
  , toObject        = __webpack_require__(9)
  , aFunction       = __webpack_require__(13)
  , $defineProperty = __webpack_require__(7);

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
__webpack_require__(6) && $export($export.P + __webpack_require__(60), 'Object', {
  __defineSetter__: function __defineSetter__(P, setter){
    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
  }
});

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export                  = __webpack_require__(0)
  , toObject                 = __webpack_require__(9)
  , toPrimitive              = __webpack_require__(21)
  , getPrototypeOf           = __webpack_require__(17)
  , getOwnPropertyDescriptor = __webpack_require__(16).f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
__webpack_require__(6) && $export($export.P + __webpack_require__(60), 'Object', {
  __lookupGetter__: function __lookupGetter__(P){
    var O = toObject(this)
      , K = toPrimitive(P, true)
      , D;
    do {
      if(D = getOwnPropertyDescriptor(O, K))return D.get;
    } while(O = getPrototypeOf(O));
  }
});

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export                  = __webpack_require__(0)
  , toObject                 = __webpack_require__(9)
  , toPrimitive              = __webpack_require__(21)
  , getPrototypeOf           = __webpack_require__(17)
  , getOwnPropertyDescriptor = __webpack_require__(16).f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
__webpack_require__(6) && $export($export.P + __webpack_require__(60), 'Object', {
  __lookupSetter__: function __lookupSetter__(P){
    var O = toObject(this)
      , K = toPrimitive(P, true)
      , D;
    do {
      if(D = getOwnPropertyDescriptor(O, K))return D.set;
    } while(O = getPrototypeOf(O));
  }
});

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export  = __webpack_require__(0);

$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(113)('Map')});

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export  = __webpack_require__(0);

$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(113)('Set')});

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/ljharb/proposal-global
var $export = __webpack_require__(0);

$export($export.S, 'System', {global: __webpack_require__(2)});

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/ljharb/proposal-is-error
var $export = __webpack_require__(0)
  , cof     = __webpack_require__(18);

$export($export.S, 'Error', {
  isError: function isError(it){
    return cof(it) === 'Error';
  }
});

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  iaddh: function iaddh(x0, x1, y0, y1){
    var $x0 = x0 >>> 0
      , $x1 = x1 >>> 0
      , $y0 = y0 >>> 0;
    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
  }
});

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  isubh: function isubh(x0, x1, y0, y1){
    var $x0 = x0 >>> 0
      , $x1 = x1 >>> 0
      , $y0 = y0 >>> 0;
    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
  }
});

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  imulh: function imulh(u, v){
    var UINT16 = 0xffff
      , $u = +u
      , $v = +v
      , u0 = $u & UINT16
      , v0 = $v & UINT16
      , u1 = $u >> 16
      , v1 = $v >> 16
      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
  }
});

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  umulh: function umulh(u, v){
    var UINT16 = 0xffff
      , $u = +u
      , $v = +v
      , u0 = $u & UINT16
      , v0 = $v & UINT16
      , u1 = $u >>> 16
      , v1 = $v >>> 16
      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
  }
});

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

var metadata                  = __webpack_require__(27)
  , anObject                  = __webpack_require__(1)
  , toMetaKey                 = metadata.key
  , ordinaryDefineOwnMetadata = metadata.set;

metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
}});

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

var metadata               = __webpack_require__(27)
  , anObject               = __webpack_require__(1)
  , toMetaKey              = metadata.key
  , getOrCreateMetadataMap = metadata.map
  , store                  = metadata.store;

metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
  if(metadataMap.size)return true;
  var targetMetadata = store.get(target);
  targetMetadata['delete'](targetKey);
  return !!targetMetadata.size || store['delete'](target);
}});

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

var metadata               = __webpack_require__(27)
  , anObject               = __webpack_require__(1)
  , getPrototypeOf         = __webpack_require__(17)
  , ordinaryHasOwnMetadata = metadata.has
  , ordinaryGetOwnMetadata = metadata.get
  , toMetaKey              = metadata.key;

var ordinaryGetMetadata = function(MetadataKey, O, P){
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
};

metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
}});

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

var Set                     = __webpack_require__(107)
  , from                    = __webpack_require__(114)
  , metadata                = __webpack_require__(27)
  , anObject                = __webpack_require__(1)
  , getPrototypeOf          = __webpack_require__(17)
  , ordinaryOwnMetadataKeys = metadata.keys
  , toMetaKey               = metadata.key;

var ordinaryMetadataKeys = function(O, P){
  var oKeys  = ordinaryOwnMetadataKeys(O, P)
    , parent = getPrototypeOf(O);
  if(parent === null)return oKeys;
  var pKeys  = ordinaryMetadataKeys(parent, P);
  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
};

metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
}});

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

var metadata               = __webpack_require__(27)
  , anObject               = __webpack_require__(1)
  , ordinaryGetOwnMetadata = metadata.get
  , toMetaKey              = metadata.key;

metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
}});

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

var metadata                = __webpack_require__(27)
  , anObject                = __webpack_require__(1)
  , ordinaryOwnMetadataKeys = metadata.keys
  , toMetaKey               = metadata.key;

metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
}});

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

var metadata               = __webpack_require__(27)
  , anObject               = __webpack_require__(1)
  , getPrototypeOf         = __webpack_require__(17)
  , ordinaryHasOwnMetadata = metadata.has
  , toMetaKey              = metadata.key;

var ordinaryHasMetadata = function(MetadataKey, O, P){
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if(hasOwn)return true;
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
};

metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
}});

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

var metadata               = __webpack_require__(27)
  , anObject               = __webpack_require__(1)
  , ordinaryHasOwnMetadata = metadata.has
  , toMetaKey              = metadata.key;

metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
}});

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

var metadata                  = __webpack_require__(27)
  , anObject                  = __webpack_require__(1)
  , aFunction                 = __webpack_require__(13)
  , toMetaKey                 = metadata.key
  , ordinaryDefineOwnMetadata = metadata.set;

metadata.exp({metadata: function metadata(metadataKey, metadataValue){
  return function decorator(target, targetKey){
    ordinaryDefineOwnMetadata(
      metadataKey, metadataValue,
      (targetKey !== undefined ? anObject : aFunction)(target),
      toMetaKey(targetKey)
    );
  };
}});

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
var $export   = __webpack_require__(0)
  , microtask = __webpack_require__(85)()
  , process   = __webpack_require__(2).process
  , isNode    = __webpack_require__(18)(process) == 'process';

$export($export.G, {
  asap: function asap(fn){
    var domain = isNode && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/zenparsing/es-observable
var $export     = __webpack_require__(0)
  , global      = __webpack_require__(2)
  , core        = __webpack_require__(24)
  , microtask   = __webpack_require__(85)()
  , OBSERVABLE  = __webpack_require__(5)('observable')
  , aFunction   = __webpack_require__(13)
  , anObject    = __webpack_require__(1)
  , anInstance  = __webpack_require__(39)
  , redefineAll = __webpack_require__(40)
  , hide        = __webpack_require__(11)
  , forOf       = __webpack_require__(45)
  , RETURN      = forOf.RETURN;

var getMethod = function(fn){
  return fn == null ? undefined : aFunction(fn);
};

var cleanupSubscription = function(subscription){
  var cleanup = subscription._c;
  if(cleanup){
    subscription._c = undefined;
    cleanup();
  }
};

var subscriptionClosed = function(subscription){
  return subscription._o === undefined;
};

var closeSubscription = function(subscription){
  if(!subscriptionClosed(subscription)){
    subscription._o = undefined;
    cleanupSubscription(subscription);
  }
};

var Subscription = function(observer, subscriber){
  anObject(observer);
  this._c = undefined;
  this._o = observer;
  observer = new SubscriptionObserver(this);
  try {
    var cleanup      = subscriber(observer)
      , subscription = cleanup;
    if(cleanup != null){
      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
      else aFunction(cleanup);
      this._c = cleanup;
    }
  } catch(e){
    observer.error(e);
    return;
  } if(subscriptionClosed(this))cleanupSubscription(this);
};

Subscription.prototype = redefineAll({}, {
  unsubscribe: function unsubscribe(){ closeSubscription(this); }
});

var SubscriptionObserver = function(subscription){
  this._s = subscription;
};

SubscriptionObserver.prototype = redefineAll({}, {
  next: function next(value){
    var subscription = this._s;
    if(!subscriptionClosed(subscription)){
      var observer = subscription._o;
      try {
        var m = getMethod(observer.next);
        if(m)return m.call(observer, value);
      } catch(e){
        try {
          closeSubscription(subscription);
        } finally {
          throw e;
        }
      }
    }
  },
  error: function error(value){
    var subscription = this._s;
    if(subscriptionClosed(subscription))throw value;
    var observer = subscription._o;
    subscription._o = undefined;
    try {
      var m = getMethod(observer.error);
      if(!m)throw value;
      value = m.call(observer, value);
    } catch(e){
      try {
        cleanupSubscription(subscription);
      } finally {
        throw e;
      }
    } cleanupSubscription(subscription);
    return value;
  },
  complete: function complete(value){
    var subscription = this._s;
    if(!subscriptionClosed(subscription)){
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.complete);
        value = m ? m.call(observer, value) : undefined;
      } catch(e){
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      } cleanupSubscription(subscription);
      return value;
    }
  }
});

var $Observable = function Observable(subscriber){
  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
};

redefineAll($Observable.prototype, {
  subscribe: function subscribe(observer){
    return new Subscription(observer, this._f);
  },
  forEach: function forEach(fn){
    var that = this;
    return new (core.Promise || global.Promise)(function(resolve, reject){
      aFunction(fn);
      var subscription = that.subscribe({
        next : function(value){
          try {
            return fn(value);
          } catch(e){
            reject(e);
            subscription.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });
    });
  }
});

redefineAll($Observable, {
  from: function from(x){
    var C = typeof this === 'function' ? this : $Observable;
    var method = getMethod(anObject(x)[OBSERVABLE]);
    if(method){
      var observable = anObject(method.call(x));
      return observable.constructor === C ? observable : new C(function(observer){
        return observable.subscribe(observer);
      });
    }
    return new C(function(observer){
      var done = false;
      microtask(function(){
        if(!done){
          try {
            if(forOf(x, false, function(it){
              observer.next(it);
              if(done)return RETURN;
            }) === RETURN)return;
          } catch(e){
            if(done)throw e;
            observer.error(e);
            return;
          } observer.complete();
        }
      });
      return function(){ done = true; };
    });
  },
  of: function of(){
    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
    return new (typeof this === 'function' ? this : $Observable)(function(observer){
      var done = false;
      microtask(function(){
        if(!done){
          for(var i = 0; i < items.length; ++i){
            observer.next(items[i]);
            if(done)return;
          } observer.complete();
        }
      });
      return function(){ done = true; };
    });
  }
});

hide($Observable.prototype, OBSERVABLE, function(){ return this; });

$export($export.G, {Observable: $Observable});

__webpack_require__(38)('Observable');

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

// ie9- setTimeout & setInterval additional parameters fix
var global     = __webpack_require__(2)
  , $export    = __webpack_require__(0)
  , invoke     = __webpack_require__(53)
  , partial    = __webpack_require__(295)
  , navigator  = global.navigator
  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
var wrap = function(set){
  return MSIE ? function(fn, time /*, ...args */){
    return set(invoke(
      partial,
      [].slice.call(arguments, 2),
      typeof fn == 'function' ? fn : Function(fn)
    ), time);
  } : set;
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout:  wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var path      = __webpack_require__(296)
  , invoke    = __webpack_require__(53)
  , aFunction = __webpack_require__(13);
module.exports = function(/* ...pargs */){
  var fn     = aFunction(this)
    , length = arguments.length
    , pargs  = Array(length)
    , i      = 0
    , _      = path._
    , holder = false;
  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
  return function(/* ...args */){
    var that = this
      , aLen = arguments.length
      , j = 0, k = 0, args;
    if(!holder && !aLen)return invoke(fn, pargs, that);
    args = pargs.slice();
    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
    while(aLen > k)args.push(arguments[k++]);
    return invoke(fn, args, that);
  };
};

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(2);

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0)
  , $task   = __webpack_require__(84);
$export($export.G + $export.B, {
  setImmediate:   $task.set,
  clearImmediate: $task.clear
});

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

var $iterators    = __webpack_require__(82)
  , redefine      = __webpack_require__(12)
  , global        = __webpack_require__(2)
  , hide          = __webpack_require__(11)
  , Iterators     = __webpack_require__(43)
  , wks           = __webpack_require__(5)
  , ITERATOR      = wks('iterator')
  , TO_STRING_TAG = wks('toStringTag')
  , ArrayValues   = Iterators.Array;

for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
  var NAME       = collections[i]
    , Collection = global[NAME]
    , proto      = Collection && Collection.prototype
    , key;
  if(proto){
    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
  }
}

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof global.process === "object" && global.process.domain) {
      invoke = global.process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // Among the various tricks for obtaining a reference to the global
  // object, this seems to be the most reliable technique that does not
  // use indirect eval (which violates Content Security Policy).
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this
);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(301);
module.exports = __webpack_require__(24).RegExp.escape;

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/benjamingr/RexExp.escape
var $export = __webpack_require__(0)
  , $re     = __webpack_require__(302)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ }),
/* 302 */
/***/ (function(module, exports) {

module.exports = function(regExp, replace){
  var replacer = replace === Object(replace) ? function(part){
    return replace[part];
  } : replace;
  return function(it){
    return String(it).replace(regExp, replacer);
  };
};

/***/ }),
/* 303 */
/***/ (function(module, exports) {

(function(self) {
  'use strict';

  if (self.fetch) {
    return
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && (function() {
      try {
        new Blob()
        return true
      } catch(e) {
        return false
      }
    })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ]

    var isDataView = function(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj)
    }

    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
    }
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name)
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value)
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift()
        return {done: value === undefined, value: value}
      }
    }

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      }
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {}

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value)
      }, this)
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        this.append(header[0], header[1])
      }, this)
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name])
      }, this)
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name)
    value = normalizeValue(value)
    var oldValue = this.map[name]
    this.map[name] = oldValue ? oldValue+','+value : value
  }

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)]
  }

  Headers.prototype.get = function(name) {
    name = normalizeName(name)
    return this.has(name) ? this.map[name] : null
  }

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  }

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value)
  }

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this)
      }
    }
  }

  Headers.prototype.keys = function() {
    var items = []
    this.forEach(function(value, name) { items.push(name) })
    return iteratorFor(items)
  }

  Headers.prototype.values = function() {
    var items = []
    this.forEach(function(value) { items.push(value) })
    return iteratorFor(items)
  }

  Headers.prototype.entries = function() {
    var items = []
    this.forEach(function(value, name) { items.push([name, value]) })
    return iteratorFor(items)
  }

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result)
      }
      reader.onerror = function() {
        reject(reader.error)
      }
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader()
    var promise = fileReaderReady(reader)
    reader.readAsArrayBuffer(blob)
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader()
    var promise = fileReaderReady(reader)
    reader.readAsText(blob)
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf)
    var chars = new Array(view.length)

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i])
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength)
      view.set(new Uint8Array(buf))
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false

    this._initBody = function(body) {
      this._bodyInit = body
      if (!body) {
        this._bodyText = ''
      } else if (typeof body === 'string') {
        this._bodyText = body
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString()
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer)
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer])
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body)
      } else {
        throw new Error('unsupported BodyInit type')
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8')
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type)
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
        }
      }
    }

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      }

      this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
        } else {
          return this.blob().then(readBlobAsArrayBuffer)
        }
      }
    }

    this.text = function() {
      var rejected = consumed(this)
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    }

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      }
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    }

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

  function normalizeMethod(method) {
    var upcased = method.toUpperCase()
    return (methods.indexOf(upcased) > -1) ? upcased : method
  }

  function Request(input, options) {
    options = options || {}
    var body = options.body

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url
      this.credentials = input.credentials
      if (!options.headers) {
        this.headers = new Headers(input.headers)
      }
      this.method = input.method
      this.mode = input.mode
      if (!body && input._bodyInit != null) {
        body = input._bodyInit
        input.bodyUsed = true
      }
    } else {
      this.url = String(input)
    }

    this.credentials = options.credentials || this.credentials || 'omit'
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers)
    }
    this.method = normalizeMethod(options.method || this.method || 'GET')
    this.mode = options.mode || this.mode || null
    this.referrer = null

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body)
  }

  Request.prototype.clone = function() {
    return new Request(this, { body: this._bodyInit })
  }

  function decode(body) {
    var form = new FormData()
    body.trim().split('&').forEach(function(bytes) {
      if (bytes) {
        var split = bytes.split('=')
        var name = split.shift().replace(/\+/g, ' ')
        var value = split.join('=').replace(/\+/g, ' ')
        form.append(decodeURIComponent(name), decodeURIComponent(value))
      }
    })
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers()
    rawHeaders.split(/\r?\n/).forEach(function(line) {
      var parts = line.split(':')
      var key = parts.shift().trim()
      if (key) {
        var value = parts.join(':').trim()
        headers.append(key, value)
      }
    })
    return headers
  }

  Body.call(Request.prototype)

  function Response(bodyInit, options) {
    if (!options) {
      options = {}
    }

    this.type = 'default'
    this.status = 'status' in options ? options.status : 200
    this.ok = this.status >= 200 && this.status < 300
    this.statusText = 'statusText' in options ? options.statusText : 'OK'
    this.headers = new Headers(options.headers)
    this.url = options.url || ''
    this._initBody(bodyInit)
  }

  Body.call(Response.prototype)

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  }

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''})
    response.type = 'error'
    return response
  }

  var redirectStatuses = [301, 302, 303, 307, 308]

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  }

  self.Headers = Headers
  self.Request = Request
  self.Response = Response

  self.fetch = function(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init)
      var xhr = new XMLHttpRequest()

      xhr.onload = function() {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        }
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
        var body = 'response' in xhr ? xhr.response : xhr.responseText
        resolve(new Response(body, options))
      }

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.ontimeout = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.open(request.method, request.url, true)

      if (request.credentials === 'include') {
        xhr.withCredentials = true
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob'
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value)
      })

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
    })
  }
  self.fetch.polyfill = true
})(typeof self !== 'undefined' ? self : this);


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function __export(m) {
    for (var p in m) {
        if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
var Lib = __webpack_require__(115);
exports.Lib = Lib;
var Sch = __webpack_require__(116);
exports.Sch = Sch;
var Pcb = __webpack_require__(117);
exports.Pcb = Pcb;
__export(__webpack_require__(31));
__export(__webpack_require__(118));
__export(__webpack_require__(307));
__export(__webpack_require__(308));
__export(__webpack_require__(309));

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// based on:
// include/dsnlexer.h
// common/dsnlexer.cpp 
/*
 * This program source code file is part of kicad-utils
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2007-2013 SoftPLC Corporation, Dick Hollenbeck <dick@softplc.com>
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });

var Token = function () {
    function Token(token) {
        var line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

        _classCallCheck(this, Token);

        this.token = token;
        this.line = line;
    }

    _createClass(Token, [{
        key: "is",
        value: function is(t) {
            return this.token === t.token;
        }
    }, {
        key: "isNUMBER",
        value: function isNUMBER() {
            return (/^[-+]?([0-9]*\.?[0-9]+|[0-9]+)?([eE][-+]?[0-9]+)?$/.test(this.token)
            );
        }
    }, {
        key: "isSYMBOL",
        value: function isSYMBOL() {
            // XXX : symbol is not a keyword
            return (/^.+$/i.test(this.token)
            );
        }
    }, {
        key: "toString",
        value: function toString() {
            return this.token;
        }
    }]);

    return Token;
}();

Token.LEFT = new Token("(");
Token.RIGHT = new Token(")");
// common/pcb.keywords 
Token.add_net = new Token("add_net");
Token.allowed = new Token("allowed");
Token.angle = new Token("angle");
Token.arc = new Token("arc");
Token.arc_segments = new Token("arc_segments");
Token.area = new Token("area");
Token.arrow1a = new Token("arrow1a");
Token.arrow1b = new Token("arrow1b");
Token.arrow2a = new Token("arrow2a");
Token.arrow2b = new Token("arrow2b");
Token.at = new Token("at");
Token.attr = new Token("attr");
Token.autoplace_cost90 = new Token("autoplace_cost90");
Token.autoplace_cost180 = new Token("autoplace_cost180");
Token.aux_axis_origin = new Token("aux_axis_origin");
Token.blind = new Token("blind");
Token.blind_buried_vias_allowed = new Token("blind_buried_vias_allowed");
Token.bold = new Token("bold");
Token.bottom = new Token("bottom");
Token.center = new Token("center");
Token.chamfer = new Token("chamfer");
Token.circle = new Token("circle");
Token.clearance = new Token("clearance");
Token.comment = new Token("comment");
Token.company = new Token("company");
Token.connect = new Token("connect");
Token.connect_pads = new Token("connect_pads");
Token.copperpour = new Token("copperpour");
Token.crossbar = new Token("crossbar");
Token.date = new Token("date");
Token.descr = new Token("descr");
Token.die_length = new Token("die_length");
Token.dimension = new Token("dimension");
Token.diff_pair_width = new Token("diff_pair_width");
Token.diff_pair_gap = new Token("diff_pair_gap");
Token.drawings = new Token("drawings");
Token.drill = new Token("drill");
Token.edge = new Token("edge");
Token.edge_width = new Token("edge_width");
Token.effects = new Token("effects");
Token.end = new Token("end");
Token.feature1 = new Token("feature1");
Token.feature2 = new Token("feature2");
Token.fill = new Token("fill");
Token.fill_segments = new Token("fill_segments");
Token.filled_polygon = new Token("filled_polygon");
Token.fillet = new Token("fillet");
Token.font = new Token("font");
Token.fp_arc = new Token("fp_arc");
Token.fp_circle = new Token("fp_circle");
Token.fp_curve = new Token("fp_curve");
Token.fp_line = new Token("fp_line");
Token.fp_poly = new Token("fp_poly");
Token.fp_text = new Token("fp_text");
Token.full = new Token("full");
Token.general = new Token("general");
Token.grid_origin = new Token("grid_origin");
Token.gr_arc = new Token("gr_arc");
Token.gr_circle = new Token("gr_circle");
Token.gr_curve = new Token("gr_curve");
Token.gr_line = new Token("gr_line");
Token.gr_poly = new Token("gr_poly");
Token.gr_text = new Token("gr_text");
Token.hatch = new Token("hatch");
Token.hide = new Token("hide");
Token.italic = new Token("italic");
Token.justify = new Token("justify");
Token.keepout = new Token("keepout");
Token.kicad_pcb = new Token("kicad_pcb");
Token.last_trace_width = new Token("last_trace_width");
Token.layer = new Token("layer");
Token.layers = new Token("layers");
Token.left = new Token("left");
Token.links = new Token("links");
Token.locked = new Token("locked");
Token.micro = new Token("micro");
Token.min_thickness = new Token("min_thickness");
Token.mirror = new Token("mirror");
Token.mod_edge_width = new Token("mod_edge_width");
Token.mod_text_size = new Token("mod_text_size");
Token.mod_text_width = new Token("mod_text_width");
Token.mode = new Token("mode");
Token.model = new Token("model");
Token.module = new Token("module");
Token.net = new Token("net");
Token.net_class = new Token("net_class");
Token.net_name = new Token("net_name");
Token.nets = new Token("nets");
Token.no = new Token("no");
Token.no_connects = new Token("no_connects");
Token.none = new Token("none");
Token.not_allowed = new Token("not_allowed");
Token.np_thru_hole = new Token("np_thru_hole");
Token.offset = new Token("offset");
Token.oval = new Token("oval");
Token.pad = new Token("pad");
Token.pads = new Token("pads");
Token.pad_drill = new Token("pad_drill");
Token.pad_size = new Token("pad_size");
Token.pad_to_mask_clearance = new Token("pad_to_mask_clearance");
Token.solder_mask_min_width = new Token("solder_mask_min_width");
Token.pad_to_paste_clearance = new Token("pad_to_paste_clearance");
Token.pad_to_paste_clearance_ratio = new Token("pad_to_paste_clearance_ratio");
Token.page = new Token("page");
Token.path = new Token("path");
Token.pcb_text_size = new Token("pcb_text_size");
Token.pcb_text_width = new Token("pcb_text_width");
Token.pcbplotparams = new Token("pcbplotparams");
Token.placed = new Token("placed");
Token.plus = new Token("plus");
Token.polygon = new Token("polygon");
Token.portrait = new Token("portrait");
Token.priority = new Token("priority");
Token.pts = new Token("pts");
Token.radius = new Token("radius");
Token.rev = new Token("rev");
Token.rect = new Token("rect");
Token.rect_delta = new Token("rect_delta");
Token.reference = new Token("reference");
Token.right = new Token("right");
Token.rotate = new Token("rotate");
Token.roundrect = new Token("roundrect");
Token.roundrect_rratio = new Token("roundrect_rratio");
Token.scale = new Token("scale");
Token.segment = new Token("segment");
Token.segment_width = new Token("segment_width");
Token.setup = new Token("setup");
Token.size = new Token("size");
Token.smd = new Token("smd");
Token.smoothing = new Token("smoothing");
Token.solder_mask_margin = new Token("solder_mask_margin");
Token.solder_paste_margin = new Token("solder_paste_margin");
Token.solder_paste_margin_ratio = new Token("solder_paste_margin_ratio");
Token.solder_paste_ratio = new Token("solder_paste_ratio");
Token.start = new Token("start");
Token.status = new Token("status");
Token.tags = new Token("tags");
Token.target = new Token("target");
Token.title = new Token("title");
Token.title_block = new Token("title_block");
Token.tedit = new Token("tedit");
Token.thermal_width = new Token("thermal_width");
Token.thermal_gap = new Token("thermal_gap");
Token.thermal_bridge_width = new Token("thermal_bridge_width");
Token.thickness = new Token("thickness");
Token.top = new Token("top");
Token.trace_width = new Token("trace_width");
Token.tracks = new Token("tracks");
Token.trace_min = new Token("trace_min");
Token.trace_clearance = new Token("trace_clearance");
Token.trapezoid = new Token("trapezoid");
Token.thru = new Token("thru");
Token.thru_hole = new Token("thru_hole");
Token.thru_hole_only = new Token("thru_hole_only");
Token.tstamp = new Token("tstamp");
Token.user = new Token("user");
Token.user_trace_width = new Token("user_trace_width");
Token.user_via = new Token("user_via");
Token.uvia_dia = new Token("uvia_dia");
Token.uvia_drill = new Token("uvia_drill");
Token.uvia_min_drill = new Token("uvia_min_drill");
Token.uvia_min_size = new Token("uvia_min_size");
Token.uvia_size = new Token("uvia_size");
Token.uvias_allowed = new Token("uvias_allowed");
Token.value = new Token("value");
Token.version = new Token("version");
Token.via = new Token("via");
Token.vias = new Token("vias");
Token.via_dia = new Token("via_dia");
Token.via_drill = new Token("via_drill");
Token.via_min_drill = new Token("via_min_drill");
Token.via_min_size = new Token("via_min_size");
Token.via_size = new Token("via_size");
Token.virtual = new Token("virtual");
Token.visible_elements = new Token("visible_elements");
Token.width = new Token("width");
Token.x = new Token("x");
Token.xy = new Token("xy");
Token.xyz = new Token("xyz");
Token.yes = new Token("yes");
Token.zone = new Token("zone");
Token.zone_45_only = new Token("zone_45_only");
Token.zone_clearance = new Token("zone_clearance");
Token.zone_connect = new Token("zone_connect");
Token.zone_type = new Token("zone_type");
Token.zones = new Token("zones");
exports.Token = Token;

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * This program source code file is part of kicad-utils.
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

Object.defineProperty(exports, "__esModule", { value: true });
exports.STROKE_FONT = [
/* // BASIC LATIN (0020-007F) */
"JZ", "MWRYSZR[QZRYR[ RRSQGRFSGRSRF", "JZNFNJ RVFVJ", "H]LM[M RRDL_ RYVJV RS_YD", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RRCR^", "F^J[ZF RMFOGPIOKMLKKJIKGMF RYZZXYVWUUVTXUZW[YZ", "E_[[Z[XZUWPQNNMKMINGPFQFSGTITJSLRMLQKRJTJWKYLZN[Q[SZTYWUXRXP", "MWSFQJ", "KYVcUbS_R]QZPUPQQLRISGUDVC", "KYNcObQ_R]SZTUTQSLRIQGODNC", "JZRFRK RMIRKWI ROORKUO", "E_JSZS RR[RK", "MWSZS[R]Q^", "E_JSZS", "MWRYSZR[QZRYR[", "G][EI`bQbQDVD", "KYID[_", "KYNbSbSDND", "LXNHREVH", "JZJ]Z]", "NVPESH", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR", "H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ", "HZVZT[P[NZMYLWLQMONNPMTMVN", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT", "MYOMWM RR[RISGUFWF", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN", "H[M[MF RV[VPUNSMPMNNMO", "MWR[RM RRFQGRHSGRFRH", "MWRMR_QaObNb RRFQGRHSGRFRH", "IZN[NF RPSV[ RVMNU", "MXU[SZRXRF", "D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[", "I\\NMN[ RNOONQMTMVNWPW[", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[", "H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ", "I\\WMWb RWZU[Q[OZNYMWMQNOONQMUMWN", "KXP[PM RPQQORNTMVM", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN", "MYOMWM RRFRXSZU[W[", "H[VMV[ RMMMXNZP[S[UZVY", "JZMMR[WM", "G]JMN[RQV[ZM", "IZL[WM RLMW[", "JZMMR[ RWMR[P`OaMb", "IZLMWML[W[", "KYVcUcSbR`RVQTOSQRRPRFSDUCVC", "H\\RbRD", "KYNcOcQbR`RVSTUSSRRPRFQDOCNC", "KZMSNRPQTSVRWQ", "F^K[KFYFY[K[",
/* // LATIN-1 SUPPLEMENT (0080-00FF) */
aRbQaRURb", "HZVZT[P[NZMYLWLQMONNPMTMVN RRJR^", "H[LMTM RL[W[ RO[OIPGRFUFWG", "H]LYOV RLLOO RVVYY RVOYL RVVTWQWOVNTNQOOQNTNVOWQWTVV", "F^JTZT RJMZM RRQR[ RKFRQYF", "MWRbRW RRFRQ", "I[N]P^S^U]V[UYOSNQNPONQM RVGTFQFOGNIOKUQVSVTUVSW", "LXNFOGNHMGNFNH RVFWGVHUGVFVH", "@dVKTJPJNKLMKOKSLUNWPXTXVW RRCMDHGELDQEVH[M^R_W^\\[_V`Q_L\\GWDRC", "KZOEQDSDUEVGVN RVMTNQNOMNKOIQHVH", "H\\RMLSRY RXWTSXO", "E_JQZQZV", "RR", "@dWXRR RNXNJTJVKWMWOVQTRNR RRCMDHGELDQEVH[M^R_W^\\[_V`Q_L\\GWDRC", "LXMGWG", "JZRFPGOIPKRLTKUITGRF", "E_JOZO RRWRG RZ[J[", "JZNAP@S@UAVCVEUGNNVN", "JZN@V@RESEUFVHVKUMSNPNNM", "NVTEQH", "H^MMMb RWXXZZ[ RMXNZP[T[VZWXWM", "F]VMV[ ROMOXNZL[ RZMMMKNJP", "JZRRQSRTSSRRRT", "MWR\\T]U_TaRbOb", "JZVNNN RNCPBR@RN", "KYQNOMNKNGOEQDSDUEVGVKUMSNQN", "H\\RMXSRY RLWPSLO", "G]KQYQ RVNNN RNCPBR@RN RUYUa RQSN]W]", "G]KQYQ RVNNN RNCPBR@RN RNTPSSSUTVVVXUZNaVa", "G]KQYQ RN@V@RESEUFVHVKUMSNPNNM RUYUa RQSN]W]", "I[SORNSMTNSOSM RWaUbPbNaM_M]N[OZQYRXSVSU", "I[MUWU RK[RFY[ RP>SA", "I[MUWU RK[RFY[ RT>QA", "I[MUWU RK[RFY[ RNAR>VA", "I[MUWU RK[RFY[ RMAN@P?TAV@W?", "I[MUWU RK[RFY[ RN?O@NAM@N?NA RV?W@VAU@V?VA", "I[MUWU RK[RFY[ RRFPEOCPAR@TAUCTERF", "F`JURU RRPYP RH[OF\\F RRFR[\\[", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR\\T]U_TaRbOb", "H[MPTP RW[M[MFWF RP>SA", "H[MPTP RW[M[MFWF RT>QA", "H[MPTP RW[M[MFWF RNAR>VA", "H[MPTP RW[M[MFWF RN?O@NAM@N?NA RV?W@VAU@V?VA", "MWR[RF RP>SA", "MWR[RF RT>QA", "MWR[RF RNAR>VA", "MWR[RF RN?O@NAM@N?NA RV?W@VAU@V?VA", "G\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RIPQP", "G]L[LFX[XF RMAN@P?TAV@W?", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RP>SA", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RT>QA", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAR>VA", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RMAN@P?TAV@W?", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN?O@NAM@N?NA RV?W@VAU@V?VA", "E_LMXY RXMLY", "G]ZFJ[ RP[NZLXKTKMLINGPFTFVGXIYMYTXXVZT[P[", "G]LFLWMYNZP[T[VZWYXWXF RP>SA", "G]LFLWMYNZP[T[VZWYXWXF RT>QA", "G]LFLWMYNZP[T[VZWYXWXF RNAR>VA", "G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA", "I[RQR[ RKFRQYF RT>QA", "G\\LFL[ RLKTKVLWMXOXRWTVUTVLV", "F]K[KJLHMGOFRFTGUHVJVMSMQNPPPQQSSTVTXUYWYXXZV[R[PZ", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RPESH", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RTEQH", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHREVH", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RMHNGPFTHVGWF", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNFOGNHMGNFNH RVFWGVHUGVFVH", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRHPGOEPCRBTCUETGRH", "D`INKMOMQNRP R[ZY[U[SZRXRPSNUMYM[N\\P\\RRSKSITHVHXIZK[O[QZRX", "HZVZT[P[NZMYLWLQMONNPMTMVN RR\\T]U_TaRbOb", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RPESH", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RTEQH", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHREVH", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNFOGNHMGNFNH RVFWGVHUGVFVH", "MWR[RM RPESH", "MWR[RM RTEQH", "LXNHREVH RR[RM", "LXNFOGNHMGNFNH RVFWGVHUGVFVH RR[RM", "I\\SCQI RWNUMQMONNOMQMXNZP[T[VZWXWLVITGRFNE", "I\\NMN[ RNOONQMTMVNWPW[ RMHNGPFTHVGWF", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RPESH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEQH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHREVH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMHNGPFTHVGWF", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNFOGNHMGNFNH RVFWGVHUGVFVH", "E_ZSJS RRXSYRZQYRXRZ RRLSMRNQMRLRN", "H[XMK[ RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[", "H[VMV[ RMMMXNZP[S[UZVY RPESH", "H[VMV[ RMMMXNZP[S[UZVY RTEQH", "H[VMV[ RMMMXNZP[S[UZVY RNHREVH", "H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH", "JZMMR[ RWMR[P`OaMb RTEQH", "H[MFMb RMNOMSMUNVOWQWWVYUZS[O[MZ", "JZMMR[ RWMR[P`OaMb RNFOGNHMGNFNH RVFWGVHUGVFVH",
/* // LATIN EXTENDED-A (0100-017F) */
"I[MUWU RK[RFY[ RM@W@", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RMGWG", "I[MUWU RK[RFY[ RN>O@QASAU@V>", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE", "I[MUWU RK[RFY[ RY[W]V_WaYb[b", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RW[U]T_UaWbYb", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RT>QA", "HZVZT[P[NZMYLWLQMONNPMTMVN RTEQH", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RNAR>VA", "HZVZT[P[NZMYLWLQMONNPMTMVN RNHREVH", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR?Q@RAS@R?RA", "HZVZT[P[NZMYLWLQMONNPMTMVN RRFQGRHSGRFRH", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RN>RAV>", "HZVZT[P[NZMYLWLQMONNPMTMVN RNERHVE", "G\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RN>RAV>", "IfW[WF RWZU[Q[OZNYMWMQNOONQMUMWN RbF`J", "G\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RIPQP", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RRHZH", "H[MPTP RW[M[MFWF RM@W@", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RMGWG", "H[MPTP RW[M[MFWF RN>O@QASAU@V>", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNEOGQHSHUGVE", "H[MPTP RW[M[MFWF RR?Q@RAS@R?RA", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RRFQGRHSGRFRH", "H[MPTP RW[M[MFWF RR[P]O_PaRbTb", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RR[P]O_PaRbTb", "H[MPTP RW[M[MFWF RN>RAV>", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNERHVE", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RNAR>VA", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RNHREVH", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RN>O@QASAU@V>", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RNEOGQHSHUGVE", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RR?Q@RAS@R?RA", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RRFQGRHSGRFRH", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RR\\T]U_TaRbOb", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RRGPFODPBRAUA", "G]L[LF RLPXP RX[XF RNAR>VA", "H[M[MF RV[VPUNSMPMNNMO RIAM>QA", "G]IJ[J RL[LF RLPXP RX[XF", "H[M[MF RV[VPUNSMPMNNMO RJHRH", "MWR[RF RMAN@P?TAV@W?", "MWR[RM RMHNGPFTHVGWF", "MWR[RF RM@W@", "MWR[RM RMGWG", "MWR[RF RN>O@QASAU@V>", "MWR[RM RNEOGQHSHUGVE", "MWR[RF RR[P]O_PaRbTb", "MWR[RM RR[P]O_PaRbTb", "MWR[RF RR?Q@RAS@R?RA", "MWR[RM", "MgR[RF RbFbUaX_Z\\[Z[", "MaR[RM RRFQGRHSGRFRH R\\M\\_[aYbXb R\\F[G\\H]G\\F\\H", "JZUFUUTXRZO[M[ RQAU>YA", "MWRMR_QaObNb RNHREVH", "G\\L[LF RX[OO RXFLR RR\\T]U_TaRbOb", "IZN[NF RPSV[ RVMNU RR\\T]U_TaRbOb", "IZNMN[ RPSV[ RVMNU", "HYW[M[MF RO>LA", "MXU[SZRXRF RTEQH", "HYW[M[MF RR\\T]U_TaRbOb", "MXU[SZRXRF RR\\T]U_TaRbOb", "HYW[M[MF RVHSK", "M^U[SZRXRF RZFXJ", "HYW[M[MF RUNTOUPVOUNUP", "M\\U[SZRXRF RYOZPYQXPYOYQ", "HYW[M[MF RJQPM", "MXU[SZRXRF ROQUM", "G]L[LFX[XF RT>QA", "I\\NMN[ RNOONQMTMVNWPW[ RTEQH", "G]L[LFX[XF RR\\T]U_TaRbOb", "I\\NMN[ RNOONQMTMVNWPW[ RR\\T]U_TaRbOb", "G]L[LFX[XF RN>RAV>", "I\\NMN[ RNOONQMTMVNWPW[ RNERHVE", "MjSFQJ R\\M\\[ R\\O]N_MbMdNePe[", "G]LFL[ RLINGPFTFVGWHXJX^W`VaTbQb", "I\\NMN[ RNOONQMTMVNWPW_VaTbRb", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RM@W@", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMGWG", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN>O@QASAU@V>", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNEOGQHSHUGVE", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RQ>NA RX>UA", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RQENH RXEUH", "E`RPYP RRFR[ R\\FNFLGJIIMITJXLZN[\\[", "C`[ZY[U[SZRXRPSNUMYM[N\\P\\RRT RRQQOPNNMKMINHOGQGWHYIZK[N[PZQYRW", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RT>QA", "KXP[PM RPQQORNTMVM RTEQH", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RR\\T]U_TaRbOb", "KXP[PM RPQQORNTMVM RR\\T]U_TaRbOb", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RN>RAV>", "KXP[PM RPQQORNTMVM RNERHVE", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RT>QA", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RTEQH", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RNAR>VA", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RNHREVH", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RR\\T]U_TaRbOb", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RR\\T]U_TaRbOb", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RN>RAV>", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RNERHVE", "JZLFXF RR[RF RR\\T]U_TaRbOb", "MYOMWM RRFRXSZU[W[ RR\\T]U_TaRbOb", "JZLFXF RR[RF RN>RAV>", "M[OMWM RYFXI RRFRXSZU[W[", "JZLFXF RR[RF RNQVQ", "MYOMWM RRFRXSZU[W[ ROSUS", "G]LFLWMYNZP[T[VZWYXWXF RMAN@P?TAV@W?", "H[VMV[ RMMMXNZP[S[UZVY RMHNGPFTHVGWF", "G]LFLWMYNZP[T[VZWYXWXF RM@W@", "H[VMV[ RMMMXNZP[S[UZVY RMGWG", "G]LFLWMYNZP[T[VZWYXWXF RN>O@QASAU@V>", "H[VMV[ RMMMXNZP[S[UZVY RNEOGQHSHUGVE", "G]LFLWMYNZP[T[VZWYXWXF RRAP@O>P<R;T<U>T@RA", "H[VMV[ RMMMXNZP[S[UZVY RRHPGOEPCRBTCUETGRH", "G]LFLWMYNZP[T[VZWYXWXF RQ>NA RX>UA", "H[VMV[ RMMMXNZP[S[UZVY RQENH RXEUH", "G]LFLWMYNZP[T[VZWYXWXF RR[P]O_PaRbTb", "H[VMV[ RMMMXNZP[S[UZVY RV[T]S_TaVbXb", "F^IFN[RLV[[F RNAR>VA", "G]JMN[RQV[ZM RNHREVH", "I[RQR[ RKFRQYF RNAR>VA", "JZMMR[ RWMR[P`OaMb RNHREVH", "JZLFXF RR[RF RN?O@NAM@N?NA RV?W@VAU@V?VA", "H\\KFYFK[Y[ RT>QA", "IZLMWML[W[ RTEQH", "H\\KFYFK[Y[ RR?Q@RAS@R?RA", "IZLMWML[W[ RRFQGRHSGRFRH", "H\\KFYFK[Y[ RN>RAV>", "IZLMWML[W[ RNERHVE", "MYR[RISGUFWF",
/* // LATIN EXTENDED-B (0180-024F) */
aTbPbNa", "I\\WPPP RM[W[WFMF", "F^MHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZLXKVJRZP", "G[PPTP RWGUFPFNGMHLJLLMNNOPPMQLRKTKWLYMZO[U[WZ", "HZTPMP RM[MFWF RM[M_LaJbHb", "MYOMWM RR[RISGUFWF RR[R_QaObMb", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RMHKGJEKCLB", "I[KFU[U_TaRbPaO_O[YF", "D`I[IF RIOJNLMOMQNRPRXSZU[X[ZZ[Y\\W\\P[NZM", "MZRFRWSYTZV[X[", "MWR[RF RNPVP", "G_L[LF RX[OO RLRWGYF[G\\I\\K", "IZNMN[ RPSV[ RVMNU RNMNIOGQFSF", "MXU[SZRXRF RNOVO", "JZRMM[ RMFOFPGRMW[ RNLTH", "Ca\\F\\[ R\\XZZX[V[TZSYRWRF RRWQYPZN[L[JZIYHWHF", "G]L[LFX[XF RL[L_KaIbGb", "I\\NMN[ RNOONQMTMVNWPWb", "G]KPYP RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RVGXFYDXBWA", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUNWMXKWIVH", "DaSGQFMFKGIIHMHTIXKZM[Q[SZUXVTVMUISGUFYF[G\\I\\b", "E^RNPMMMKNJOIQIWJYKZM[P[RZSYTWTQSORNTMVMXNYPYb", "C\\LFL[ RFKFIGGIFTFVGWHXJXMWOVPTQLQ", "H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RRMRISGUFWF", "G\\LFL[ RQVXb RLKTKVLWMXOXRWTVUTVLV", "H\\XZU[P[NZMYLWLUMSNRPQTPVOWNXLXJWHVGTFOFLG", "IZVZT[P[NZMXMWNUPTSTUSVQVPUNSMPMNN", "H[W[L[SPLFWF", "JYWbUbSaR_RIQGOFMGLIMKOLQKRI", "MYOMWM RRFRXSZU[W[ RW[W_VaTbRb", "HZR[RF RKKKILGNFXF", "MYOMWM RWFUFSGRIRXSZU[W[", "JZLFXF RR[RF RR[R_SaUbWb", "G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@", "H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG", "F^ZFUFUJWKYMZPZUYXWZT[P[MZKXJUJPKMMKOJOFJF", "G]LFLWMYNZP[T[VZXXYVYIXGWF", "I`RQR[ RKFRQXGZF\\G]I]K", "J^MMR[ RMbOaP`R[VNXMZN[P[R", "H\\KFYFK[Y[ RNPVP", "IZLMWML[W[ RNTVT", "H\\KFXFQNTNVOWPXRXWWYVZT[N[LZKY", "H\\YFLFSNPNNOMPLRLWMYNZP[V[XZYY", "JZWMNMUVRVPWOXNZN^O`PaRbUbWa", "JZMMVMOTSTUUVWVXUZS[Q[O\\N^N_OaQbVb", "H\\LHMGOFTFVGWHXJXLWOK[X[ RNSVS", "H\\WFMFLPMOONTNVOWPXRXWWYVZT[O[MZLY", "JZVMOMNSPRSRUSVUVXUZS[P[NZ", "J^MZP[T[WZYXZVZSYQWOTNPNPF RLITI", "H[MMMb RMONNPMTMVNWPWSVUM^", "MWRFRb", "JZOFOb RUFUb", "MWRFRb ROWUW ROQUQ", "MWRYSZR[QZRYR[ RRSQGRFSGRSRF", "GpL[LFQFTGVIWKXOXRWVVXTZQ[L[ R_FmF_[m[ Rb>fAj>", "GmL[LFQFTGVIWKXOXRWVVXTZQ[L[ R_MjM_[j[ RaEeHiE", "ImW[WF RWZU[Q[OZNYMWMQNOONQMUMWN R_MjM_[j[ RaEeHiE", "HiW[M[MF RdFdUcXaZ^[\\[", "HcW[M[MF R^M^_]a[bZb R^F]G^H_G^F^H", "MbU[SZRXRF R]M]_\\aZbYb R]F\\G]H^G]F]H", "GmL[LFX[XF RhFhUgXeZb[`[", "GgL[LFX[XF RbMb_aa_b^b RbFaGbHcGbFbH", "IfNMN[ RNOONQMTMVNWPW[ RaMa_`a^b]b RaF`GaHbGaFaH", "I[MUWU RK[RFY[ RN>RAV>", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNERHVE", "MWR[RF RN>RAV>", "MWR[RM RNERHVE", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RN>RAV>", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNERHVE", "G]LFLWMYNZP[T[VZWYXWXF RN>RAV>", "H[VMV[ RMMMXNZP[S[UZVY RNERHVE", "G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA RM;W;", "H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH RM@W@", "G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA RT9Q<", "H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA", "G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA RN9R<V9", "H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH RN>RAV>", "G]LFLWMYNZP[T[VZWYXWXF RN?O@NAM@N?NA RV?W@VAU@V?VA RP9S<", "H[VMV[ RMMMXNZP[S[UZVY RNFOGNHMGNFNH RVFWGVHUGVFVH RP>SA", "I[NNPMTMVNWPWXVZT[P[NZMXMVWT", "I[MUWU RK[RFY[ RN?O@NAM@N?NA RV?W@VAU@V?VA RM;W;", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNFOGNHMGNFNH RVFWGVHUGVFVH RM@W@", "I[MUWU RK[RFY[ RR?Q@RAS@R?RA RM;W;", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRFQGRHSGRFRH RM@W@", "F`JURU RRPYP RH[OF\\F RRFR[\\[ RO@Y@", "D`INKMOMQNRP R[ZY[U[SZRXRPSNUMYM[N\\P\\RRSKSITHVHXIZK[O[QZRX RMGWG", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RSV[V", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RS^[^", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RN>RAV>", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RNERHVE", "G\\L[LF RX[OO RXFLR RN>RAV>", "IZN[NF RPSV[ RVMNU RJANDRA", "G]R[P]O_PaRbTb RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF", "H[R[P]O_PaRbTb RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[", "G]R[P]O_PaRbTb RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RM@W@", "H[R[P]O_PaRbTb RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RMGWG", "H\\KFXFQNTNVOWPXRXWWYVZT[N[LZKY RN>RAV>", "JZMMVMOVRVTWUXVZV^U`TaRbObMa RNERHVE", "MWRMR_QaObNb RNERHVE", "GpL[LFQFTGVIWKXOXRWVVXTZQ[L[ R_FmF_[m[", "GmL[LFQFTGVIWKXOXRWVVXTZQ[L[ R_MjM_[j[", "ImW[WF RWZU[Q[OZNYMWMQNOONQMUMWN R_MjM_[j[", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RT>QA", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RTEQH", "CaH[HF RHPTP RTFTXUZW[Z[\\Z]X]M", "G\\LFLb RLINGPFTFVGWHXJXOWRUUL^", "G]L[LFX[XF RP>SA", "I\\NMN[ RNOONQMTMVNWPW[ RPESH", "I[MUWU RK[RFY[ RZ9X< RR;P<O>P@RAT@U>T<R;", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RZ@XC RRBPCOEPGRHTGUETCRB", "F`JURU RRPYP RH[OF\\F RRFR[\\[ RV>SA", "D`INKMOMQNRP R[ZY[U[SZRXRPSNUMYM[N\\P\\RRSKSITHVHXIZK[O[QZRX RTEQH", "G]ZFJ[ RP[NZLXKTKMLINGPFTFVGXIYMYTXXVZT[P[ RT>QA", "H[XMK[ RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEQH", "I[MUWU RK[RFY[ ROAL> RVAS>", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR ROHLE RVHSE", "I[MUWU RK[RFY[ RNAO?Q>S>U?VA", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHOFQESEUFVH", "H[MPTP RW[M[MFWF ROAL> RVAS>", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT ROHLE RVHSE", "H[MPTP RW[M[MFWF RNAO?Q>S>U?VA", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHOFQESEUFVH", "MWR[RF ROAL> RVAS>", "MWR[RM ROHLE RVHSE", "MWR[RF RNAO?Q>S>U?VA", "MWR[RM RNHOFQESEUFVH", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF ROAL> RVAS>", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ ROHLE RVHSE", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAO?Q>S>U?VA", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHOFQESEUFVH", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ ROAL> RVAS>", "KXP[PM RPQQORNTMVM RPHME RWHTE", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RNAO?Q>S>U?VA", "KXP[PM RPQQORNTMVM ROHPFRETEVFWH", "G]LFLWMYNZP[T[VZWYXWXF ROAL> RVAS>", "H[VMV[ RMMMXNZP[S[UZVY ROHLE RVHSE", "G]LFLWMYNZP[T[VZWYXWXF RNAO?Q>S>U?VA", "H[VMV[ RMMMXNZP[S[UZVY RNHOFQESEUFVH", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RS`SaRcQd", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RS`SaRcQd", "JZLFXF RR[RF RS`SaRcQd", "MYOMWM RRFRXSZU[W[ RU`UaTcSd", "I]VRXTYVY[X]V_T`Lb RLHMGOFUFWGXHYJYNXPVRTSNU", "J[UWVXWZW]V_U`SaMb RMNOMSMUNVOWQWTVVUWSXOY", "G]L[LF RLPXP RX[XF RN>RAV>", "H[M[MF RV[VPUNSMPMNNMO RI>MAQ>", "G]L[LFX[XF RX[Xb", "IbWFWXXZZ[\\[^Z_X^V\\UZVV^ RWNUMQMONNOMQMWNYOZQ[T[VZWX", "G]NFLGKIKKLMMNOO RVFXGYIYKXMWNUO ROOUOWPXQYSYWXYWZU[O[MZLYKWKSLQMPOO", "J[MJMMNORQVOWMWJ RPQTQVRWTWXVZT[P[NZMXMTNRPQ", "H\\KFYFK[Y[ RY[Y_XaVbTb", "IZLMWML[W[ RW[W_VaTbRb", "I[MUWU RK[RFY[ RR?Q@RAS@R?RA", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRFQGRHSGRFRH", "H[MPTP RW[M[MFWF RR\\T]U_TaRbOb", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RR\\T]U_TaRbOb`OaMb RMGWG", "M]RFRXSZU[W[YZZXYVWUUVQ^", "IbNMN[ RNOONQMTMVNWPWXXZZ[\\[^Z_X^V\\UZVV^", "M]OMWM RRFRXSZU[W[YZZXYVWUUVQ^", "MWRMR_QaObNb", "D`R[RF RRZP[L[JZIYHWHQIOJNLMPMRN RTMXMZN[O\\Q\\W[YZZX[T[RZ", "D`RMRb RRZP[L[JZIYHWHQIOJNLMPMRN RTMXMZN[O\\Q\\W[YZZX[T[RZ", "I[MUWU RK[RFY[ RXCL`", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RXCL`", "HZVZT[P[NZMYLWLQMONNPMTMVN RWHM`", "HYW[M[MF RIOQO", "JZLFXF RR[RF RXCL`", "J[P[R^T_W_ RNZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN", "IZLMWML[N[P\\R^T_W_", "J^MGPFTFWGYIZKZNYPWRTSPSP[", "J^NNPMTMVNWOXQXSWUVVTWPWP[", "G\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP RIUOU", "G]IM[M RLFLWMYNZP[T[VZWYXWXF", "I[Y[RFK[", "H[MPTP RW[M[MFWF RXCL`", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RWHM`", "JZUFUUTXRZO[M[ RQPYP", "MWRMR_QaObNb ROTUT RRFQGRHSGRFRH", "G]XFX^Y`Za\\b^b RXIVGTFPFNGLIKMKTLXNZP[T[VZXX", "I\\WMW^X`Ya[b]b RWZU[Q[OZNYMWMQNOONQMUMWN", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RIQOQ", "KXP[PM RPQQORNTMVM RMTUT", "I[KIYI RRQR[ RKFRQYF", "JZLQXQ RMMR[ RWMR[P`OaMb",
/* // IPA EXTENSIONS (0250-02AF) */
"H[MMMXNZP[T[VZ RMNOMTMVNWPWRVTTUOUMV", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[", "G\\K[NQOOPNRMTMVNWOXRXVWYVZT[R[PZOYNWMPLNJM", "H[RFPFNGMIM[ RMNOMSMUNVOWQWWVYUZS[O[MZ", "J\\NNPMTMVNWOXQXWWYVZT[P[NZ", "HZVNTMPMNNMOLQLWMYNZP[S[UZVXUVSUQVM^", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RW[W_XaZb\\b", "I\\\\FZFXGWIW[ RWZU[Q[OZNYMWMQNOONQMUMWN", "I[NZP[T[VZWXWPVNTMPMNNMPMRWT", "I[NNPMTMVNWPWXVZT[P[NZMXMVWT", "IbNNPMTMVNWPWXVZT[P[NZMXMV\\S\\U]W_X`X", "IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN", "J[TTVSWQWPVNTMPMNN RRTTTVUWWWXVZT[P[NZ", "JaRTTTVUWWWXVZT[P[NZ RNNPMTMVNWPWQVSTT[S[U\\W^X_X", "H[TTVSWQWPVNTMPMNNMOLRLVMYNZP[T[VZWXWWVUTTRT", "MWRMR_QaObNb ROTUT", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RWMWIXGZF\\F", "I\\WYVZT[P[NZMXMQNOONQMWMW^V`UaSbMb", "HZUNSMPMNNMOLQLWMYNZP[T[VZVUSU", "JZMMU[U_TaRbPaO_O[WM", "JZMMTVUXTZR[PZOXPVWM", "I\\WMWb RNMNXOZQ[T[VZWY", "H[RFPFNGMIM[ RV[VPUNSMPMNNMO", "H[RFPFNGMIM[ RV[VPUNSMPMNNMO RV[V_UaSbQb", "MWR[RM ROTUT RRFQGRHSGRFRH", "MXRMRXSZU[", "MWR[RM RU[O[ RUMOM", "MXU[SZRXRF RMONNPMTOVNWM", "IYU[SZRXRF RRQQOONMOLQMSOTWT", "MXRFR_SaUbWb", "GZLFLXMZO[ RLMVMOVRVTWUXVZV^U`TaRbObMa", "D`[M[[ R[YZZX[U[SZRXRM RRXQZO[L[JZIXIM", "D`[M[[ R[YZZX[U[SZRXRM RRXQZO[L[JZIXIM R[[[b", "D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ R[[[_ZaXbVb", "I\\NMN[ RNOONQMTMVNWPW[ RN[N_MaKbIb", "I\\NMN[ RNOONQMTMVNWPW[ RW[W_XaZb\\b", "H[M[MMV[VM", "H[LTWT RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[", "E]RTXT RRMR[ RZMMMKNJOIQIWJYKZM[Z[", "G]RTRXSZU[V[XZYXYQXOWNUMOMMNLOKQKXLZN[O[QZRX", "G]RFRb RPMTMVNXPYRYVXXVZT[P[NZLXKVKRLPNNPM", "LYTMT[ RTWSYRZP[N[", "LYTMT[ RTWSYRZP[N[ RTMTF", "LYTMT[ RTWSYRZP[N[ RT[T_UaWbYb", "KXP[PM RPQQORNTMVM RP[Pb", "KXP[PM RPQQORNTMVM RP[P_QaSbUb", "KXM[S[ RVMTMRNQOPRP[", "LYW[Q[ RNMPMRNSOTRT[", "I[RUW[ RN[NMTMVNWPWRVTTUNU", "I[RSWM RNMN[T[VZWXWVVTTSNS", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RN[N_OaQbSb", "KYWFUFSGRIR_QaObMb", "MWRMR_QaObNb ROTUT RRMRISGUFWF", "KYMFOFQGRIRXSZU[W[", "KYWFUFSGRIR_QaObMaL_M]O\\V\\", "KWU[M[ RRbRPQNOMMM", "MYOMWM RRFR_SaUbWb", "H[JRYR RVMV[ RMMMXNZP[S[UZVY", "I\\XMUMUPWRXTXWWYVZT[Q[OZNYMWMTNRPPPMMM", "H[MMMXNZP[S[UZVYWWWPVNUM", "JZW[RMM[", "G]Z[VMRWNMJ[", "JZW[RM RM[RMTHUGWF", "KYRTR[ RMMRTWM", "IZLMWML[W[ RW[W_XaZb\\b", "IZLMWML[T[VZWXVVTURVN^", "JZMMVMOVRVTWUXVZV^U`TaRbObMa", "JZMMVMOVRVTWUXVZV^U`TaRbPbNaM_N]P\\R]Uc", "J^MGPFTFWGYIZKZNYPWRTSPSP[", "FZWGTFPFMGKIJKJNKPMRPSTST[", "J^MZP[T[WZYXZVZSYQWOTNPNPF", "F[WHVGSFQFNGLIKKJOJYK]L_NaQbSbVaW`", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RROQPRQSPRORQ", "I[STVUWWWXVZT[N[NMSMUNVPVQUSSTNT", "I\\PTNUMWMXNZP[T[VZWYXVXRWOVNTMPMNNMPMQNSPTRT", "HZUNSMPMNNMOLQLWMYNZP[T[VZVUSU RUMUIVGXFZF", "H[MTVT RMMM[ RVMV[", "LXRMR_QaObMaL_M]O\\V\\ RRFQGRHSGRFRH", "J[VMVb RTUNM RN[VS", "JYOMO[V[", "I\\WMWb RWZU[Q[OZNYMWMQNOONQMUMWN RWMWIXGZF\\F", "J^MGPFTFWGYIZKZNYPWRTSPSP[ RLXTX", "FZWGTFPFMGKIJKJNKPMRPSTST[ RPXXX", "D`R[RF RRM]MR[][ RRZP[L[JZIYHWHQIOJNLMPMRN", "E`RFR[ RRNPMMMKNJOIQIWJYKZM[P[RZ RRM\\MUVXVZW[X\\Z\\^[`ZaXbUbSa", "D`R[RF RRM]MR[Z[\\Z]X\\VZUXVT^ RRZP[L[JZIYHWHQIOJNLMPMRN", "G^IMQM RLFLXMZO[QZS[W[YZZXZWYUWTTTRSQQQPRNTMWMYN", "I[KMTM RNFNXOZQ[T[ RYFWFUGTIT_SaQbOb", "F^HMPM RKFKXLZN[P[RZ RZNXMTMRNQOPQPWQYRZT[W[YZZXYVWUUVQ^", "F]HMPMP[ RK[KILGNFPF RPOQNSMVMXNYPY_XaVbTb", "G^LFLXMZO[QZS[W[YZZXZWYUWTTTRSQQQPRNTMWMYN", "H^MM[MP[ RMFMXNZP[[[", "G]JSN[RUV[ZS RJFNNRHVNZF", "G]XXXSLSLX RXKXFLFLK", "I\\WMWb RNMNXOZQ[T[VZWY RNMNIMGKFIF", "I\\\\bZbXaW_WM RNMNXOZQ[T[VZWY RNMNIMGKFIF",
/* // SPACING MODIFIER LETTERS (02B0-02FF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // COMBINING DIACRITICAL MARKS (0300-036F) */

/* // GREEK AND COPTIC (0370-03FF) */
"H[MFM[ RXPMP", "IZNTVT RNMN[", "G]R[RF RKOKFYFYO", "I[R[RF RMOMFWFWO", "MWSFQJ", "MWS[Q_", "G]LFL[XFX[", "H\\MMM[WMW[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "NVR`RcSdTd", "J\\NZP[T[VZWYXWXQWOVNTMPMNN", "HZVZT[P[NZMYLWLQMONNPMTMVN RRSQTRUSTRSRU", "J\\NZP[T[VZWYXWXQWOVNTMPMNN RRSQTRUSTRSRU", "MWSZS[R]Q^ RRNSORPQORNRP", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "NVTEQH", "LXNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA", "G[MUWU RK[RFY[ RMEJH", "JZRRQSRTSSRRRT", "B[MPTP RW[M[MFWF RHEEH", "A]L[LF RLPXP RX[XF RGEDH", "GWR[RF RMEJH", "RR", "B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RHEEH", "RR", "@[RQR[ RKFRQYF RFECH", "@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH", "MXRMRXSZU[ RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA", "I[MUWU RK[RFY[", "G\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP", "HZM[MFXF", "I[K[RFY[K[", "H[MPTP RW[M[MFWF", "H\\KFYFK[Y[", "G]L[LF RLPXP RX[XF", "F^OPUP RPFTFVGXIYKZNZSYVXXVZT[P[NZLXKVJSJNKKLINGPF", "MWR[RF", "G\\L[LF RX[OO RXFLR", "I[K[RFY[", "F^K[KFRUYFY[", "G]L[LFX[XF", "H[L[W[ RLFWF RUPNP", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF", "G]L[LFXFX[", "G\\L[LFTFVGWHXJXMWOVPTQLQ", "RR", "H[W[L[SPLFWF", "JZLFXF RR[RF", "I[RQR[ RKFRQYF", "G]R[RF RPITIWJYLZNZRYTWVTWPWMVKTJRJNKLMJPI", "H\\KFY[ RYFK[", "G]R[RF RHFJGKIKNLQMROSUSWRXQYNYIZG\\F", "F^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[", "MWR[RF RN?O@NAM@N?NA RV?W@VAU@V?VA", "I[RQR[ RKFRQYF RN?O@NAM@N?NA RV?W@VAU@V?VA", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEQH", "IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RTEQH", "I\\NMN[ RNOONQMTMVNWPWb RTEQH", "MXRMRXSZU[ RTEQH", "H[MMMXNZP[S[UZVYWWWPVNUM RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[", "H[SOUPVQWSWWVYUZS[P[NZMY RKbLaM_MINGPFSFUGVIVLUNSOQO", "JZRYRb RLMMMNNRYWM", "H[SMPMNNMOLQLWMYNZP[S[UZVYWWWQVOUNSMPLNKMINGPFTFVG", "IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN", "HZMFWFPMNPMSMWNYOZQ[S[U\\V^V_UaSbRb", "I\\NMN[ RNOONQMTMVNWPWb", "H[LPWP RPFSFUGVHWKWVVYUZS[P[NZMYLVLKMHNGPF", "MXRMRXSZU[", "IZNMN[ RPSV[ RVMNU", "JZRMM[ RMFOFPGRMW[", "H^MMMb RWXXZZ[ RMXNZP[T[VZWXWM", "J[MMR[WPWOVM", "HZMFWF RQFOGNINLONQOUO RQOOPNQMSMWNYOZQ[S[U\\V^V_UaSbRb", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[", "F]VMV[ ROMOXNZL[ RZMMMKNJP", "H\\MbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX", "HZVNTMPMNNMOLQLWMYNZP[S[U\\V^V_UaSb", "H\\YMPMNNMOLQLWMYNZP[S[UZVYWWWQVOUNSM", "H\\LPMNOMXM RRMRXSZU[", "H[MMMXNZP[S[UZVYWWWPVNUM", "G]MMLNKPKVLXNZP[T[VZXXYVYPXNVMUMSNRPRb", "IZWMLb RLMNNOPT_UaWb", "G]RMRb RKMKVLXNZP[T[VZXXYVYM", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM", "LXNFOGNHMGNFNH RVFWGVHUGVFVH RRMRXSZU[", "H[MMMXNZP[S[UZVYWWWPVNUM RNFOGNHMGNFNH RVFWGVHUGVFVH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEQH", "H[MMMXNZP[S[UZVYWWWPVNUM RTEQH", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEQH", "G\\L[LF RXFLR ROOX[Qb", "H[SOUPVQWSWWVYUZS[P[NZMXMINGPFSFUGVIVLUNSOQO", "H[JPKQLSLVMYNZP[S[UZVYWVWKVHUGSFPFNGMHLJLLMNNOPPWP", "I\\KFMFOGQIRKR[ RRKSHTGVFWFYGZI", "NiTEQH RXFZF\\G^I_K_[ R_K`HaGcFdFfGgI", "I\\KFMFOGQIRKR[ RRKSHTGVFWFYGZI RN?O@NAM@N?NA RV?W@VAU@V?VA", "G]RFRb RPMTMVNXPYRYVXXVZT[P[NZLXKVKRLPNNPM", "F^RTRX R[MIM RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM", "IZLMNNOPOXNZM[LZLXMVVRWPWNVMUNTPTXUZW[V^U`TaRb", "G]R[Rb RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF", "H[R[Rb RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[", "FZWFQFNGLIKKJOJRKVLXNZQ[R[T\\U^U_TaSbQb", "HZVMPMNNMOLQLWMYNZP[R[T\\U^U_TaRbPb", "HZTPMP RM[MFWF", "MZVPRP RWFUFSGRIR_QaOb", "H\\MFOGPILSXNTXUZW[", "I[RFMPWPR[", "H\\NGNL RXIULTNTW RKIMGPFTFVGXIYKZOZUYYX[", "H\\L[UR RR[WV RLMPNSPURWVXZXb", "CaRWRR R\\XY]V`SaMa RLFJGHIGLGUHXJZL[N[PZQYRWSYTZV[X[ZZ\\X]U]L\\IZGXF", "G]RTRX RXZW\\S`PaOa RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM", "G]XFXb RPFNGLIKMKTLXNZP[T[VZXX", "I\\WMWb RQMONNOMQMWNYOZQ[T[VZWY", "F]KFK[ RKQMOPNTNVOXQYTYWXZW\\U^R`Nb", "I[WLWMVPTRRSPSNRMPMONMPLRLTMVPWSWWVYUZS[M[", "F]KHLGOFTFWGXHYJYLXOVQJ[N^Q_V_Y^", "J[NNPMTMVNWPWRVTTVN[P]R^U^W]", "G]I[[[ RIFJFLGXZZ[ R[FZFXGLZJ[", "H[KMMNVZX[K[MZVNXM", "G\\XEVFOFMGLHKJKWLYMZO[T[VZWYXWXPWNVMTLNLLMKN", "H[WEVFTGPGNHMILKLWMYNZP[S[UZVYWWWQVOUNSMOMMNLO", "G]RFRb RKQKMYMYQ", "I[MMWM RRFRb", "IZLMNNOPOXNZM[LZLXMVVRWPWNVMUNTPTXUZW[", "H\\WbQbOaN`M^MQNOONQMTMVNWOXQXWWYVZT[Q[OZMX", "HZVZT[P[NZMYLWLQMONNPMTMVN", "MWRMR_QaObNb RRFQGRHSGRFRH", "G]KPYP RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF", "HZLTST RVZT[P[NZMYLWLQMONNPMTMVN", "J\\XTQT RNZP[T[VZWYXWXQWOVNTMPMNN", "G\\LFL[ RLKTKVLWMXOXRWTVUTVLV", "H[MFMb RMNOMSMUNVOWQWWVYUZS[O[MZ", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH", "F^K[KFRMYFY[", "G]LbLMRSXMX[", "G\\J`S` RMbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX", "I^MYNZQ[S[VZXXYVZRZOYKXIVGSFQFNGMH", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RROQPRQSPRORQ", "I^MYNZQ[S[VZXXYVZRZOYKXIVGSFQFNGMH RROQPRQSPRORQ",
/* // Cyrillic (0400-04FF) */
"H[MPTP RW[M[MFWF RP>SA", "H[MPTP RW[M[MFWF RN?O@NAM@N?NA RV?W@VAU@V?VA", "JbLFXF RR[RF RRMXM[N]P^S^\\]_[aXbVb", "HZM[MFXF RT>QA", "F[JPTP RWYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG", "MWR[RF", "MWR[RF RN?O@NAM@N?NA RV?W@VAU@V?VA", "JZUFUUTXRZO[M[", "AbC[D[FZGXILJILGOFRFR[X[[Z]X^V^S]Q[OXNRN", "AbF[FF RRFR[X[[Z]X^V^S]Q[OXNFN", "JbLFXF RR[RF RRMXM[N]P^S^[", "G\\L[LF RX[OO RXFLR RT>QA", "G]LFL[XFX[ RP>SA", "G[KFRT RYFPXNZL[K[ RN>O@QASAU@V>", "G]R[R` RLFL[X[XF", "I[MUWU RK[RFY[", "G\\VFLFL[R[UZWXXVXSWQUORNLN", "G\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP", "HZM[MFXF", "F^[`[[I[I` RW[WFRFPGOHNJL[", "H[MPTP RW[M[MFWF", "BbOOF[ RR[RF RRRFF R^[UO R^FRR", "I]PPTP RMGOFTFVGWHXJXLWNVOTPWQXRYTYWXYWZU[O[MZ", "G]LFL[XFX[", "G]LFL[XFX[ RN>O@QASAU@V>", "G\\L[LF RX[OO RXFLR", "F\\W[WFTFQGOINLLXKZI[H[", "F^K[KFRUYFY[", "G]L[LF RLPXP RX[XF", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF", "G]L[LFXFX[", "G\\L[LFTFVGWHXJXMWOVPTQLQ", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH", "JZLFXF RR[RF", "G[KFRT RYFPXNZL[K[", "G]R[RF RPITIWJYLZNZRYTWVTWPWMVKTJRJNKLMJPI", "H\\KFY[ RYFK[", "G]XFX[ RLFL[Z[Z`", "H\\WFW[ RLFLNMPNQPRWR", "CaRFR[ RHFH[\\[\\F", "CaRFR[ RHFH[\\[\\F R\\[^[^`", "F]HFMFM[S[VZXXYVYSXQVOSNMN", "Da\\F\\[ RIFI[O[RZTXUVUSTQROONIN", "H]MFM[S[VZXXYVYSXQVOSNMN", "I^ZQPQ RMHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZMY", "Cab RMNOMSMUNVOWQWWVYUZS[O[MZ", "HZVZT[P[NZMYLWLQMONNPMTMVN", "KYMMWM RRMR[", "JZMMR[ RWMR[P`OaMb", "G]RFRb RPMTMVNXPYRYVXXVZT[P[NZLXKVKRLPNNPM", "IZL[WM RLMW[", "I\\WMW[ RNMN[Y[Y`", "J\\VMV[ RNMNROTQUVU", "F^RMR[ RKMK[Y[YM", "F^RMR[ RKMK[Y[YM RY[[[[`", "HZJMNMN[S[UZVXVUUSSRNR", "F^YMY[ RKMK[P[RZSXSURSPRKR", "IZNMN[S[UZVXVUUSSRNR", "J\\XTQT RNNPMTMVNWOXQXWWYVZT[P[NZ", "E_JTPT RJMJ[ RT[RZQYPWPQQORNTMWMYNZO[Q[WZYYZW[T[", "I[RUM[ RV[VMPMNNMPMRNTPUVU", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RPESH", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNFOGNHMGNFNH RVFWGVHUGVFVH", "M^OKXK RRFR[ RRSSRUQWQYRZTZ[Y^WaVb", "JYO[OMWM RTEQH", "HZLTST RVZT[P[NZMYLWLQMONNPMTMVN", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN", "MWR[RM RRFQGRHSGRFRH", "LXNFOGNHMGNFNH RVFWGVHUGVFVH RR[RM", "MWRMR_QaObNb RRFQGRHSGRFRH", "E^H[JZKXLPMNOMRMR[W[YZZXZUYSWRRR", "D^IMI[ RRMR[W[YZZXZVYTWSIS", "M^OKXK RRFR[ RRSSRUQWQYRZTZ[", "IZNMN[ RPSV[ RVMNU RTEQH", "H\\MMM[WMW[ RPESH", "JZMMR[ RWMR[P`OaMb RNEOGQHSHUGVE", "H]R[R` RMMM[W[WM", "CaRWRR RLFJGHIGLGUHXJZL[N[PZQYRWSYTZV[X[ZZ\\X]U]L\\IZGXF", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM", "F]IIVI RMFM[S[VZXXYVYSXQVOSNMN", "HZJMTM RNFN[S[UZVXVUUSSRNR", "D`IFI[ RYPIP R\\Y[ZX[V[SZQXPVOROOPKQISGVFXF[G\\H", "F^KMK[ RWTKT RZZX[T[RZQYPWPQQORNTMXMZN", "F^LSXS RRSR[ RH[RF\\[", "I[NUVU RRUR[ RK[RMY[", "AbF[FF RFS\\S RVSV[ RL[VF`[", "E_J[JM RVUV[ RZUJU RO[VM][", "E_R[RPJFZFRP RI[IVJSLQOPUPXQZS[V[[", "G]R[RTLMXMRT RK[KXLVMUOTUTWUXVYXY[", "AcF[FF RFPSP RV[VPNF^FVP RM[MVNSPQSPYP\\Q^S_V_[", "DaI[IM RITST RV[VTPM\\MVT RO[OXPVQUSTYT[U\\V]X][", "H\\OPSP RNAQFSBTAUA RLGNFSFUGVHWJWLVNUOSPVQWRXTXWWYVZT[O[M\\L^L_MaObWb", "J[RTTT ROHRMTIUHVH RNNPMTMVNWPWQVSTTVUWWWXVZT[Q[O\\N^N_OaQbVb", "G]R[RF RHFJGKIKNLQMROSUSWRXQYNYIZG\\F", "G]RMRb RKMKVLXNZP[T[VZXXYVYM", "G]KPYP RPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF", "H[LTWT RP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[", "I[KFR[YF", "JZMMR[WM", "I[KFR[YF ROAL> RVAS>", "JZMMR[WM ROHLE RVHSE", "GmPFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF R`Me[ RjMe[c`ba`b", "HkP[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ R^Mc[ RhMc[a``a^b", "CaRXR^ RRCRI RMFJGHIGLGUHXJZM[W[ZZ\\X]U]L\\IZGWFMF", "G]RYR] RRKRO ROMMNLOKQKWLYMZO[U[WZXYYWYQXOWNUMOM", "CaRWRR RLFJGHIGLGUHXJZL[N[PZQYRWSYTZV[X[ZZ\\X]U]L\\IZGXF RLBM@O?R?U@X@", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RLIMGOFRFUGXG", "CaRWRR RLFJGHIGLGUHXJZL[N[PZQYRWSYTZV[X[ZZ\\X]U]L\\IZGXF RM<W< RR<R?", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RMEWE RRERH", "FZWGTFPFMGKIJKJNKPMRPSTST[", "FZVNTMPMNNMOLQLSMUNVPWTWT[", "H[N]UO ROQWU RT[LW", "JZMHMFWGWE", "JZMHUEVH", "NVPESH", "NVTEQH", "KZLIMGOFRFUGXG", ":j>R?PAOCPDR RC^D\\F[H\\I^ RCFDDFCHDIF ROcPaR`TaUc ROAP?R>T?UA R[^\\\\^[`\\a^ R[F\\D^C`DaF R`RaPcOePfR", ":jDQ>Q RH[D_ RHGDC RR_Re RRCR= R\\[`_ R\\G`C R`QfQ", "G]LFL[XFX[ RX[[[Ub RN>O@QASAU@V>", "H\\MMM[WMW[ RW[Z[Tb RNEOGQHSHUGVE", "H]MFM[S[VZXXYVYSXQVOSNMN RJIPI", "IZKMQM RNFN[S[UZVXVUUSSRNR", "G\\L[LFTFVGWHXJXMWOVPTQLQ RTMXS", "H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RSWW]", "HZM[MFXFXA", "JYO[OMWMWH", "HZM[MFXF RJQRQ", "JYO[OMWM RLTTT", "H]M[MFXF RMMSMVNXPYSY\\X_VaSbQb", "J\\O[OMWM ROTTTVUWVXXX[W^UaTb", "BbOOF[ RR[RF RRRFF R^[UO R^FRR R^[`[``", "F^QTJ[ RRUJM RRMR[ RZ[ST RZMRU RZ[\\[\\`", "I]PPTP RMGOFTFVGWHXJXLWNVOTPWQXRYTYWXYWZU[O[MZ RR\\T]U_TaRbOb", "K[RTTT RNNPMTMVNWPWQVSTTVUWWWXVZT[P[NZ RR\\T]U_TaRbOb", "G\\L[LF RX[OO RXFLR RX[Z[Z`", "IZNMN[ RPSV[ RVMNU RV[X[X`", "G\\L[LF RX[OO RXFLR RPKPS", "IZNMN[ RPSV[ RVMNU RRORW", "G\\L[LF RX[OO RXFLR RIJOJ", "IZN[NF RPSV[ RVMNU RKJQJ", "E\\X[OO RXFLR RGFLFL[", "HZPSV[ RVMNU RJMNMN[", "G]L[LF RLPXP RX[XF RX[Z[Z`", "H[MTVT RMMM[ RVMV[ RV[X[X`", "GeL[LF RLPXP RX[XFcF", "H`MTVT RMMM[ RV[VM^M", "GhL[LFXFX[ RXM^MaNcPdSd\\c_aa^b\\b", "HcM[MMVMV[ RVT[T]U^V_X_[^^\\a[b", "F^QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZMYJWIVITJSMSRTVUXWZY[[[", "H\\QMPMNNMOLQLWMYNZP[T[VZWYXWXRWPUOSPRRRWSYTZV[Y[", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR\\T]U_TaRbOb", "HZVZT[P[NZMYLWLQMONNPMTMVN RR\\T]U_TaRbOb", "JZLFXF RR[RF RR[T[T`", "KYMMWM RRMR[ RR[T[T`", "I[RQR[ RKFRQYF", "JZR[Rb RMMR[WM", "I[RQR[ RKFRQYF RNUVU", "JZR[Rb RMMR[WM RN]V]", "H\\KFY[ RYFK[ RX[Z[Z`", "IZL[WM RLMW[ RV[X[X`", "D]FFRF RXFX[ RLFL[Z[Z`", "G\\RMIM RWMW[ RNMN[Y[Y`", "H\\WFW[ RLFLNMPNQPRWR RW[Y[Y`", "J\\VMV[ RNMNROTQUVU RV[X[X`", "H\\WFW[ RLFLNMPNQPRWR RRNRV", "J\\VMV[ RNMNROTQUVU RRQRY", "G]L[LF RL[ RLPRPUQWSXVX[", "H[M[MF RV[VPUNSMPMNNMO", "@^WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGXIYKZOJQGQEPDOCMCK", "E[VZT[P[NZMXMPNNPMTMVNWPWRMTKTISHQHO", "@^WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGXIYKZOJQGQEPDOCMCK RR[P]O_PaRbTb", "E[VZT[P[NZMXMPNNPMTMVNWPWRMTKTISHQHO RR[P]O_PaRbTb", "MWR[RF", "BbOOF[ RR[RF RRRFF R^[UO R^FRR RN>O@QASAU@V>", "F^QTJ[ RRUJM RRMR[ RZ[ST RZMRU RNEOGQHSHUGVE", "G\\L[LF RX[OO RXFLR RX[X_WaUbSb", "IZNMN[ RPSV[ RVMNU RV[V_UaSbQb", "F\\W[WFTFQGOINLLXKZI[H[ RW[Z[Tb", "I[V[VMSMQNPPOXNZL[ RV[Y[Sb", "G]L[LF RLPXP RX[XF RX[X_WaUbSb", "H[MTVT RMMM[ RVMV[ RV[V_UaSbQb", "G]L[LF RLPXP RX[XF RX[[[Ub", "H[MTVT RMMM[ RVMV[ RV[Y[Sb", "H\\WFW[ RLFLNMPNQPRWR RW[U[U`", "J\\VMV[ RNMNROTQUVU RV[T[T`", "F^K[KFRUYFY[ RY[\\[Vb", "G]L[LMRXXMX[ RX[[[Ub", "MWR[RF", "I[MUWU RK[RFY[ RN>O@QASAU@V>", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE", "I[MUWU RK[RFY[ RN?O@NAM@N?NA RV?W@VAU@V?VA", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNFOGNHMGNFNH RVFWGVHUGVFVH", "F`JURU RRPYP RH[OF\\F RRFR[\\[", "D`INKMOMQNRP R[ZY[U[SZRXRPSNUMYM[N\\P\\RRSKSITHVHXIZK[O[QZRX", "H[MPTP RW[M[MFWF RN>O@QASAU@V>", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNEOGQHSHUGVE", "F^MHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZLXKVJRZP", "I[NNPMTMVNWPWXVZT[P[NZMXMVWT", "F^MHNGQFSFVGXIYKZOZRYVXXVZS[Q[NZLXKVJRZP RNBOCNDMCNBND RVBWCVDUCVBVD", "I[NNPMTMVNWPWXVZT[P[NZMXMVWT RNFOGNHMGNFNH RVFWGVHUGVFVH", "BbOOF[ RR[RF RRRFF R^[UO R^FRR RN?O@NAM@N?NA RV?W@VAU@V?VA", "F^QTJ[ RRUJM RRMR[ RZ[ST RZMRU RNFOGNHMGNFNH RVFWGVHUGVFVH", "I]PPTP RMGOFTFVGWHXJXLWNVOTPWQXRYTYWXYWZU[O[MZ RN?O@NAM@N?NA RV?W@VAU@V?VA", "K[RTTT RNNPMTMVNWPWQVSTTVUWWWXVZT[P[NZ RNFOGNHMGNFNH RVFWGVHUGVFVH", "H\\KFXFQNTNVOWPXRXWWYVZT[N[LZKY", "JZMMVMOVRVTWUXVZV^U`TaRbObMa`OaMb RMGWG", "G[KFRT RYFPXNZL[K[ RN?O@NAM@N?NA RV?W@VAU@V?VA", "JZMMR[ RWMR[P`OaMb RNFOGNHMGNFNH RVFWGVHUGVFVH", "G[KFRT RYFPXNZL[K[ RQ>NA RX>UA", "JZMMR[ RWMR[P`OaMb RQENH RXEUH", "H\\WFW[ RLFLNMPNQPRWR RN?O@NAM@N?NA RV?W@VAU@V?VA", "J\\VMV[ RNMNROTQUVU RNFOGNHMGNFNH RVFWGVHUGVFVH", "HZM[MFXF RM[O[O`", "JYO[OMWM RO[Q[Q`", "Da\\F\\[ RIFI[O[RZTXUVUSTQROONIN RN?O@NAM@N?NA RV?W@VAU@V?VA", "F^YMY[ RKMK[P[RZSXSURSPRKR RNFOGNHMGNFNH RVFWGVHUGVFVH", "HZWFMFM[Q[Q_PaNbLb RJQRQ", "JYWMOMO[S[S_RaPbNb RLTTT", "H\\KFY[ RYFK[ RX[X_WaUbSb", "IZL[WM RLMW[ RV[V_UaSbQb", "H\\KFY[ RYFK[ RNPVP", "IZL[WM RLMW[ RNTVT",
/* // Cyrillic Supplement (500-52F) */
"G\\WFW[Q[NZLXKVKSLQNOQNWN", "J[VMV[Q[OZNXNUOSQRVR", "B_RXSZU[X[ZZ[X[M RRFRXQZO[L[IZGXFVFSGQIOLNRN", "E]RXSZU[V[XZYXYQ RRMRXQZO[M[KZJXJUKSMRRR", "IePPTP RMGOFTFVGWHXJXLWNVOTPVQWRXTXXYZ[[^[`ZaXaM", "KbRTTT RNNPMTMVNWPWQVSTTVUWWWXXZZ[[[]Z^X^Q", "I\\PPTP RMGOFTFVGWHXJXLWNVOTPVQWRXTX[Z[Z`", "K[RTTT RNNPMTMVNWPWQVSTTVUWWW[Y[Y`", "FdH[I[KZLXNLOIQGTFWFWXXZZ[][_Z`X`M", "IaL[NZOXPPQNSMVMVXWZY[Z[\\Z]X]Q", "CaH[HF RHPTP RTFTXUZW[Z[\\Z]X]M", "F^KTTT RKMK[ RTMTXUZW[X[ZZ[X[R", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR", "HZUNSMPMNNMOLQLWMYNZP[T[VZVUSU", "J_LFXF RRFRXSZU[X[ZZ[X[M", "K]MMWM RRMRXSZU[V[XZYXYS", "G[PPTP RWGUFPFNGMHLJLLMNNOPPMQLRKTKWLYMZO[U[WZ", "IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN", "F\\W[WFTFQGOINLLXKZI[H[ RW[W_VaTbRb", "I[V[VMSMQNPPOXNZL[ RV[V_UaSbQb", "BaP[^F RD[E[GZHXJLKIMGPF^[", "E^[MO[ RH[JZKXLPMNOM[[", "E_\\FUO\\[ RJ[JFRFTGUHVJVMUOTPRQJQ", "F^KMKb R[MUT[[ RKNMMQMSNTOUQUWTYSZQ[M[KZ", "DaOQH[ RTFT[^[ R[QLQJPIOHMHJIHJGLF^F", "D`H[MU RRPRMKMINHPHRITKURU R[ZY[U[SZRXRPSNUMYM[N\\P\\RRT", "G]Z]X\\VZSWQVOV RP[NZLXKTKMLINGPFTFVGXIYMYTXXVZT[P[", "I\\WMWb RWZU[Q[OZNYMWMQNOONQMUMWN", "F^IFN[RLV[[F", "G]JMN[RQV[ZM", "G\\L[LF RX[OO RXFLR RXKRG", "IZNMN[ RPSV[ RVMNU RWQQM", "FgW[WFTFQGOINLLXKZI[H[ RWM]M`NbPcSc\\b_`a]b[b", "IcV[VMSMQNPPOXNZL[ RVT[T]U^V_X_[^^\\a[b", "GhL[LF RLPXP RX[XF RXM^MaNcPdSd\\c_aa^b\\b", "HcMTVT RMMM[ RVMV[ RVT[T]U^V_X_[^^\\a[b", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Armenian (530-58F) */

/* // Hebrew (590-5FF) */

/* // Arabic (600-6FF) */

/* // Syriac (700-74F) */

/* // Arabic Supplement (750-77F) */

/* // Taana (780-7BF) */

/* // N'Ko (7C0-7FF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // - (800-8FF) */

/* // Devanagari (900-97F) */

/* // Bengali (980-9FF) */

/* // Gurmukhi (A00-A7F) */

/* // Gujarati (A80-AFF) */

/* // Oriya (B00-B7F) */

/* // Tamil (B80-BFF) */

/* // Telugu (C00-C7F) */

/* // Kannada (C80-CFF) */

/* // Malayalam (D00-D7F) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Simhala (D80-DFF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Thai (E00-E7F) */

/* // Lao (E80-EFF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Tibetan (F00-FFF) */

/* // Myanmar (1000-109F) */

/* // Geogian (10A0-10FF) */

/* // Hangul Jamo (1100-11FF) */

/* // Ethiopic (1200-137F) */

/* // Ethiopic Supplement (1380-139F) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Cherokee (13A0-13FF) */

/* // Unified Canadian Aboriginal Syllabics (1400-167F) */

/* // Ogham (1680-169F) */

/* // Runic (16A0-16FF) */

/* // Tagalog (1700-171F) */

/* // Hanunoo (1720-173F) */

/* // Buhid (1740-175F) */

/* // Tagbanwa (1760-177F) */

/* // Khmer (1780-17FF) */

/* // Mongolian (1800-18AF) */

/* // - (18B0-18FF) */

/* // Limbu (1900-194F) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Tai Le (1950-197F) */

/* // New Tai Lue (1980-19DF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Khmer Symbols (19E0-19FF) */

/* // Buginese (1A00-1A1F) */

/* // - (1A20-1AFF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Balinese (1B00-1B7F) */

/* // Sudanese (1B80-1BBF) */

/* // - (1BC0-1BFF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Lepcha (1C00-1C4F) */

/* // Ol Chiki (1C50-1C7F) */

/* // - (1C80-1CFF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Phonetic Extensions (1D00-1D7F) */
"JZNXVX RM[RMW[", "H\\LXRX RRTWT RRMR[Y[ RYMPMK[", "D`[ZY[U[SZRX RINKMOMQNRPRXQZO[K[IZHXHVRUYU[T\\R\\P[NYMUMSNRP", "I[STVUWWWXVZT[N[NMSMUNVPVQUSSTNT RKWQW", "HZVZT[P[NZMYLWLQMONNPMTMVN", "J[SMOMO[S[UZVYWVWRVOUNSM", "J[SMOMO[S[UZVYWVWRVOUNSM RLTRT", "JYOTTT RVMOMO[V[", "J[TTVSWQWPVNTMPMNN RRTTTVUWWWXVZT[P[NZ", "MWRMR[ RRbSaR`QaRbR`", "LYTMTWSYRZP[O[", "IZNMN[ RPSV[ RVMNU", "JYOMO[V[ RLVRR", "G]L[LMRXXMX[", "I\\W[WMN[NM", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[", "J\\NNPMTMVNWOXQXWWYVZT[P[NZ", "G]YSYVXXWYUZOZMYLXKVKSLQMPOOUOWPXQYS", "G]XYYWYSXQWPUOOOMPLQKSKWLY", "G]YNK[ RYSYVXXWYUZOZMYLXKVKSLQMPOOUOWPXQYS", "DaINKMOMQNRPRXQZO[K[IZHXHVRT RRWSYTZV[Y[[Z\\Y]W]Q\\O[NYMVMTNSORQ", "G]OMNNMPNRPS RTSVRWPVNUM RPSTSVTWVWXVZT[P[NZMXMVNTPS", "I\\XTXQWOVNTMQMONNOMQMT", "H[LTLWMYNZP[S[UZVYWWWT", "I[N[NMTMVNWPWRVTTUNU", "I[RUM[ RV[VMPMNNMPMRNTPUVU", "I[RSMM RVMV[P[NZMXMVNTPSVS", "KYMMWM RRMR[", "H[MMMXNZP[S[UZVXVM", "G]KPYP RKYVYXXYVYSXQWP", "@]KPYP RKYVYXXYVYSXQWP REWFXEYDXEWEY REOFPEQDPEOEQ", "G]KKYK RWKXLYNYQXSVTKT RVTXUYWYZX\\V]K]", "JZMMR[WM", "G]JMN[RQV[ZM", "IZLMWML[W[", "JZNMVMRRSRUSVUVXUZS[P[NZ", "H\\XNUMPMNNMOLQLSMUNVPWTXVYWZX\\X^W`VaTbObLa RRTR\\", "JZW[PROPPNRMTNUPTRM[", "JYO[OMWM", "JZM[RMW[", "H[M[MMVMV[", "I[N[NMTMVNWPWRVTTUNU", "I[RMR[ RLMMNMRNTPUTUVTWRWNXM", "I[V[VMSMQNPPOXNZL[", "JZNKVK RMNR@WN", "H\\LKRK RRGWG RR@RNYN RY@P@KN", "I[SGVHWJWKVMTNNNN@S@UAVCVDUFSGNG", "I[SGVHWJWKVMTNNNN@S@UAVCVDUFSGNG RKGQG", "J[S@O@ONSNUMVLWIWEVBUAS@", "JYOGTG RV@O@ONVN", "KZUGPG RN@U@UNNN", "HZUAS@P@NAMBLDLJMLNMPNTNVMVHSH", "H[MGVG RM@MN RV@VN", "MWRNR@ RUNON RU@O@", "LYT@TJSLRMPNON", "IZN@NN RPFVN RV@NH", "JYO@ONVN", "G]LNL@RKX@XN", "H[MNM@VNV@", "I\\WNW@NNN@", "H[PNNMMLLJLDMBNAP@S@UAVBWDWJVLUMSNPN", "G]O@NAMCNEPF RTFVEWCVAU@ RPFTFVGWIWKVMTNPNNMMKMINGPF", "I[NNN@T@VAWCWEVGTHNH", "I[RHWN RNNN@T@VAWCWEVGTHNH", "KYM@W@ RR@RN", "H[M@MKNMPNSNUMVKV@", "G]J@NNRDVNZ@", "KZOEQDSDUEVGVN RVMTNQNOMNKOIQHVH", "JYNDNKOMQNSNUM RNEPDSDUEVGUISJNJ", "H]WDUKTMRNPNNMMKMGNEPDRDTEVMWN", "H\\XMVNUNSMRK RLDODQERHRKQMONNNLMKKKJVJXIYGXEVDUDSERH", "KYO@ON ROMQNSNUMVKVGUESDQDOE", "KYU@UN RUESDQDOENGNKOMQNSNUM", "LYVMTNRNPMOKOGPERDSDUEVGVHOI", "LYOEQDSDUEVGVKUMSNRNPMOKOJVI", "LXPIRI RUETDPDOEOHPIOJOMPNTNUM", "LXRITI ROEPDTDUEUHTIUJUMTNPNOM", "KYUDUPTRRSOS RUESDQDOENGNKOMQNSNUM", "NVRDRN RRUSTRSQTRURS", "IZO@ON RUNQH RUDOJ", "G]KNKD RKEMDODQERGRN RRGSEUDVDXEYGYN", "KZODON ROEQDSDUEVGVPURSSRS", "KYQNOMNKNGOEQDSDUEVGVKUMSNQN", "LYOEQDSDUEVGVKUMSNQNOM", "KYNINGOEQDSDUEVGVI", "KYNINKOMQNSNUMVKVI", "KYOSOD ROEQDSDUEVGVKUMSNQNOM", "NXPDVD RR@RKSMUNVN", "KYUDUN RNDNKOMQNSNUM", "I[MFWF RMMTMVLWJWHVF", "G]YDYN RYMWNUNSMRKRD RRKQMONNNLMKKKD", "LXNDRNVD", "LXVNPGPEQDSDTETGNN", "KYSFRF RNSOQOCPAR@S@UAVCUESFUGVIVKUMSNQNOM", "KXRMRS RMDOERMVD", "KYSDQDOENGNKOMQNSNUMVKVGUESDPCOBOAP@U@", "I[MDLFLJMLNMPNTNVMWLXJXGWEUDSERGRS", "LXVDNS RNDPETRVS", "NVRWRa RRPQQRRSQRPRR", "LWPWPa RPZQXSWUW", "KYUWUa RNWN^O`QaSaU`", "LXNWRaVW", "KYSYRY RNfOdOVPTRSSSUTVVUXSYUZV\\V^U`SaQaO`", "KXR`Rf RMWOXR`VW", "KYOfOZPXRWSWUXVZV^U`SaQaO`", "I[MWLYL]M_N`PaTaV`W_X]XZWXUWSXRZRf", "LXVWNf RNWPXTeVf", "D`IMIXJZL[O[QZRX R[ZY[U[SZRXRPSNUMYM[N\\P\\RRT", "H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RIHJGLFPHRGSF", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RQHRGTFXHZG[F", "MYOMWM RR[RISGUFWF RMTNSPRTTVSWR", "D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RMTNSPRTTVSWR", "I\\NMN[ RNOONQMTMVNWPW[ RMTNSPRTTVSWR", "H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RI`J_L^P`R_S^", "KXP[PM RPQQORNTMVM RLTMSORSTUSVR", "KXM[S[ RVMTMRNQOPRP[ RLTMSORSTUSVR", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RNTOSQRUTWSXR", "MYOMWM RRFRXSZU[W[ RMSNRPQTSVRWQ", "IZLMWML[W[ RMTNSPRTTVSWR", "H[M[MJNHOGQFTFVG RMNOMSMUNVOWQWWVYUZS[O[MZ", "H[MGVG RM@MN RV@VN", "JZMMVMOURUTVUWVYV^U`TaRbPbNaM_M^N\\P[V[", "MlOMWM RRFRXSZU[W[ R^[^F Rg[gPfNdMaM_N^O RiC]`", "MWR[RM RU[O[ RUMOM ROTUT", "MXRMRXSZU[ ROTUT", "H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RHT\\T", "H[MMMXNZP[S[UZVXVM RHT\\T", "I\\XMUMUPWRXTXWWYVZT[Q[OZNYMWMTNRPPPMMM RHU\\U",
/* // Phonetic Extensions Supplement (1D80-1DBF) */

/* // Combining Diacritical Marks Supplement (1DC0-1DFF) */

/* // Latin Extended Additional (1E00-1EFF) */
"I[MUWU RK[RFY[ RR`TaUcTeRfPeOcPaR`", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RR`TaUcTeRfPeOcPaR`", "G\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP RR?Q@RAS@R?RA", "H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RN?M@NAO@N?NA", "G\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP RRbSaR`QaRbR`", "H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RRbSaR`QaRbR`", "G\\SPVQWRXTXWWYVZT[L[LFSFUGVHWJWLVNUOSPLP RWaMa", "H[M[MF RMNOMSMUNVOWQWWVYUZS[O[MZ RWaMa", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR\\T]U_TaRbOb RT>QA", "HZVZT[P[NZMYLWLQMONNPMTMVN RR\\T]U_TaRbOb RTEQH", "G\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RR?Q@RAS@R?RA", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RV?U@VAW@V?VA", "G\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RRbSaR`QaRbR`", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RSbTaS`RaSbS`", "G\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RWaMa", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RXaNa", "G\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RQ\\S]T_SaQbNb", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RS\\U]V_UaSbPb", "G\\L[LFQFTGVIWKXOXRWVVXTZQ[L[ RVcR`Nc", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RWcS`Oc", "H[MPTP RW[M[MFWF RM@W@ RP9S<", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RMGWG RP>SA", "H[MPTP RW[M[MFWF RM@W@ RT9Q<", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RMGWG RT>QA", "H[MPTP RW[M[MFWF RVcR`Nc", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RVcR`Nc", "H[MPTP RW[M[MFWF RW`VaTbP`NaMb", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RW`VaTbP`NaMb", "H[MPTP RW[M[MFWF RR\\T]U_TaRbOb RN>O@QASAU@V>", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RR\\T]U_TaRbOb RNEOGQHSHUGVE", "HZTPMP RM[MFWF RR?Q@RAS@R?RA", "MYOMWM RR[RISGUFWF RT?S@TAU@T?TA", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RM@W@", "I\\WMW^V`UaSbPbNa RWZU[Q[OZNYMWMQNOONQMUMWN RMGWG", "G]L[LF RLPXP RX[XF RR?Q@RAS@R?RA", "H[M[MF RV[VPUNSMPMNNMO RM?L@MAN@M?MA", "G]L[LF RLPXP RX[XF RRbSaR`QaRbR`", "H[M[MF RV[VPUNSMPMNNMO RRbSaR`QaRbR`", "G]L[LF RLPXP RX[XF RN?O@NAM@N?NA RV?W@VAU@V?VA", "H[M[MF RV[VPUNSMPMNNMO RI?J@IAH@I?IA RQ?R@QAP@Q?QA", "G]L[LF RLPXP RX[XF RL\\N]O_NaLbIb", "H[M[MF RV[VPUNSMPMNNMO RM\\O]P_OaMbJb", "G]L[LF RLPXP RX[XF RV`UbScQcObN`", "H[M[MF RV[VPUNSMPMNNMO RV`UbScQcObN`", "MWR[RF RW`VaTbP`NaMb", "MWR[RM RRFQGRHSGRFRH RW`VaTbP`NaMb", "MWR[RF RN?O@NAM@N?NA RV?W@VAU@V?VA RT9Q<", "MWR[RM RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA", "G\\L[LF RX[OO RXFLR RT>QA", "IZN[NF RPSV[ RVMNU RPAMD", "G\\L[LF RX[OO RXFLR RRbSaR`QaRbR`", "IZN[NF RPSV[ RVMNU RRbSaR`QaRbR`", "G\\L[LF RX[OO RXFLR RWaMa", "IZN[NF RPSV[ RVMNU RWaMa", "HYW[M[MF RRbSaR`QaRbR`", "MXU[SZRXRF RSbTaS`RaSbS`", "HYW[M[MF RH@R@ RRbSaR`QaRbR`", "MXU[SZRXRF RM@W@ RSbTaS`RaSbS`", "HYW[M[MF RWaMa", "MXU[SZRXRF RXaNa", "HYW[M[MF RVcR`Nc", "MXU[SZRXRF RWcS`Oc", "F^K[KFRUYFY[ RT>QA", "D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RTEQH", "F^K[KFRUYFY[ RR?Q@RAS@R?RA", "D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RRFQGRHSGRFRH", "F^K[KFRUYFY[ RRbSaR`QaRbR`", "D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RRbSaR`QaRbR`", "G]L[LFX[XF RR?Q@RAS@R?RA", "I\\NMN[ RNOONQMTMVNWPW[ RRFQGRHSGRFRH", "G]L[LFX[XF RRbSaR`QaRbR`", "I\\NMN[ RNOONQMTMVNWPW[ RRbSaR`QaRbR`", "G]L[LFX[XF RWaMa", "I\\NMN[ RNOONQMTMVNWPW[ RWaMa", "G]L[LFX[XF RVcR`Nc", "I\\NMN[ RNOONQMTMVNWPW[ RVcR`Ncb RMNOMSMUNVOWQWWVYUZS[O[MZ RTEQH", "G\\L[LFTFVGWHXJXMWOVPTQLQ RR?Q@RAS@R?RA", "H[MMMb RMNOMSMUNVOWQWWVYUZS[O[MZ RRFQGRHSGRFRH", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RR?Q@RAS@R?RA", "KXP[PM RPQQORNTMVM RSFRGSHTGSFSH", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RRbSaR`QaRbR`", "KXP[PM RPQQORNTMVM RPbQaP`OaPbP`", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RM@W@ RRbSaR`QaRbR`", "KXP[PM RPQQORNTMVM RNGXG RPbQaP`OaPbP`", "G\\X[QQ RL[LFTFVGWHXJXMWOVPTQLQ RWaMa", "KXP[PM RPQQORNTMVM RUaKa", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RR?Q@RAS@R?RA", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RRFQGRHSGRFRH", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RRbSaR`QaRbR`", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RRbSaR`QaRbR`", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RU>RA RM>N?M@L?M>M@", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RUERH RMENFMGLFMEMG", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RN>RAV> RR:Q;R<S;R:R<", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RNERHVE RR?Q@RAS@R?RA", "H\\LZO[T[VZWYXWXUWSVRTQPPNOMNLLLJMHNGPFUFXG RR?Q@RAS@R?RA RRbSaR`QaRbR`", "J[NZP[T[VZWXWWVUTTQTOSNQNPONQMTMVN RRFQGRHSGRFRH RRbSaR`QaRbR`", "JZLFXF RR[RF RR?Q@RAS@R?RA", "MYOMWM RRFRXSZU[W[ RR?Q@RAS@R?RA", "JZLFXF RR[RF RRbSaR`QaRbR`", "MYOMWM RRFRXSZU[W[ RTbUaT`SaTbT`", "JZLFXF RR[RF RWaMa", "MYOMWM RRFRXSZU[W[ RYaOa", "JZLFXF RR[RF RVcR`Nc", "MYOMWM RRFRXSZU[W[ RXcT`Pc", "G]LFLWMYNZP[T[VZWYXWXF RVbUaV`WaVbV` RNbMaN`OaNbN`", "H[VMV[ RMMMXNZP[S[UZVY RVbUaV`WaVbV` RNbMaN`OaNbN`", "G]LFLWMYNZP[T[VZWYXWXF RW`VaTbP`NaMb", "H[VMV[ RMMMXNZP[S[UZVY RW`VaTbP`NaMb", "G]LFLWMYNZP[T[VZWYXWXF RVcR`Nc", "H[VMV[ RMMMXNZP[S[UZVY RVcR`Nc", "G]LFLWMYNZP[T[VZWYXWXF RMAN@P?TAV@W? RT9Q<", "H[VMV[ RMMMXNZP[S[UZVY RMHNGPFTHVGWF RT>QA", "G]LFLWMYNZP[T[VZWYXWXF RM@W@ RN:O;N<M;N:N< RV:W;V<U;V:V<", "H[VMV[ RMMMXNZP[S[UZVY RMGWG RN?O@NAM@N?NA RV?W@VAU@V?VA", "I[KFR[YF RMAN@P?TAV@W?", "JZMMR[WM RMHNGPFTHVGWF", "I[KFR[YF RRbSaR`QaRbR`", "JZMMR[WM RRbSaR`QaRbR`", "F^IFN[RLV[[F RP>SA", "G]JMN[RQV[ZM RPESH", "F^IFN[RLV[[F RT>QA", "G]JMN[RQV[ZM RTEQH", "F^IFN[RLV[[F RN?O@NAM@N?NA RV?W@VAU@V?VA", "G]JMN[RQV[ZM RNFOGNHMGNFNH RVFWGVHUGVFVH", "F^IFN[RLV[[F RR?Q@RAS@R?RA", "G]JMN[RQV[ZM RRFQGRHSGRFRH", "F^IFN[RLV[[F RRbSaR`QaRbR`", "G]JMN[RQV[ZM RRbSaR`QaRbR`", "H\\KFY[ RYFK[ RR?Q@RAS@R?RA", "IZL[WM RLMW[ RRFQGRHSGRFRH", "H\\KFY[ RYFK[ RN?O@NAM@N?NA RV?W@VAU@V?VA", "IZL[WM RLMW[ RNFOGNHMGNFNH RVFWGVHUGVFVH", "I[RQR[ RKFRQYF RR?Q@RAS@R?RA", "JZMMR[ RWMR[P`OaMb RRFQGRHSGRFRH", "H\\KFYFK[Y[ RNAR>VA", "IZLMWML[W[ RNHREVH", "H\\KFYFK[Y[ RRbSaR`QaRbR`", "IZLMWML[W[ RRbSaR`QaRbR`", "H\\KFYFK[Y[ RWaMa", "IZLMWML[W[ RWaMa", "H[M[MF RV[VPUNSMPMNNMO RWaMa", "MYOMWM RRFRXSZU[W[ RN?O@NAM@N?NA RV?W@VAU@V?VA", "G]JMN[RQV[ZM RRHPGOEPCRBTCUETGRH", "JZMMR[ RWMR[P`OaMb RRHPGOEPCRBTCUETGRH", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RWJYIZGYEWD", "MYR[RISGUFWF RT?S@TAU@T?TA", "MYR[RISGUFWF ROSUO", "MYR[RISGUFWF ROLUL", "E^J[JLKIMGPFZFSNVNXOYPZRZWYYXZV[R[PZOY", "H[SMPMNNMOLQLWMYNZP[S[UZVYWWWQVOUNSMPLNKMINGPFTFVG", "I[MUWU RK[RFY[ RRbSaR`QaRbR`", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRbSaR`QaRbR`", "I[MUWU RK[RFY[ RRAT?U=T;R:P:", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RRHTFUDTBRAPA", "I[MUWU RK[RFY[ RU>X; RNAR>VA", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RUEXB RNHREVH", "I[MUWU RK[RFY[ RO>L; RNAR>VA", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR ROELB RNHREVH", "I[MUWU RK[RFY[ RNAR>VA RXAZ?[=Z;X:V:", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHREVH RXHZF[DZBXAVA", "I[MUWU RK[RFY[ RNAR>VA RM<N;P:T<V;W:", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHREVH RMAN@P?TAV@W?", "I[MUWU RK[RFY[ RNAR>VA RRbSaR`QaRbR`", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNHREVH RRbSaR`QaRbR`", "I[MUWU RK[RFY[ RN>O@QASAU@V> RT9Q<", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RT>QA", "I[MUWU RK[RFY[ RN>O@QASAU@V> RP9S<", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RP>SA", "I[MUWU RK[RFY[ RN>O@QASAU@V> RP>R<S:R8P7N7", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RPERCSAR?P>N>", "I[MUWU RK[RFY[ RN>O@QASAU@V> RM<N;P:T<V;W:", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RMAN@P?TAV@W?", "I[MUWU RK[RFY[ RN>O@QASAU@V> RRbSaR`QaRbR`", "I\\W[WPVNTMPMNN RWZU[P[NZMXMVNTPSUSWR RNEOGQHSHUGVE RRbSaR`QaRbR`", "H[MPTP RW[M[MFWF RRbSaR`QaRbR`", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RRbSaR`QaRbR`", "H[MPTP RW[M[MFWF RRAT?U=T;R:P:", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RRHTFUDTBRAPA", "H[MPTP RW[M[MFWF RMAN@P?TAV@W?", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RMHNGPFTHVGWF", "H[MPTP RW[M[MFWF RU>X; RNAR>VA", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RUEXB RNHREVH", "H[MPTP RW[M[MFWF RO>L; RNAR>VA", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT ROELB RNHREVH", "H[MPTP RW[M[MFWF RNAR>VA RXAZ?[=Z;X:V:", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHREVH RXHZF[DZBXAVA", "H[MPTP RW[M[MFWF RNAR>VA RM<N;P:T<V;W:", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHREVH RMAN@P?TAV@W?", "H[MPTP RW[M[MFWF RNAR>VA RRbSaR`QaRbR`", "I[VZT[P[NZMXMPNNPMTMVNWPWRMT RNHREVH RRbSaR`QaRbR`", "MWR[RF RRAT?U=T;R:P:", "MWR[RM RRHTFUDTBRAPA", "MWR[RF RRbSaR`QaRbR`", "MWR[RM RRFQGRHSGRFRH RRbSaR`QaRbR`", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RRbSaR`QaRbR`", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RRbSaR`QaRbR`", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RRAT?U=T;R:P:", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RRHTFUDTBRAPA", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RU>X; RNAR>VA", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUEXB RNHREVH", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RO>L; RNAR>VA", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ ROELB RNHREVH", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAR>VA RXAZ?[=Z;X:V:", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHREVH RXHZF[DZBXAVA", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAR>VA RM<N;P:T<V;W:", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHREVH RMAN@P?TAV@W?", "G]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RNAR>VA RRbSaR`QaRbR`", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RNHREVH RRbSaR`QaRbR`bSaR`QaRbR`", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RUNWMXKWIVH RRbSaR`QaRbR`", "G]LFLWMYNZP[T[VZWYXWXF RRbSaR`QaRbR`", "H[VMV[ RMMMXNZP[S[UZVY RRbSaR`QaRbR`", "G]LFLWMYNZP[T[VZWYXWXF RRAT?U=T;R:P:", "H[VMV[ RMMMXNZP[S[UZVY RRHTFUDTBRAPA", "G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RT>QA", "H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RTEQH", "G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RP>SA", "H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RPESH", "G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RRAT?U=T;R:P:", "H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RRHTFUDTBRAPA", "G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RWAVBTCPANBMC", "H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RWHVITJPHNIMJ", "G]LFLWMYNZP[T[VZWYXWXF RXFZE[CZAY@ RRbSaR`QaRbR`", "H[VMV[ RMMMXNZP[S[UZVY RVMXLYJXHWG RRbSaR`QaRbR`", "I[RQR[ RKFRQYF RP>SA", "JZMMR[ RWMR[P`OaMb RPESH", "I[RQR[ RKFRQYF RRbSaR`QaRbR`", "JZMMR[ RWMR[P`OaMb RVbWaV`UaVbV`", "I[RQR[ RKFRQYF RRAT?U=T;R:P:", "JZMMR[ RWMR[P`OaMb RRHTFUDTBRAPA", "I[RQR[ RKFRQYF RMAN@P?TAV@W?", "JZMMR[ RWMR[P`OaMb RMHNGPFTHVGWF", "E\\PFP[ RJFJ[Z[", "J[MMWM ROFOXPZR[ RX[VZUXUF", "G]QFOGMJLMLWMYNZP[T[VZXXYVYTXPVMUL", "H[QMONNOMQMWNYOZQ[S[UZVYWWWUVSURSQ", "G[KFRT RYFRTPXOZM[KZJXKVMUOVPX", "JZMMR[ RWMR[Q_PaNbLaK_L]N\\P]Q_",
/* // Greek Extended (1F00-1FFF) */
b RQHRHSGSE", "I\\NMN[ RNOONQMTMVNWPWb RQEQGRHSH", "I\\NMN[ RNOONQMTMVNWPWb RTEWH RMHNHOGOE", "I\\NMN[ RNOONQMTMVNWPWb RTEWH RMEMGNHOH", "I\\NMN[ RNOONQMTMVNWPWb RXEUH RMHNHOGOE", "I\\NMN[ RNOONQMTMVNWPWb RXEUH RMEMGNHOH", "I\\NMN[ RNOONQMTMVNWPWb RQHRHSGSE RMAN@P?TAV@W?", "I\\NMN[ RNOONQMTMVNWPWb RQEQGRHSH RMAN@P?TAV@W?", "A]L[LF RLPXP RX[XF RDHEHFGFE", "A]L[LF RLPXP RX[XF RDEDGEHFH", "9]L[LF RLPXP RX[XF RCEFH R<H=H>G>E", "9]L[LF RLPXP RX[XF RCEFH R<E<G=H>H", "9]L[LF RLPXP RX[XF RGEDH R<H=H>G>E", "9]L[LF RLPXP RX[XF RGEDH R<E<G=H>H", ">]L[LF RLPXP RX[XF R@AA@C?GAI@J? RDHEHFGFE", ">]L[LF RLPXP RX[XF R@AA@C?GAI@J? RDEDGEHFH", "MXRMRXSZU[ RQHRHSGSE", "MXRMRXSZU[ RQEQGRHSH", "MXRMRXSZU[ RTEWH RMHNHOGOE", "MXRMRXSZU[ RTEWH RMEMGNHOH", "MXRMRXSZU[ RXEUH RMHNHOGOE", "MXRMRXSZU[ RXEUH RMEMGNHOH", "MXRMRXSZU[ RQHRHSGSE RMAN@P?TAV@W?", "MXRMRXSZU[ RQEQGRHSH RMAN@P?TAV@W?", "GWR[RF RJHKHLGLE", "GWR[RF RJEJGKHLH", "?WR[RF RIELH RBHCHDGDE", "?WR[RF RIELH RBEBGCHDH", "?WR[RF RMEJH RBHCHDGDE", "?WR[RF RMEJH RBEBGCHDH", "DWR[RF RFAG@I?MAO@P? RJHKHLGLE", "DWR[RF RFAG@I?MAO@P? RJEJGKHLH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RQHRHSGSE", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RQEQGRHSH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEWH RMHNHOGOE", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEWH RMEMGNHOH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RXEUH RMHNHOGOE", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RXEUH RMEMGNHOH", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF REHFHGGGE", "B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF REEEGFHGH", ":]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RDEGH R=H>H?G?E", ":]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RDEGH R=E=G>H?H", ":]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RHEEH R=H>H?G?E", ":]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RHEEH R=E=G>H?H", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "H[MMMXNZP[S[UZVYWWWPVNUM RQHRHSGSE", "H[MMMXNZP[S[UZVYWWWPVNUM RQEQGRHSH", "H[MMMXNZP[S[UZVYWWWPVNUM RTEWH RMHNHOGOE", "H[MMMXNZP[S[UZVYWWWPVNUM RTEWH RMEMGNHOH", "H[MMMXNZP[S[UZVYWWWPVNUM RXEUH RMHNHOGOE", "H[MMMXNZP[S[UZVYWWWPVNUM RXEUH RMEMGNHOH", "H[MMMXNZP[S[UZVYWWWPVNUM RQHRHSGSE RMAN@P?TAV@W?", "H[MMMXNZP[S[UZVYWWWPVNUM RQEQGRHSH RMAN@P?TAV@W?", "F^K[KFYFY[K[", "@[RQR[ RKFRQYF RCECGDHEH", "F^K[KFYFY[K[", "8[RQR[ RKFRQYF RBEEH R;E;G<H=H", "F^K[KFYFY[K[", "8[RQR[ RKFRQYF RFECH R;E;G<H=H", "F^K[KFYFY[K[", "=[RQR[ RKFRQYF R?A@@B?FAH@I? RCECGDHEH", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQHRHSGSE", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQEQGRHSH", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEWH RMHNHOGOE", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEWH RMEMGNHOH", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RXEUH RMHNHOGOE", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RXEUH RMEMGNHOH", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQHRHSGSE RMAN@P?TAV@W?", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQEQGRHSH RMAN@P?TAV@W?", "@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RCHDHEGEE", "@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RCECGDHEH", "8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH R;H<H=G=E", "8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH R;E;G<H=H", "8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH R;H<H=G=E", "8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH R;E;G<H=H", "=^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ R?A@@B?FAH@I? RCHDHEGEE", "=^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ R?A@@B?FAH@I? RCECGDHEH", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEQH", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEQH", "IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RTEQH", "IZPTNUMWMXNZP[T[VZ RRTPTNSMQMPNNPMTMVN RTEQH", "I\\NMN[ RNOONQMTMVNWPWb RTEQH", "I\\NMN[ RNOONQMTMVNWPWb RTEQH", "MXRMRXSZU[ RTEQH", "MXRMRXSZU[ RTEQH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEQH", "H[P[NZMYLWLQMONNPMSMUNVOWQWWVYUZS[P[ RTEQH", "H[MMMXNZP[S[UZVYWWWPVNUM RTEQH", "H[MMMXNZP[S[UZVYWWWPVNUM RTEQH", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEQH", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEQH", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQHRHSGSE RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQEQGRHSH RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEWH RMHNHOGOE RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEWH RMEMGNHOH RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RXEUH RMHNHOGOE RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RXEUH RMEMGNHOH RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQHRHSGSE RMAN@P?TAV@W? RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RQEQGRHSH RMAN@P?TAV@W? RR`RcSdTd", "G[MUWU RK[RFY[ RJHKHLGLE RR`RcSdTd", "G[MUWU RK[RFY[ RJEJGKHLH RR`RcSdTd", "?[MUWU RK[RFY[ RIELH RBHCHDGDE RR`RcSdTd", "?[MUWU RK[RFY[ RIELH RBEBGCHDH RR`RcSdTd", "?[MUWU RK[RFY[ RMEJH RBHCHDGDE RR`RcSdTd", "?[MUWU RK[RFY[ RMEJH RBEBGCHDH RR`RcSdTd", "D[MUWU RK[RFY[ RFAG@I?MAO@P? RJHKHLGLE RR`RcSdTd", "D[MUWU RK[RFY[ RFAG@I?MAO@P? RJEJGKHLH RR`RcSdTd", "I\\NMN[ RNOONQMTMVNWPWb RQHRHSGSE RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RQEQGRHSH RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RTEWH RMHNHOGOE RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RTEWH RMEMGNHOH RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RXEUH RMHNHOGOE RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RXEUH RMEMGNHOH RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RQHRHSGSE RMAN@P?TAV@W? RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RQEQGRHSH RMAN@P?TAV@W? RN`NcOdPd", "N]L[LF RLPXP RX[XF RR`RcSdTd", "A]L[LF RLPXP RX[XF RDEDGEHFH RR`RcSdTd", "9]L[LF RLPXP RX[XF RCEFH R<H=H>G>E RR`RcSdTd", "9]L[LF RLPXP RX[XF RCEFH R<E<G=H>H RR`RcSdTd", "9]L[LF RLPXP RX[XF RGEDH R<H=H>G>E RR`RcSdTd", "9]L[LF RLPXP RX[XF RGEDH R<E<G=H>H RR`RcSdTd", ">]L[LF RLPXP RX[XF R@AA@C?GAI@J? RDHEHFGFE RR`RcSdTd", ">]L[LF RLPXP RX[XF R@AA@C?GAI@J? RDEDGEHFH RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQHRHSGSE RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQEQGRHSH RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEWH RMHNHOGOE RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEWH RMEMGNHOH RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RXEUH RMHNHOGOE RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RXEUH RMEMGNHOH RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQHRHSGSE RMAN@P?TAV@W? RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RQEQGRHSH RMAN@P?TAV@W? RR`RcSdTd", "@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RCHDHEGEE RR`RcSdTd", "@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RCECGDHEH RR`RcSdTd", "8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH R;H<H=G=E RR`RcSdTd", "8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH R;E;G<H=H RR`RcSdTd", "8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH R;H<H=G=E RR`RcSdTd", "8^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH R;E;G<H=H RR`RcSdTd", "=^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ R?A@@B?FAH@I? RCHDHEGEE RR`RcSdTd", "=^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ R?A@@B?FAH@I? RCECGDHEH RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RNEOGQHSHUGVE", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RMGWG", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RPESH RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RR`RcSdTd", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RTEQH RR`RcSdTd", "F^K[KFYFY[K[", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RMHNGPFTHVGWF", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RMHNGPFTHVGWF RR`RcSdTd", "I[MUWU RK[RFY[ RN>O@QASAU@V>", "I[MUWU RK[RFY[ RM@W@", "G[MUWU RK[RFY[ RIELH", "G[MUWU RK[RFY[ RMEJH", "I[MUWU RK[RFY[ RR`RcSdTd", "NVQHRHSGSE", "NVR`RcSdTd", "NVQHRHSGSE", "KZMHNGPFTHVGWF", "LXMCNBPATCVBWA RNFOGNHMGNFNH RVFWGVHUGVFVH", "I\\NMN[ RNOONQMTMVNWPWb RPESH RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RN`NcOdPd", "I\\NMN[ RNOONQMTMVNWPWb RTEQH RN`NcOdPd", "F^K[KFYFY[K[", "I\\NMN[ RNOONQMTMVNWPWb RMHNGPFTHVGWF", "I\\NMN[ RNOONQMTMVNWPWb RMHNGPFTHVGWF RN`NcOdPd", "B[MPTP RW[M[MFWF RDEGH", "B[MPTP RW[M[MFWF RHEEH", "A]L[LF RLPXP RX[XF RCEFH", "A]L[LF RLPXP RX[XF RGEDH", "G]L[LF RLPXP RX[XF RR`RcSdTd", "JZTEWH RMHNHOGOE", "JZXEUH RMHNHOGOE", "NVQHRHSGSE RMAN@P?TAV@W?", "MXRMRXSZU[ RNEOGQHSHUGVE", "MXRMRXSZU[ RMGWG", "MXRMRXSZU[ RNFOGNHMGNFNH RVFWGVHUGVFVH RP>SA", "MXRMRXSZU[ RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "MXRMRXSZU[ RMHNGPFTHVGWF", "MXRMRXSZU[ RMCNBPATCVBWA RNFOGNHMGNFNH RVFWGVHUGVFVH", "MWR[RF RN>O@QASAU@V>", "MWR[RF RM@W@", "GWR[RF RIELH", "GWR[RF RMEJH", "F^K[KFYFY[K[", "JZTEWH RMEMGNHOH", "JZXEUH RMEMGNHOH", "NVQEQGRHSH RMAN@P?TAV@W?", "H[MMMXNZP[S[UZVYWWWPVNUM RNEOGQHSHUGVE", "H[MMMXNZP[S[UZVYWWWPVNUM RMGWG", "H[MMMXNZP[S[UZVYWWWPVNUM RNFOGNHMGNFNH RVFWGVHUGVFVH RP>SA", "H[MMMXNZP[S[UZVYWWWPVNUM RNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA", "H\\MbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX RQHRHSGSE", "H\\MbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX RQEQGRHSH", "H[MMMXNZP[S[UZVYWWWPVNUM RMHNGPFTHVGWF", "H[MMMXNZP[S[UZVYWWWPVNUM RMCNBPATCVBWA RNFOGNHMGNFNH RVFWGVHUGVFVH", "I[RQR[ RKFRQYF RN>O@QASAU@V>", "I[RQR[ RKFRQYF RM@W@", "@[RQR[ RKFRQYF RBEEH", "@[RQR[ RKFRQYF RFECH", "A\\L[LFTFVGWHXJXMWOVPTQLQ RDEDGEHFH", "LXNFOGNHMGNFNH RVFWGVHUGVFVH RP>SA", "LXNFOGNHMGNFNH RVFWGVHUGVFVH RT>QA", "NVPESH", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RPESH RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RR`RcSdTd", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RTEQH RR`RcSdTd", "F^K[KFYFY[K[", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RMHNGPFTHVGWF", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RMHNGPFTHVGWF RR`RcSdTd", "B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RDEGH", "B]PFTFVGXIYMYTXXVZT[P[NZLXKTKMLINGPF RHEEH", "@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RBEEH", "@^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RFECH", "F^J[O[OWMVKTJQJLKIMGPFTFWGYIZLZQYTWVUWU[Z[ RR`RcSdTd", "NVTEQH", "NVQEQGRHSH", "F^K[KFYFY[K[",
/* // General Punctuation (2000-206F) */
"F^", "LX", "F^", "LX", "NV", "OU", "PT", "H\\", "MW", "PT", "QS", "RR", "RR", "RR", "RR", "RR", "LXOTUT", "LXOTUT", "H\\JRZR", "LXVTNT", "F^IT[T", "F^IT[T", "H\\ODOb RUDUb", "JZJbZb RJ]Z]", "MWQGQFRDSC", "MWSFSGRIQJ", "MWSZS[R]Q^", "MWQFQGRISJ", "JZUGUFVDWC RMGMFNDOC", "JZOFOGNIMJ RWFWGVIUJ", "JZOZO[N]M^ RWZW[V]U^", "JZUFUGVIWJ RMFMGNIOJ", "I[MMWM RRFRb", "I[M[W[ RMMWM RRFRb", "E_PQPU RQUQQ RRPRV RSUSQ RTQTU RPTRVTT RPRRPTR RPQRPTQUSTURVPUOSPQ", "E_PPPV RQQQU RRQRU RSSUS RSRST ROPUSOV RVSOWOOVS", "MWRYSZR[QZRYR[", "MaRYSZR[QZRYR[ R\\Y]Z\\[[Z\\Y\\[", "MkRYSZR[QZRYR[ R\\Y]Z\\[[Z\\Y\\[ RfYgZf[eZfYf[", "JZRRQSRTSSRRRT", "RR", "RR", "RR", "RR", "RR", "RR", "RR", "RR", "FjJ[ZF RMFOGPIOKMLKKJIKGMF RcUeVfXeZc[aZ`XaVcU RYZZXYVWUUVTXUZW[YZ", "FvJ[ZF RMFOGPIOKMLKKJIKGMF RcUeVfXeZc[aZ`XaVcU RoUqVrXqZo[mZlXmVoU RYZZXYVWUUVTXUZW[YZ", "MWTFQL", "JZQFNL RWFTL", "G]NFKL RTFQL RZFWL", "MWPFSL", "JZSFVL RMFPL", "G]VFYL RPFSL RJFML", "LXVcR`Nc", "KYUMOSUY", "KYOMUSOY", "E_LMXY RXMLY RKRLSKTJSKRKT RRYSZR[QZRYR[ RRKSLRMQLRKRM RYRZSYTXSYRYT", "MaRYSZR[QZRYR[ RRSQGRFSGRSRF R\\Y]Z\\[[Z\\Y\\[ R\\S[G\\F]G\\S\\F", "I[QFQS RQYRZQ[PZQYQ[ RQYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS RMGOFTFVGWIWKVMUNSORPQRQS", "E_JGZG", "OUb`aa^c\\dYeTfPfKeHdFcCaB`", "OUBFCEFCHBKAP@T@YA\\B^CaEbF", "E_N_VW RV_R[", "CaKRKW RRFRK RYRYW RFUKWPU RH[KWN[ RMIRKWI ROORKUO RTUYW^U RV[YW\\[", "LXOTUT", "G][EI`", "KYQSVS RVbQbQDVD", "KYSSNS RNbSbSDND", "ImQYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS RcYdZc[bZcYc[ R_GaFfFhGiIiKhMgNeOdPcRcS", "IeQYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS R`YaZ`[_Z`Y`[ R`S_G`FaG`S`F", "MiRYSZR[QZRYR[ RRSQGRFSGRSRF R_Y`Z_[^Z_Y_[ R[G]FbFdGeIeKdMcNaO`P_R_S", "KYNMVMPb", "G^NMN[ RUMUXVZX[ RJMWMYNZP", "H\\NQNU RWPWV RPVPPOQOUPV RQPPPNQMSNUPVQVQP", "H\\VQVU RMPMV RTVTPUQUUTV RSPTPVQWSVUTVSVSP", "JZR[RV RWXRVMX RURRVOR", "MWQZQ[R]S^ RRNQORPSORNRP", "OUBFCEFCHBKAP@T@YA\\B^CaEbF Rb`aa^c\\dYeTfPfKeHdFcCaB`", "JZRFRK RMIRKWI ROORKUO RRFRK RWIRKMI RUORKOO", "JZM^WB RNFOGNHMGNFNH RVYWZV[UZVYV[", "E_JSKRNQQRSTVUYTZS", ">fB^B]C[EZOZQYRWSYUZ_Za[b]b^", "E_JSZS RR[RK RLMXY RXMLY", "E_LRMSLTKSLRLT RXYYZX[WZXYX[ RXKYLXMWLXKXM", "D`KFHL RQFNL RWFTL R]FZL", "E_KRLSKTJSKRKT RRYSZR[QZRYR[ RRKSLRMQLRKRM RYRZSYTXSYRYT", "E_LXMYLZKYLXLZ RLLMMLNKMLLLN RRRSSRTQSRRRT RXXYYXZWYXXXZ RXLYMXNWMXLXN", "MWRYSZR[QZRYR[ RRNSORPQORNRP", "E_KRLSKTJSKRKT RRYSZR[QZRYR[ RRKSLRMQLRKRM RYRZSYTXSYRYT", "E_JSZS RR[RK RLXMYLZKYLXLZ RLLMMLNKMLLLN RXXYYXZWYXXXZ RXLYMXNWMXLXN", "CaR\\S]R^Q]R\\R^ RRRSSRTQSRRRT RRHSIRJQIRHRJ", "CaR^S_R`Q_R^R` RRVSWRXQWRVRX RRNSORPQORNRP RRFSGRHQGRFRH", "OU", "RR", "RR", "RR", "RR", "RR", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "RR", "RR", "RR", "RR", "RR", "RR",
/* // Subscripts and Superscripts (2070-209F) */
"JZQ@S@UAVDVJUMSNQNOMNJNDOAQ@", "NVRDRN RR=Q>R?S>R=R?", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "JZUFUN RQ@NJWJ", "JZV@O@NFPESEUFVHVKUMSNPNNM", "JZNHOFQESEUFVHVKUMSNQNOMNKNFOCPAR@U@", "JZM@W@PN", "JZQFOENCOAQ@S@UAVCUESFQFOGNINKOMQNSNUMVKVIUGSF", "JZVFUHSIQIOHNFNCOAQ@S@UAVCVHUKTMRNON", "I[LHXH RRBRN", "I[LHXH", "I[LJXJ RLFXF", "MWT=S>RAQFQJROSRTS", "MWP=Q>RASFSJROQRPS", "KZODON ROEQDSDUEVGVN", "JZQSSSUTVWV]U`SaQaO`N]NWOTQS", "JZVaNa RNVPURSRa", "JZNTPSSSUTVVVXUZNaVa", "JZNSVSRXSXUYV[V^U`SaPaN`", "JZUYUa RQSN]W]", "JZVSOSNYPXSXUYV[V^U`SaPaN`", "JZN[OYQXSXUYV[V^U`SaQaO`N^NYOVPTRSUS", "JZMSWSPa", "JZQYOXNVOTQSSSUTVVUXSYQYOZN\\N^O`QaSaU`V^V\\UZSY", "JZVYU[S\\Q\\O[NYNVOTQSSSUTVVV[U^T`RaOa", "I[L[X[ RRURa", "I[L[X[", "I[L]X] RLYXY", "MWTPSQRTQYQ]RbSeTf", "MWPPQQRTSYS]RbQePf", "RR", "KZOXQWSWUXVZVa RV`TaQaO`N^O\\Q[V[", "LYV`TaRaP`O^OZPXRWSWUXVZV[O\\", "KYQaO`N^NZOXQWSWUXVZV^U`SaQa", "KYNWVa RVWNa", "LYOXQWSWUXVZV^U`SaRaP`O^O]V\\", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Currency Symbols (20A0-20CF) */
"F[XMPMP[X[ RTGRFNFLGKHJJJPKRLSNTUT", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RSBG_ RZBN_", "F[WYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH RR[RM RRQSOTNVMXM", "HZTPMP RM[MFWF RJVRV", "H[LMTM RL[W[ RO[OIPGRFUFWG RLSTS", "D`I[IM RIOJNLMOMQNRPR[ RRPSNUMXMZN[P[[ RWHM`", "G]L[LFX[XF RHV\\V RHP\\P", "GyL[LFTFVGWHXJXMWOVPTQLQ R^MfM RaFaXbZd[f[ RlZn[r[tZuXuWtUrToTmSlQlPmNoMrMtN", "GmX[QQ RL[LFTFVGWHXJXMWOVPTQLQ R`Zb[f[hZiXiWhUfTcTaS`Q`PaNcMfMhN", "F^IFN[RLV[[F RHV\\V RHP\\P", "D`I[IFOFRGTIULUR RONOUPXRZU[[[[F", "I\\W[WF RWZU[Q[OZNYMWMQNOONQMUMWN RRHZH RXaNa", "F[HSQS RHNTN RWYVZS[Q[NZLXKVJRJOKKLINGQFSFVGWH", "G\\L[LF RX[OO RXFLR RLOTO", "JZLFXF RR[RF ROVUR ROPUL", "IoK[RFY[K[ R`b`QaObNdMgMiNjOkQkWjYiZg[d[bZ`X", "G]ITJSLRNSOTQUSTXOYLYIXGVFUFSGRIRLSOXTYVYWXYWZT[", "G\\L[LFTFVGWHXJXMWOVPTQLQ RHL\\L", "F[VGTFQFNGLIKKJOJRKVLXNZQ[S[VZWYWRSR RRCR^", "I[K[RFY[ RHV\\V RHP\\P", "H\\XZU[P[NZMYLWLUMSNRPQTPVOWNXLXJWHVGTFOFLG RRCR^", "HZVZT[P[NZMYLWLQMONNPMTMVN RRJR^", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Combining Diacritical Marks For Symbols (20D0-20FF) */

/* // Letterlike Symbols (2100-214F) */

/* // Number Forms (2150-218F) */

/* // Arrows (2190-21FF) */
"E_ZSJS RNWJSNO", "E_R[RK RNORKVO", "E_JSZS RVWZSVO", "E_RKR[ RVWR[NW", "E_JSZS RVWZSVO RNOJSNW", "E_R[RK RNORKVO RVWR[NW", "E_KLYZ RRLKLKS", "E_YLKZ RRLYLYS", "E_YZKL RRZYZYS", "E_KZYL RRZKZKS", "E_ZSJS RRWVO RNOJSNW", "E_JSZS RRONW RVWZSVO", "E_JWJQPQ RJQMTOUQTSRUQWRZU", "E_ZWZQTQ RZQWTUUSTQROQMRJU", "E_ZSJS RTOPSTW RNWJSNO", "E_R[RK RNURQVU RNORKVO", "E_JSZS RPOTSPW RVWZSVO", "E_RKR[ RVQRUNQ RVWR[NW", "E_JSVS RZOVSZW RNWJSNO", "E_ZSNS RJONSJW RVWZSVO", "E_ZOZW RJSZS RNWJSNO", "E_R[RK RV[N[ RNORKVO", "E_JOJW RZSJS RVWZSVO", "E_RKR[ RNKVK RVWR[NW", "E_N[V[ RR[RK RNWR[VW RNORKVO", "E_NWJSNO RJSWSYRZPYNWM", "E_VWZSVO RZSMSKRJPKNMM", "E_NWJSNO RJSWSYRZPYNWMUNTPTW", "E_VWZSVO RZSMSKRJPKNMMONPPPW", "E_PUJUJO RZWZQTQ RZQWTUUSTQROQMRJU", "E_JSZS RTOPW RNOJSNW RVWZSVO", "E_PWR[VY ROKLTVOR[", "E_V[VOJO RNSJONK", "E_N[NOZO RVSZOVK", "E_VKVWJW RNSJWN[", "E_NKNWZW RVSZWV[", "E_JOVOV[ RZWV[RW", "E_VKVWJW RNSJWN[", "E_OQKUGQ RYRYQXNVLSKQKNLLNKQKU", "E_UQYU]Q RKRKQLNNLQKSKVLXNYQYU", "E_KLYZ RKHYH RRLKLKS", "E_JWZW RJKJS RZSZ[ RZOJO RNSJONK RV[ZWVS", "E_[KUKUQ RMMLNKQKSLVNXQYSYVXXVYSYQXNUK", "E_IKOKOQ RWMXNYQYSXVVXSYQYNXLVKSKQLNOK", "E_ZSJSNO", "E_ZSJSNW", "E_R[RKVO", "E_R[RKNO", "E_JSZSVO", "E_JSZSVW", "E_RKR[VW", "E_RKR[NW", "E_ZWJW RJOZO RVSZOVK RN[JWNS", "E_N[NK RVKV[ RJONKRO RRWV[ZW", "E_JWZW RZOJO RNSJONK RV[ZWVS", "E_ZWJW RJOZO RN[JWNSJONK", "E_N[NK RVKV[ RJONKROVKZO", "E_JWZW RZOJO RV[ZWVSZOVK", "E_VKV[ RN[NK RZWV[RWN[JW", "E_JVZVVZ RZPJPNL", "E_ZVJVNZ RJPZPVL", "E_ZPMP RZVMV RRXVN ROXJSON", "E_MVWV RMPWP RSNQX ROXJSON RUNZSUX", "E_JVWV RJPWP RRNNX RUNZSUX", "E_ZPMP RZVMV ROXJSON", "E_ONO[ RUNU[ RWPRKMP", "E_JVWV RJPWP RUNZSUX", "E_UXUK ROXOK RMVR[WV", "E_MVWV RMPWP ROXJSON RUNZSUX", "E_OXON RUXUN RMVR[WV RWPRKMP", "E_[XOL RW\\KP RSLKLKT", "E_IXUL RM\\YP RQLYLYT", "E_INUZ RMJYV RQZYZYR", "E_[NOZ RWJKV RSZKZKR", "E_ZXOX RZSJS RZNON RQLJSQZ", "E_JXUX RJSZS RJNUN RSLZSSZ", "E_NWJSNO RZUWQTUQQNULSJS", "E_VWZSVO RJUMQPUSQVUXSZS", "E_NXVX RNSVS RR[RK RNORKVO", "E_VNNN RVSNS RRKR[ RVWR[NW", "E_ZSWS RSSQS RMSJS RNOJSNW", "E_R[RX RRTRR RRNRK RNORKVO", "E_JSMS RQSSS RWSZS RVWZSVO", "E_RKRN RRRRT RRXR[ RVWR[NW", "E_ZSJS RJWJO RNOJSNW", "E_JSZS RZOZW RVWZSVO", "E_ZPZVOVOXJSONOPZP", "E_U[O[OPMPRKWPUPU[", "E_JVJPUPUNZSUXUVJV", "E_OKUKUVWVR[MVOVOK", "E_U[O[OWUWU[ RUSOSOPMPRKWPUPUS", "E_W[M[MWOWOPMPRKWPUPUWWWW[", "E_ONUN RW[M[MWOWOPMPRKWPUPUWWWW[", "E_RKR[ RW[M[MWOWOPMPRKWPUPUWWWW[", "E_PPMPRKWPTP RU[O[OSMSRNWSUSU[", "E_PPMPRKWPTP RW[M[MWOWOSMSRNWSUSUWWWW[", "E_JNNNNPUPUNZSUXUVNVNXJXJN", "E_Z[NO RZKJKJ[ RUONONV", "E_JKVW RJ[Z[ZK ROWVWVP", "E_MPRKWPUPUVWVR[MVOVOPMP", "E_JSZS RVWZSVO RTRTTSVQWOWMVLTLRMPOOQOSPTR", "E_V[VK RNKN[ RZOVKRO RRWN[JW", "E_J[Z[ RJKZK RZSJS RVGZKVOZSVWZ[V_", "E_ZSJS RTWTO RNOJSNW", "E_JSZS RPOPW RVWZSVO", "E_JSZS RRORW RNOJSNW RVWZSVO", "E_ZSJS RWWWO RRWRO RNOJSNW", "E_JSZS RMOMW RRORW RVWZSVO", "E_JSZS RPOPW RTOTW RNWJSNO RVWZSVO", "E_NSZS RNWNOJSNW", "E_VSJS RVWVOZSVW", "E_NSVS RNWJSNONW RVWVOZSVW",
/* // Mathematical Operators (2200-22FF) */
"I[MLWL RKFR[YF", "HZVHUGSFPFNGMHLKLVMYNZP[S[UZVY", "H[WOVNTMPMNNMOLQLWMYNZP[S[UZVYWWWJVHUGSFOFMG", "I\\WPPP RM[W[WFMF", "I\\WQPQ RMFWFW[M[ RXCL`", "C`G[\\F ROFTFXHZJ\\N\\SZWXYT[O[KYIWGSGNIJKHOF", "I[K[RFY[K[", "I[YFR[KFYF", "C`\\QGQ R\\GOGKIIKGOGSIWKYO[\\[", "C`[CH^ R\\QGQ R\\GOGKIIKGOGSIWKYO[\\[", "E_JSZS RZZPZMYKWJTJRKOMMPLZL", "DaHP]P RHZUZYX[V]R]N[JYHUFHF", "DaI^\\C RHP]P RHZUZYX[V]R]N[JYHUFHF", "E_ZSJS RJZTZWYYWZTZRYOWMTLJL", "E_M[WQ RMZWP RMYWO RMXWN RMWWM RMVWL RMUWK RMTVK RMSUK RMRTK RMQSK RMPRK RMOQK RMNPK RMMOK RMLNK RN[WR RO[WS RP[WT RQ[WU RR[WV RS[WW RT[WX RU[WY RV[WZ RM[MKWKW[M[", "E_Z`ZFJFJ`", "E_ZFZ`J`JF", "E_Z`I`TSIF[F", "E_JSZS", "E_ZWJW RROR_ RJKZK", "E_JSZS RR[RK RRDQERFSERDRF", "G][EI`", "KYID[_", "E_KOYW RR[RK RYOKW", "E_PQRPTQUSTURVPUOSPQ", "E_PQPU RQUQQ RRPRV RSUSQ RTQTU RPTRVTT RPRRPTR RPQRPTQUSTURVPUOSPQ", "IbMTQSS[bB", "IbMTQSS[bB RN@V@RESEUFVHVKUMSNPNNM", "IbMTQSS[bB RUFUN RQ@NJWJ", "E_XPWPUQQUOVMULSMQOPQQUUWVXV", "E_TQVPXQYSXUVVTUPQNPLQKSLUNVPUTQ", "E_JKJ[Z[", "E_ZKJ[Z[", "E_ZKJ[Z[ RPSRUTZT]", "E_Z[JSZK RSYTWUSTOSM", "H\\RbRD", "H\\NUVQ RRDRb", "H\\ODOb RUDUb", "H\\LVXP RODOb RUDUb", "E_[[RKI[", "E_IKR[[K", "E_Z[ZQXMTKPKLMJQJ[", "E_JKJULYP[T[XYZUZK", "H\\L]M_O`Q_R]RISGUFWGXI", "D`H]I_K`M_N]NIOGQFSGTI RP]Q_S`U_V]VIWGYF[G\\I", "@dD]E_G`I_J]JIKGMFOGPI RL]M_O`Q_R]RISGUFWGXI RT]U_W`Y_Z]ZI[G]F_G`I", "H\\L]M_O`Q_R]RISGUFWGXI RRMUNWPXSWVUXRYOXMVLSMPONRM", "D`H]I_K`M_N]NIOGQFSGTI RP]Q_S`U_V]VIWGYF[G\\I RVMYN[P\\S[VYXVYNYKXIVHSIPKNNMVM", "@dD]E_G`I_J]JIKGMFOGPI RL]M_O`Q_R]RISGUFWGXI RT]U_W`Y_Z]ZI[G]F_G`I RZM]N_P`S_V]XZYJYGXEVDSEPGNJMZM", "H\\URXU[R RLSMPONRMUNWPXSXU RL]M_O`Q_R]RISGUFWGXI", "H\\UQXT[Q RL]M_O`Q_R]RISGUFWGXI RLSMPONRMUNWPXSWVUXRYOXMVLS", "H\\UUXR[U RL]M_O`Q_R]RISGUFWGXI RLSMPONRMUNWPXSWVUXRYOXMVLS", "E_KXLYKZJYKXKZ RRLSMRNQMRLRN RYXZYYZXYYXYZ", "E_YNXMYLZMYNYL RRZQYRXSYRZRX RKNJMKLLMKNKL", "JZRXSYRZQYRXRZ RRLSMRNQMRLRN", "E_LXMYLZKYLXLZ RLLMMLNKMLLLN RXXYYXZWYXXXZ RXLYMXNWMXLXN", "E_JSZS RRFQGRHSGRFRH", "E_JSTS RYXZYYZXYYXYZ RYLZMYNXMYLYN", "E_JSZS RLXMYLZKYLXLZ RLLMMLNKMLLLN RXXYYXZWYXXXZ RXLYMXNWMXLXN", "E_JSKRNQQRSTVUYTZS RRXSYRZQYRXRZ RRLSMRNQMRLRN", "E_JSKRNQQRSTVUYTZS", "E_ZSYRVQSRQTNUKTJS", "E_WPYQZSYUWVTUPQMPKQJSKUMV", "E_JSKNLLNKPLQNSXTZV[XZYXZS", "E_RKSLTOSRQTPWQZR[", "E_JSKRNQQRSTVUYTZS RVKN[", "E_ZPJP RZVYWVXSWQUNTKUJV", "E_JVZV RJPKONNQOSQVRYQZP", "E_JVZV RJPKONNQOSQVRYQZP RVKN[", "E_JYZY RJSZS RJMKLNKQLSNVOYNZM", "E_JYZY RJSZS RUPO\\ RJMKLNKQLSNVOYNZM", "E_JYZY RJSZS RJMKLNKQLSNVOYNZM RXGL_", "E_JVKUNTQUSWVXYWZV RJPKONNQOSQVRYQZP", "E_JVKUNTQUSWVXYWZV RJPKONNQOSQVRYQZP RVKN[", "E_JYZY RJSKRNQQRSTVUYTZS RJMKLNKQLSNVOYNZM", "E_JYKXNWQXSZV[YZZY RJSKRNQQRSTVUYTZS RJMKLNKQLSNVOYNZM", "E_ZYJY RZSJS RZMYLVKSLQNNOKNJM", "E_JXLWPVTVXWZX RJNLOPPTPXOZN", "E_JVNVNWOYQZSZUYVWVVZV RJPNPNOOMQLSLUMVOVPZP", "E_ZVJV RJPNPNOOMQLSLUMVOVPZP", "E_JPZP RZVJV RRHQIRJSIRHRJ", "E_JPZP RZVJV RRXSYRZQYRXRZ RRLSMRNQMRLRN", "E_JPZP RZVJV RKJLKKLJKKJKL RYZZ[Y\\X[YZY\\", "E_ZPJP RJVZV RYJXKYLZKYJYL RKZJ[K\\L[KZK\\", "AcNP^P R^VNV RGVHWGXFWGVGX RGNHOGPFOGNGP", "AcVPFP RFVVV R]V\\W]X^W]V]X R]N\\O]P^O]N]P", "E_JPZP RZVJV RPQRPTQUSTURVPUOSPQ", "E_JPZP RZVJV RRJPIOGPERDTEUGTIRJ", "E_JPZP RZVJV RNJOHQGSGUHVJ", "E_JPZP RZVJV RNJRGVJ", "E_JPZP RZVJV RNGRJVG", "E_JPZP RZVJV RRATGOCUCPGRA", "E_JPZP RZVJV RR?NJVJR?", "E_JPZP RYC]C RZVJV R]?[@ZBZJ RM?MJKJIIHGHEICKBMB RQFVFVCUBRBQCQIRJUJ", "E_JPZP RZVJV RMBMJ RMCNBQBRCRJ RRCSBVBWCWJ", "E_JPZP RZVJV RRHSIRJQIRHRJ RN@P?S?U@VBUDSE", "E_JPZP RTMPY RZVJV", "E_JYZY RJSZS RJMZM", "E_JYZY RJSZS RJMZM RXGL_", "E_J\\Z\\ RJPZP RJJZJ RZVJV", "E_ZZJZ RZVJPZJ", "E_JZZZ RJVZPJJ", "E_J]Z] RZWJW RZSJMZG", "E_Z]J] RJWZW RJSZMJG", "E_J]Z] RTTP` RZWJW RZSJMZG", "E_JWZW RTTP` RZ]J] RJSZMJG", "=gRMBSRY RbMRSbY", "=gRMbSRY RBMRSBY", "I[OCPDRGSITLUQUUTZS]R_PbOc RUcTbR_Q]PZOUOQPLQIRGTDUC", "E_JXLWPVTVXWZX RJNLOPPTPXOZN RVKN[", "E_ZMJSZY RVKN[", "E_JMZSJY RVKN[", "E_ZZJZ RZVJPZJ RXGL_", "E_JZZZ RJVZPJJ RXGL_", "E_ZVJPZJ RJZKYNXQYS[V\\Y[ZZ", "E_JVZPJJ RJZKYNXQYS[V\\Y[ZZ", "E_ZVJPZJ RJZKYNXQYS[V\\Y[ZZ RXGL_", "E_JVZPJJ RJZKYNXQYS[V\\Y[ZZ RXGL_", "E_JSZYJ_ RZSJMZG", "E_ZSJYZ_ RJSZMJG", "E_JSZYJ_ RZSJMZG RXGL_", "E_ZSJYZ_ RJSZMJG RXGL_", "E_ZKXNVPRRJSRTVVXXZ[", "E_JKLNNPRRZSRTNVLXJ[", "E_JVRWVYX[Z^ RZHXKVMROJPRQVSXUZX", "E_ZVRWNYL[J^ RJHLKNMROZPRQNSLUJX", "E_J[KZNYQZS\\V]Y\\Z[ RZHXKVMROJPRQVSXUZX", "E_J[KZNYQZS\\V]Y\\Z[ RJXLUNSRQZPRONMLKJH", "E_ZKXNVPRRJSRTVVXXZ[ RVKN[", "E_JKLNNPRRZSRTNVLXJ[ RVKN[", "E_ZMNMLNKOJQJUKWLXNYZY", "E_JMVMXNYOZQZUYWXXVYJY", "E_ZMNMLNKOJQJUKWLXNYZY RVKN[", "E_JMVMXNYOZQZUYWXXVYJY RVKN[", "E_J\\Z\\ RZJNJLKKLJNJRKTLUNVZV", "E_Z\\J\\ RJJVJXKYLZNZRYTXUVVJV", "E_J\\Z\\ RZJNJLKKLJNJRKTLUNVZV RXGL_", "E_Z\\J\\ RJJVJXKYLZNZRYTXUVVJV RXGL_", "E_J\\Z\\ RZJNJLKKLJNJRKTLUNVZV RSYQ_", "E_Z\\J\\ RJJVJXKYLZNZRYTXUVVJV RSYQ_", "E_JKJULYP[T[XYZUZK ROSUS RSUUSSQ", "E_JKJULYP[T[XYZUZK RRRQSRTSSRRRT", "E_JKJULYP[T[XYZUZK RLSXS RRMRY", "E_ZYJYJMZM", "E_JYZYZMJM", "E_Z\\J\\ RZVJVJJZJ", "E_J\\Z\\ RJVZVZJJJ", "E_Z[ZKJKJ[", "E_JKJ[Z[ZK", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RLSXS RRMRY", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RLSXS", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RMNWX RWNMX", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RWFM^", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRRQSRTSSRRRT", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RPQRPTQUSTURVPUOSPQ", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRNRS RMQRSWQ ROWRSUW", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RLUXU RLQXQ", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RNSVS", "E_JKZKZ[J[JK RLSXS RRMRY", "E_JKZKZ[J[JK RLSXS", "E_JKZKZ[J[JK RMNWX RWNMX", "E_JKZKZ[J[JK RRRQSRTSSRRRT", "E_J[JK RJSZS", "E_Z[ZK RZSJS", "E_ZKJK RRKR[", "E_J[Z[ RR[RK", "I[NSVS RNKN[", "I[NVVV RNPVP RNKN[", "E_JVZV RJPZP RJKJ[", "E_JKJ[ RPSZS RPKP[", "E_JKJ[ ROKO[ RTKT[ RYSTS", "E_JKJ[ RPVYV RPPYP RPKP[", "E_J[JK RJSZS RXGL_", "E_JVZV RJPZP RJKJ[ RXGL_", "E_JKJ[ RPSZS RPKP[ RXGL_", "E_JKJ[ RPVYV RPPYP RPKP[ RXGL_", "E_VKXLYNXPVQRRJSRTVUXVYXXZV[", "E_NKLLKNLPNQRRZSRTNULVKXLZN[", "E_JSZYZMJS", "E_ZSJYJMZS", "E_Z[J[ RJQZWZKJQ", "E_J[Z[ RZQJWJKZQ", "BbXQXU RYQYU RZPZV R[Q[U R\\Q\\U RMSLQJPHQGSHUJVLUMSWSXUZV\\U]S\\QZPXQWS", "BbLQLU RKQKU RJPJV RIQIU RHQHU RWSXQZP\\Q]S\\UZVXUWSMSLUJVHUGSHQJPLQMS", "E_JSTSUUWVYUZSYQWPUQTS", "E_JSNS RR[RW RRKRO RZSVS", "I[NFVF RRFR[", "E_J[Z[ RZKRVJK", "E_ZKJK RJ[RPZ[", "E_JKZK RZPR[JP", "E_JKJ[Z[ RJOLOQQTTVYV[", "E_Z[ZKJ[Z[", "Bb_`REE`", "BbEFRa_F", "Bb]`]O\\KZHWFSEQEMFJHHKGOG`", "BbGFGWH[J^M`QaSaW`Z^\\[]W]F", "E_RaJSRFZSRa", "JZRRQSRTSSRRRT", "I[RRTXOTUTPXRR", "E_ZSJS RRXSYRZQYRXRZ RRLSMRNQMRLRN RLMXY RXMLY", "E_JKZ[ZKJ[JK", "E_ZKJ[JKZ[", "E_JKZ[ZKJ[", "E_JKZ[ RRSJ[", "E_ZKJ[ RRSZ[", "E_ZVJV RZPYOVNSOQQNRKQJP", "E_JKMMOOQSR[SSUOWMZK", "E_Z[WYUWSSRKQSOWMYJ[", "E_ZPSPQQPSQUSVZV RZ\\Q\\N[KXJUJQKNNKQJZJ", "E_JPQPSQTSSUQVJV RJ\\S\\V[YXZUZQYNVKSJJJ", "E_U[UTTRRQPROTO[ R[[[RZOWLTKPKMLJOIRI[", "E_OKORPTRUTTURUK RIKITJWMZP[T[WZZW[T[K", "E_RKR[ RL[LSMPNOQNSNVOWPXSX[", "E_JPZP RZVJV RODOb RUDUb", "E_ZMJSZY RYRXSYTZSYRYT", "E_JMZSJY RKRJSKTLSKRKT", "5oJM:SJY RZMJSZY RjMZSjY", "5oZMjSZY RJMZSJY R:MJS:Y", "E_ZSJS RJWZ[J_ RZOJKZG", "E_JSZS RZWJ[Z_ RJOZKJG", "E_ZLJL RZPJVZ\\", "E_JLZL RJPZVJ\\", "E_JPROVMXKZH RZ^X[VYRWJVRUVSXQZN", "E_ZPRONMLKJH RJ^L[NYRWZVRUNSLQJN", "E_JPROVMXKZH RZ^X[VYRWJVRUVSXQZN RXGL_", "E_ZPRONMLKJH RJ^L[NYRWZVRUNSLQJN RXGL_", "E_Z\\J\\ RZVJVJJZJ RXGL_", "E_J\\Z\\ RJVZVZJJJ RXGL_", "E_Z\\J\\ RZVJVJJZJ RSYQ_", "E_J\\Z\\ RJVZVZJJJ RSYQ_", "E_ZVJPZJ RJZKYNXQYS[V\\Y[ZZ RSWQ]", "E_JVZPJJ RJZKYNXQYS[V\\Y[ZZ RSWQ]", "E_J[KZNYQZS\\V]Y\\Z[ RZHXKVMROJPRQVSXUZX RSXQ^", "E_J[KZNYQZS\\V]Y\\Z[ RJXLUNSRQZPRONMLKJH RSXQ^", "E_JSZYZMJS RXGL_", "E_ZSJYJMZS RXGL_", "E_Z[J[ RJQZWZKJQ RXGL_", "E_J[Z[ RZQJWJKZQ RXGL_", "CaR\\S]R^Q]R\\R^ RRRSSRTQSRRRT RRHSIRJQIRHRJ", "CaHRISHTGSHRHT RRRSSRTQSRRRT R\\R]S\\T[S\\R\\T", "Ca\\H[I\\J]I\\H\\J RRRQSRTSSRRRT RH\\G]H^I]H\\H^", "CaHHIIHJGIHHHJ RRRSSRTQSRRRT R\\\\]]\\^[]\\\\\\^", ">`BQ\\Q R\\GOGKIIKGOGSIWKYO[\\[", ">`GQ\\Q R\\M\\U R\\GOGKIIKGOGSIWKYO[\\[", "E_JSZS RZPZV RZZPZMYKWJTJRKOMMPLZL", "C`\\QGQ R\\GOGKIIKGOGSIWKYO[\\[ RR@QARBSAR@RB", "C`GA\\A R\\QGQ R\\[O[KYIWGSGOIKKIOG\\G", "E_JSZS RZGJG RZLPLMMKOJRJTKWMYPZZZ", "C`G`\\` R\\PGP R\\FOFKHIJGNGRIVKXOZ\\Z", "C`HT\\T RHN\\N R\\GOGKIIKGOGSIWKYO[\\[", "DfbQHQ RHGUGYI[K]O]S[WYYU[H[", "Df]QHQ RHMHU RHGUGYI[K]O]S[WYYU[H[", "E_ZSJS RJPJV RJZTZWYYWZTZRYOWMTLJL", "Da]AHA RHQ]Q RH[U[YY[W]S]O[KYIUGHG", "E_ZSJS RJGZG RJLTLWMYOZRZTYWWYTZJZ", "C`GQ\\Q R\\GGGG[\\[",
/* // Miscellaneous Technical (2300-23FF) */
"E_PKTKXMZQZUXYT[P[LYJUJQLMPK RZKJ[", "E_JQRWROZU", "E_J[JORGZOZ[J[", "E_NORKVO", "E_VWR[NW", "E_ZKJK RJ[RPZ[", "E_JNZN RJHZH RJ[RSZ[", "H\\RDSETGSIRJQLRNSOTQSSRTQVRXSYT[S]R^Q`Rb", "KYQbQDVD", "KYSbSDND", "KYQDQbVb", "KYSDSbNb", "E_RWR[ RVSZS", "E_RWR[ RNSJS", "E_RORK RVSZS", "E_RORK RNSJS", "E_ZQJQJV", "D`[JZLYPYVZZ[\\Y[UZOZK[I\\JZKVKPJLIJKKOLULYK[J", "E_JSJQLMPKTKXMZQZS", "E_JSJQLMPKTKXMZQZS RJSZS", "E_JMLLPKTKXLZMR[JM", "E_PUJ[ RTKWLYNZQYTWVTWQVOTNQONQLTK", "E_JSZS RR[RK RVRUPSOQOOPNRNTOVQWSWUVVTVR", "E_JWZW RJOZO RNKN[ RVKV[", "E_LPXPZO[MZKXJVKUMUYV[X\\Z[[YZWXVLVJWIYJ[L\\N[OYOMNKLJJKIMJOLP", "E_ZUJUJP", "E_RORSUS RPKTKXMZQZUXYT[P[LYJUJQLMPK", "E_M[RVW[ RN[RWV[ RP[RYT[ RS[RZQ[ RU[RXO[ RYMRPKMROYM RJFZFZKYMKTJVJ[Z[ZVYTKMJJJF", "JZVFNFNM", "JZNFVFVM", "JZV[N[NT", "JZN[V[VT", "H\\RbRMSITGVFXGYI", "H\\RDRYQ]P_N`L_K]", "E_JUKTMSRRWSYTZU", "E_ZQYRWSRTMSKRJQ", "E_LKHK RXK\\K RNORKVO", "@dXK^K RFKLKX[^[", "AfJKZ[ RZKJ[ RFKZKbSZ[F[FK", "AcJKZ[ RZKJ[ RFK^K^[F[FK", "9k>VfV R>LfL RCQCL RD[DV REVEQ RFLFG RHQHL RJVJQ RK[KV RKLKG RMQML ROVOQ RPLPG RRQRL RTVTQ RULUG RWQWL RYVYQ RZ[ZV RZLZG R\\Q\\L R^V^Q R_L_G R`[`V R>QaQaL R>[>GfGf[>[", "KYUcOSUC", "KYOcUSOC", ">cZKJ[ RJKZ[ R^KJKBSJ[^[^K", "AcKOKW RR[YW RRKYO RRE^L^ZRaFZFLRE", "H\\PNKX RYNTX RVRUPSOQOOPNRNTOVQWSWUVVTVR", "E_N[J[JW RZSRSJ[ RVRUPSOQOOPNRNTOVQWSWUVVTVR", "E_JSZS RNYVY RVMNM", "E_RPRKNN RZPZKVN RRKJ[R[ZK", "H\\LS[S RRMRY RXP[SXV RVRUPSOQOOPNRNTOVQWSWUVVTVR", "E_ZSJ\\JJZS RJSZS", "E_J[JRZ[J[", "E_JWJ[Z[ZW", "E_VWR[NW", "D`JaZa RJFZF RRFRa", "D`MFWFWaMaMF", "D`IF[F[aIaIF RJPZP RZVJV", "D`IF[F[aIaIF RZSJS RRXSYRZQYRXRZ RRLSMRNQMRLRN", "D`IF[F[aIaIF RRJ[SR\\ISRJ", "D`IF[F[aIaIF RPQRPTQUSTURVPUOSPQ", "D`IF[F[aIaIF RPKTKXMZQZUXYT[P[LYJUJQLMPK", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRbRD", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RPQRPTQUSTURVPUOSPQ", "E_JSZS RZKJ[", "E_JSZS RJKZ[", "D`IaIF[F[aIa[F", "D`[a[FIFIa[aIF", "D`IF[F[aIaIF RZMJSZY", "D`IF[F[aIaIF RJMZSJY", "E_ZSJS RNWJSNO RR[RK", "E_JSZS RVWZSVO RR[RK", "D`IF[F[aIaIF RZSJS RNWJSNO", "D`IF[F[aIaIF RJSZS RVWZSVO", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RLGX_", "E_J[Z[ RR[RK RZaJa", "E_RKX[L[RK RRbRD", "D`IF[F[aIaIF RIKR[[K", "D`IF[F[aIaIF RRKX[L[RK", "E_ZKJK RRKR[ RVRUPSOQOOPNRNTOVQWSWUVVTVR", "E_R[RK RNORKVO RJSZS", "D`IF[F[aIaIF RR[RK RNORKVO", "E_ZKJK RRKR[ RMEWE", "E_R[LKXKR[ RRbRD", "D`IF[F[aIaIF R[[RKI[", "D`IF[F[aIaIF RR[LKXKR[", "E_J[Z[ RR[RK RPQRPTQUSTURVPUOSPQ", "E_RKR[ RVWR[NW RJSZS", "D`IF[F[aIaIF RRKR[ RVWR[NW", "JZJ]Z] RSFQJ", "E_RKX[L[RK RJ]Z]", "E_RJ[SR\\ISRJ RJ]Z]", "E_PQRPTQUSTURVPUOSPQ RJ]Z]", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RJ]Z]", "E_Z[ZQXMTKPKLMJQJ[ RPQRPTQUSTURVPUOSPQ", "D`IF[F[aIaIF RSFQJ", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRPTVORURPVRP", "D`IF[F[aIaIF RRYSZR[QZRYR[ RRNSORPQORNRP", "E_ZKJK RRKR[ RNDOENFMENDNF RVDWEVFUEVDVF", "E_R[LKXKR[ RNFOGNHMGNFNH RVFWGVHUGVFVH", "E_RKWZJQZQMZRK RNDOENFMENDNF RVDWEVFUEVDVF", "E_PQRPTQUSTURVPUOSPQ RNIOJNKMJNINK RVIWJVKUJVIVK", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RNDOENFMENDNF RVDWEVFUEVDVF", "E_JKJULYP[T[XYZUZK RRbRD", "E_ZMNMLNKOJQJUKWLXNYZY RRbRD", "E_JSKRNQQRSTVUYTZS RNFOGNHMGNFNH RVFWGVHUGVFVH", "E_JMZSJY RNFOGNHMGNFNH RVFWGVHUGVFVH", "E_JSZS RSZS[R]Q^", "E_R[LKXKR[ RJSKRNQQRSTVUYTZS", "H\\QFSFUGVHWJXNXSWWVYUZS[Q[OZNYMWLSLNMJNHOGQF RJPKONNQOSQVRYQZP", "E_JSKRNQQRSTVUYTZS RRbRD", "MWSZS[R]Q^ RRNSORPQORNRP RJ]Z]", "D`IF[F[aIaIF RJPZP RTMPY RZVJV", "D`IF[F[aIaIF RQYRZQ[PZQYQ[ RMGOFTFVGWIWKVMUNSORPQRQS", "E_IKR[[K RJSKRNQQRSTVUYTZS", "E_[[RKI[ RJSKRNQQRSTVUYTZS", "MXRMRXSZU[", "H\\MbMQNOONQMTMVNWOXQXWWYVZT[Q[OZMX", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[ RJ]Z]", "HZLTST RVZT[P[NZMYLWLQMONNPMTMVN RJ]Z]", "MXRMRXSZU[ RJ]Z]", "G]RTRX RMMLNKPKXLZN[O[QZRXSZU[V[XZYXYPXNWM RJ]Z]", "H]YMVWUYTZR[P[NZMYLVLRMONNPMRMTNUOVQWXXZZ[", "IbMTQSS[bB RXL`L", "A_J_F_F[ RJKJ[Z[ RF_OVEQOG", "E_JWNWN[V[VWZW", "E_NSN[J[ RVSV[Z[ RJSJQLMPKTKXMZQZSJS", "E_PQPU RQUQQ RRPRV RSUSQ RTQTU RPTRVTT RPRRPTR RPQRPTQUSTURVPUOSPQ RRbRD", "E_VWR[NW ROEQDSDUEVGVN RVMTNQNOMNKOIQHVH", "BbF[^[ RGLIKKKMLNNNU RUSVTUUTTUSUU R]S^T]U\\T]S]U RNTLUIUGTFRGPIONO", "BbF[N[ RV[^[ RGLIKKKMLNNNU RWLYK[K]L^N^U RNTLUIUGTFRGPIONO R^T\\UYUWTVRWPYO^O", "BbHPDP RJUFX RJKFH R^XZU R^HZK R`P\\P RTTRUPUNTMRMQNNPLRKVKTU", "=_RKR[B[BKRK RPKTKXMZQZUXYT[P[LYJUJQLMPK", "E_JKZKZ[J[JK RRbRD", "C_ESUS RQWUSQO RJWJ[Z[ZKJKJO", "@dX[^[ RZO^KZG RF[L[XK^K", "E_KOYW RR[RK RYOKW RRMONMPLSMVOXRYUXWVXSWPUNRM", "E_JSOSR[USZS RPKTKXMZQZUXYT[P[LYJUJQLMPK", "E_R[KOYOR[ RPKTKXMZQZUXYT[P[LYJUJQLMPK", "E_STJK RJOJKNK RSKTKXMZQZUXYT[P[LYJUJT", "D`KNKROR RYRWPTOPOMPKR RNXMVKUIVHXIZK[MZNX RVXWZY[[Z\\X[VYUWVVX", "E_I[N[NKVKV[[[", "E_I[V[VK RN[NK[K", "E_JKZK RJSRKZSR[JS", "E_Z[J[ RZSR[JSRKZS", "E_JKZK RJSRKZSR[JS RJSZS", "E_Z[J[ RZSR[JSRKZS RJSZS", "E_JVLV RJPZP RQVSV RXVZV", "BbL[FQLGXG^QX[L[", "D`IF[F[aIaIF", "MWTFQL", "AcZSJS RRORK RR[RW RNOJSNW R^[F[FK^K^[", "AcJSZS RRWR[ RRKRO RVWZSVO RFK^K^[F[FK", "BbLHQHQC RLSLHQCXCXSLS RLKJKHLGNGXHZJ[Z[\\Z]X]N\\LZKXK", "BbROJW RZORW RGXGNHLJKZK\\L]N]X\\ZZ[J[HZGX", "H\\XDVGUITLSQR[Rb", "H\\RbRD", "H\\XbV_U]TZSURKRD", "H\\LDNGOIPLQQR[Rb", "H\\RbRD", "H\\LbN_O]PZQURKRD", "H\\XGRGRb", "H\\RbRD", "H\\X_R_RD", "H\\LGRGRb", "H\\RbRD", "H\\L_R_RD", "H\\XDTHSJRNRb", "H\\RDRIQMPOLSPWQYR]Rb", "H\\XbT^S\\RXRD", "H\\RbRD", "H\\LDPHQJRNRb", "H\\RDRISMTOXSTWSYR]Rb", "H\\LbP^Q\\RXRD", "H\\RbRD", "H\\HS\\S", "H\\WDSHRKR[Q^Mb", "H\\MDQHRKR[S^Wb", "E_VbIF\\F", "E_VDI`\\`", ">fC^CYaYa^", ">fCHCMaMaH", ">fC^CYaYa^ RaHaMCMCH", "IbMTQSS[bB", "H\\RbRD", "H\\RbRD", "H\\HG\\G", "H\\HM\\M", "H\\\\YHY", "H\\\\_H_", "E_UFOFO[", "E_U[O[OF", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRbRD", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RZEJE RRERa", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RJaZa RRaRE", "E_RK[[I[RK RRbRD", "E_RK[[I[RK RZEJE RRERa", "E_RK[[I[RK RJaZa RRaRE", "E_JSKRNQQRSTVUYTZS RRbRD", "E_JSKRNQQRSTVUYTZS RZEJE RRERa", "E_JSKRNQQRSTVUYTZS RJaZa RRaRE", "E_JaZa RRaRE", "E_ZEJE RRERa", "E_OFUFU[", "E_O[U[UF", "D`TFQL RMKJKJ[Z[ZKWK", "E_IWN\\NZZZZKTKTTNTNRIW", "E_Z[J[ RJVRKZV", "H\\RbRD", "H\\NQNROTQUSUUTVRVQ", "H\\NQNROTQUSUUTVRVQ RMKWK", "H\\NQNROTQUSUUTVRVQ RW[M[", "CaGQGRHTJULUNTOROQ RUQURVTXUZU\\T]R]Q RGK]K", "CaGQGRHTJULUNTOROQ RUQURVTXUZU\\T]R]Q R][G[", "E_JQJRKTMUOUQTRRRQ RRRSTUUWUYTZRZQ", "E_JUZUZP", "E_JPJUZUZP", "E_RPRU RJPJUZUZP", "E_HO\\O RLUXU RRFRO RT[P[", "E_HS\\S RJMZMZYJYJM", ">fB]C\\FZHYKXPWTWYX\\Y^Za\\b]", ">fbIaJ^L\\MYNTOPOKNHMFLCJBI", ">fB^B]C[EZOZQYRWSYUZ_Za[b]b^", ">fbHbIaK_LULSMROQMOLELCKBIBH", ">fB^FY^Yb^", ">fbH^MFMBH", "E_I[NKVK[[I[", "AcRE^L^ZRaFZFLRE RQLSLVMXOYRYTXWVYSZQZNYLWKTKRLONMQL", "E_JSZS", "E_HXMN\\NWXHX", "E_JSZS RJSKNLLNKPLQNSXTZV[XZYXZS", "E_LMXY RXMLY RPQRPTQUSTURVPUOSPQ", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Control Pictures (2400-243F) */

/* // Optical Character Recognition (2440-245F) */

/* // Enclosed Alphanumerics (2460-24FF) */

/* // Box Drawing (2500-257F) */

/* // Block Elements (2580-259F) */

/* // Geometric Shapes (25A0-25FF) */
"E_KKK[ RL[LK RMKM[ RN[NK ROKO[ RP[PK RQKQ[ RR[RK RSKS[ RT[TK RUKU[ RV[VK RWKW[ RX[XK RYKY[ RJKZKZ[J[JK", "E_JKZKZ[J[JK", "E_KLMKWKYLZNZXYZW[M[KZJXJNKL", "E_JKZKZ[J[JK RPPPV RQVQP RRPRV RSVSP RTPTV ROVOPUPUVOV", "E_JWZW RJSZS RJOZO RJKZKZ[J[JK", "E_NKN[ RRKR[ RVKV[ RJKZKZ[J[JK", "E_JWZW RJSZS RJOZO RNKN[ RRKR[ RVKV[ RJKZKZ[J[JK", "E_JKZ[ RN[JW RT[JQ RZUPK RZOVK RJKZKZ[J[JK", "E_J[ZK RJUTK RJONK RP[ZQ RV[ZW RJKZKZ[J[JK", "E_J[ZK RJUTK RJONK RJKZ[ RN[JW RP[ZQ RT[JQ RV[ZW RZUPK RZOVK RJKZKZ[J[JK", "E_PPPV RQVQP RRPRV RSVSP RTPTV ROVOPUPUVOV", "E_OVOPUPUVOV", "E_JXTN RJWSN RJVRN RJUQN RJTPN RJSON RJRNN RJQMN RJPLN RJOKN RKXUN RLXVN RMXWN RNXXN ROXYN RPXZN RQXZO RRXZP RSXZQ RTXZR RUXZS RVXZT RWXZU RXXZV RYXZW RJNZNZXJXJN", "E_JNZNZXJXJN", "E_M[WQ RMZWP RMYWO RMXWN RMWWM RMVWL RMUWK RMTVK RMSUK RMRTK RMQSK RMPRK RMOQK RMNPK RMMOK RMLNK RN[WR RO[WS RP[WT RQ[WU RR[WV RS[WW RT[WX RU[WY RV[WZ RM[MKWKW[M[", "E_M[MKWKW[M[", "E_NNLP RONKR RPNJT RQNIV RRNHX RSNIX RTNJX RUNKX RVNLX RWNMX RXVVX RXNNX RYTUX RYNOX RZRTX RZNPX R[PSX R[NQX R\\NRX RHXMN\\NWXHX", "E_HXMN\\NWXHX", "E_JZJ[ RKXK[ RLVL[ RMTM[ RNSN[ ROQO[ RPOP[ RQMQ[ RRKR[ RSMS[ RTOT[ RUQU[ RVSV[ RWTW[ RXVX[ RYXY[ RZ[RLJ[ RZZZ[ RRK[[I[RK", "E_RK[[I[RK", "E_OUOV RPSPV RQQQV RRORV RSQSV RTSTV RUUUV ROVRPUV RROVVNVRO", "E_ROVVNVRO", "E_KKK[ RLLLZ RMLMZ RNMNY ROMOY RPNPX RQNQX RRORW RSPSV RTPTV RUQUU RVQVU RWSXS RWRWT RJKYSJ[ RZSJ\\JJZS", "E_ZSJ\\JJZS", "E_PPPV RQQQU RRQRU RSSUS RSRST ROPUSOV RVSOWOOVS", "E_VSOWOOVS", "E_KNKX RLNLX RMOMW RNONW ROOOW RPPPV RQPQV RRPRV RSQSU RTQTU RURUT RVRVT RWRWT RXSWS RJNYSJX RZSJYJMZS", "E_ZSJYJMZS", "E_ZLZK RYNYK RXPXK RWRWK RVSVK RUUUK RTWTK RSYSK RR[RK RQYQK RPWPK ROUOK RNSNK RMRMK RLPLK RKNKK RJKRZZK RJLJK RR[IK[KR[", "E_R[IK[KR[", "E_UQUP RTSTP RSUSP RRWRP RQUQP RPSPP ROQOP RUPRVOP RRWNPVPRW", "E_RWNPVPRW", "E_Y[YK RXZXL RWZWL RVYVM RUYUM RTXTN RSXSN RRWRO RQVQP RPVPP ROUOQ RNUNQ RMSLS RMTMR RZ[KSZK RJSZJZ\\JS", "E_JSZJZ\\JS", "E_TVTP RSUSQ RRURQ RQSOS RQTQR RUVOSUP RNSUOUWNS", "E_NSUOUWNS", "E_YXYN RXXXN RWWWO RVWVO RUWUO RTVTP RSVSP RRVRP RQUQQ RPUPQ ROTOR RNTNR RMTMR RLSMS RZXKSZN RJSZMZYJS", "E_JSZMZYJS", "E_JRJT RKUKQ RLPLV RMWMO RNNNX ROYOM RPLPZ RQ[QK RRJR\\ RS[SK RTLTZ RUYUM RVNVX RWWWO RXPXV RYUYQ RZRZT RRJ[SR\\ISRJ", "E_RJ[SR\\ISRJ", "E_RJ[SR\\ISRJ RPRPT RQUQQ RRPRV RSUSQ RTRTT RRPUSRVOSRP", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RPQPU RQUQQ RRPRV RSUSQ RTQTU RPTRVTT RPRRPTR RPQRPTQUSTURVPUOSPQ", "E_RaJSRFZSRa", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK", "E_JQKO RKWJU RNLPK RP[NZ RTKVL RVZT[ RYOZQ RZUYW", "E_NLNZ RRKR[ RVLVZ RPKTKXMZQZUXYT[P[LYJUJQLMPK", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RPQRPTQUSTURVPUOSPQ", "E_KOKW RLXP[ RLNPK RLMLY RMYMM RNLNZ ROZOL RPKP[ RQ[QK RRKR[ RS[SK RT[XX RTKT[ RTKXN RUZUL RVLVZ RWYWM RXMXY RYWYO RPKTKXMZQZUXYT[P[LYJUJQLMPK", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RKOKW RLYLM RMMMY RNZNL ROLOZ RP[LX RP[PK RLN RQKQ[ RR[P[LYJUJQLMPKRKR[", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RYWYO RXMXY RWYWM RVLVZ RUZUL RTKXN RTKT[ RXX RS[SK RRKTKXMZQZUXYT[R[RK", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RKOKS RLMLS RMSMM RNLNS ROSOL RPKLN RPKPS RQKQS RRKRS RSKSS RTSTK RXN RULUS RVSVL RWMWS RXMXS RYOYS RJSJQLMPKTKXMZQZSJS", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RYWYS RXYXS RWSWY RVZVS RUSUZ RT[XX RT[TS RS[SS RR[RS RQ[QS RPSP[ RLX ROZOS RNSNZ RMYMS RLYLS RKWKS RZSZUXYT[P[LYJUJSZS", "E_SSSK RTKTS RTKXN RUSUL RVLVS RWSWM RXMXS RYSYO RZSRSRK RPKTKXMZQZUXYT[P[LYJUJQLMPK", "E_QSQ[ RP[PS RP[LX ROSOZ RNZNS RMSMY RLYLS RKSKW RJSRSR[ RT[P[LYJUJQLMPKTKXMZQZUXYT[ RYWYO RXMXY RWYWM RVLVZ RUZUL RTKXN RTKT[ RXX RS[SK RRKTKXMZQZUXYT[R[RK", "E_KOKW RLYLM RMMMY RNZNL ROLOZ RP[LX RP[PK RLN RQKQ[ RR[P[LYJUJQLMPKRKR[", "E_YWYO RXMXY RWYWM RVLVZ RUZUL RTKXN RTKT[ RXX RS[SK RRKTKXMZQZUXYT[R[RK", "E_FDFb RGbGD RHDHb RIbID RJDJb RKbKD RLbLW RLDLO RMXMb RMNMD RNbNY RNDNM ROZOb ROLOD RPbPZ RPDPL RQZQb RQLQD RRbRZ RRDRL RSZSb RSLSD RTbTZ RTDTL RUZUb RULUD RVbVY RVDVM RWXWb RWNWD RXbXW RXDXO RYbYD RZDZb R[b[D R\\D\\b R]b]D R^D^b R_bEbED_D_b RKTKRLONMQLSLVMXOYRYTXWVYSZQZNYLWKT", "E_FRFD RGNIJ RGDGN RHLHD RIDIK RJJJD RJJMG RKDKI RLHLD RMHQF RMDMH RNGND ROPOS RODOG RPSPP RPGPD RQPQS RQDQG RRSRO RRGRD RSPSS RSFWH RSDSG RTSTP RTGTD RUPUS RUDUG RVGVD RWGZJ RWDWH RXHXD RYDYI RZJZD R[J]N R[D[K R\\L\\D R]D]N R^R^D ROQROUQ RNSOPROUPVSNS RFSFRGNIKJJMHQGSGWHZJ[K]N^R^S_S_DEDESFS R^T^b R]X[\\ R]b]X R\\Z\\b R[b[[ RZ\\Zb RZ\\W_ RYbY] RX^Xb RW^S` RWbW^ RV_Vb RUVUS RUbU_ RTSTV RT_Tb RSVSS RSbS_ RRSRW RR_Rb RQVQS RQ`M^ RQbQ_ RPSPV RP_Pb ROVOS RObO_ RN_Nb RM_J\\ RMbM^ RL^Lb RKbK] RJ\\Jb RI\\GX RIbI[ RHZHb RGbGX RFTFb RUURWOU RVSUVRWOVNSVS R^S^T]X[[Z\\W^S_Q_M^J\\I[GXFTFSESEb_b_S^S", "E_FRFD RGNIJ RGDGN RHLHD RIDIK RJJJD RJJMG RKDKI RLHLD RMHQF RMDMH RNGND ROPOS RODOG RPSPP RPGPD RQPQS RQDQG RRSRO RRGRD RSPSS RSFWH RSDSG RTSTP RTGTD RUPUS RUDUG RVGVD RWGZJ RWDWH RXHXD RYDYI RZJZD R[J]N R[D[K R\\L\\D R]D]N R^R^D ROQROUQ RNSOPROUPVSNS RFSFRGNIKJJMHQGSGWHZJ[K]N^R^S_S_DEDESFS", "E_^T^b R]X[\\ R]b]X R\\Z\\b R[b[[ RZ\\Zb RZ\\W_ RYbY] RX^Xb RW^S` RWbW^ RV_Vb RUVUS RUbU_ RTSTV RT_Tb RSVSS RSbS_ RRSRW RR_Rb RQVQS RQ`M^ RQbQ_ RPSPV RP_Pb ROVOS RObO_ RN_Nb RM_J\\ RMbM^ RL^Lb RKbK] RJ\\Jb RI\\GX RIbI[ RHZHb RGbGX RFTFb RUURWOU RVSUVRWOVNSVS R^S^T]X[[Z\\W^S_Q_M^J\\I[GXFTFSESEb_b_S^S", "E_JSJQLMPKRK", "E_ZSZQXMTKRK", "E_ZSZUXYT[R[", "E_JSJULYP[R[", "E_JSJQLMPKTKXMZQZS", "E_ZSZUXYT[P[LYJUJS", "E_KZK[ RLYL[ RMXM[ RNWN[ ROVO[ RPUP[ RQTQ[ RRSR[ RSRS[ RTQT[ RUPU[ RVOV[ RWNW[ RXMX[ RYLY[ RZ[ZKJ[Z[", "E_YZY[ RXYX[ RWXW[ RVWV[ RUVU[ RTUT[ RSTS[ RRSR[ RQRQ[ RPQP[ ROPO[ RNON[ RMNM[ RLML[ RKLK[ RJ[JKZ[J[", "E_YLYK RXMXK RWNWK RVOVK RUPUK RTQTK RSRSK RRSRK RQTQK RPUPK ROVOK RNWNK RMXMK RLYLK RKZKK RJKJ[ZKJK", "E_KLKK RLMLK RMNMK RNONK ROPOK RPQPK RQRQK RRSRK RSTSK RTUTK RUVUK RVWVK RWXWK RXYXK RYZYK RZKZ[JKZK", "E_PQRPTQUSTURVPUOSPQ", "E_JKZKZ[J[JK RK[KK RLKL[ RM[MK RNKN[ RO[OK RPKP[ RQ[QK RJ[JKRKR[J[", "E_JKZKZ[J[JK RYKY[ RX[XK RWKW[ RV[VK RUKU[ RT[TK RSKS[ RZKZ[R[RKZK", "E_JKZKZ[J[JK RYLYK RXMXK RWNWK RVOVK RUPUK RTQTK RSRSK RRSRK RQTQK RPUPK ROVOK RNWNK RMXMK RLYLK RKZKK RJKJ[ZKJK", "E_JKZKZ[J[JK RKZK[ RLYL[ RMXM[ RNWN[ ROVO[ RPUP[ RQTQ[ RRSR[ RSRS[ RTQT[ RUPU[ RVOV[ RWNW[ RXMX[ RYLY[ RZ[ZKJ[Z[", "E_JKZKZ[J[JK RR[RK", "E_RK[[I[RK RRUQVRWSVRURW", "E_J[RL RJZJ[ RKXK[ RLVL[ RMTM[ RNSN[ ROQO[ RPOP[ RQMQ[ RRKR[ RRK[[I[RK", "E_Z[RL RZZZ[ RYXY[ RXVX[ RWTW[ RVSV[ RUQU[ RTOT[ RSMS[ RRKR[ RRKI[[[RK", "C`OFTFXHZJ\\N\\SZWXYT[O[KYIWGSGNIJKHOF", "E_JKZKZ[J[JK RRKRSJS", "E_JKZKZ[J[JK RR[RSJS", "E_JKZKZ[J[JK RR[RSZS", "E_JKZKZ[J[JK RRKRSZS", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRKRSJS", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RR[RSJS", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RR[RSZS", "E_PKTKXMZQZUXYT[P[LYJUJQLMPK RRKRSZS", "E_JKJ[ZKJK", "E_ZKZ[JKZK", "E_J[JKZ[J[", "E_JKZKZ[J[JK", "E_KKK[ RL[LK RMKM[ RN[NK ROKO[ RP[PK RQKQ[ RR[RK RSKS[ RT[TK RUKU[ RV[VK RWKW[ RX[XK RYKY[ RJKZKZ[J[JK", "E_OVOPUPUVOV", "E_PPPV RQVQP RRPRV RSVSP RTPTV ROVOPUPUVOV", "E_Z[ZKJ[Z[",
/* // Miscellaneous Symbols (2600-26FF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Dingbats (2700-27BF) */

/* // Miscellaneous Mathematical Symbols A (27C0-27EF) */

/* // Supplemental Arrows A (27F0-27FF) */
"F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[", "F^K[KFYFY[K[",
/* // Braille Patterns (2800-28FF) */

/* // Supplemental Arrows B (2900-297F) */

/* // Miscellaneous Mathematical Symbols B (2980-29FF) */

/* // Supplemental Mathematical Operators (2A00-2AFF) */

/* // Miscellaneous Symbols and Arrows (2B00-2BFF) */


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * This program source code file is part of kicad-utils.
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(["<circle cx=\"", "\" cy=\"", "\" r=\"", "\" "], ["<circle cx=\"", "\" cy=\"", "\" r=\"", "\" "]),
    _templateObject2 = _taggedTemplateLiteral([" style=\"stroke: ", "; fill: none; stroke-width: ", "\"/>\n"], [" style=\"stroke: ", "; fill: none; stroke-width: ", "\"/>\\n"]),
    _templateObject3 = _taggedTemplateLiteral([" style=\"stroke: ", "; fill: ", "; stroke-width: ", "\" />\n"], [" style=\"stroke: ", "; fill: ", "; stroke-width: ", "\" />\\n"]),
    _templateObject4 = _taggedTemplateLiteral(["<path d=\"M", " ", " A", " ", " 0.0 ", " ", " ", " ", "\""], ["<path d=\"M", " ", " A", " ", " 0.0 ", " ", " ", " ", "\""]),
    _templateObject5 = _taggedTemplateLiteral([" style=\"stroke: ", "; fill: none; stroke-width: ", "\" />\n"], [" style=\"stroke: ", "; fill: none; stroke-width: ", "\" />\\n"]),
    _templateObject6 = _taggedTemplateLiteral(["<!-- draw text ", " -->"], ["<!-- draw text ", " -->"]),
    _templateObject7 = _taggedTemplateLiteral(["\" style=\"stroke: ", "; fill: none; stroke-width: ", "\" />\n"], ["\" style=\"stroke: ", "; fill: none; stroke-width: ", "\" />\\n"]),
    _templateObject8 = _taggedTemplateLiteral(["\" style=\"stroke: ", "; fill: ", "; stroke-width: ", "\" />\n"], ["\" style=\"stroke: ", "; fill: ", "; stroke-width: ", "\" />\\n"]),
    _templateObject9 = _taggedTemplateLiteral(["<path d=\"M", " ", "\n"], ["<path d=\"M", " ", "\\n"]),
    _templateObject10 = _taggedTemplateLiteral(["M", " ", "\n"], ["M", " ", "\\n"]),
    _templateObject11 = _taggedTemplateLiteral(["L", " ", "\n"], ["L", " ", "\\n"]),
    _templateObject12 = _taggedTemplateLiteral(["<image\n\t\t\txlink:href=\"", "\"\n\t\t\tx=\"", "\"\n\t\t\ty=\"", "\"\n\t\t\twidth=\"", "\"\n\t\t\theight=\"", "\"\n\t\t\t/>"], ["<image\n\t\t\txlink:href=\"", "\"\n\t\t\tx=\"", "\"\n\t\t\ty=\"", "\"\n\t\t\twidth=\"", "\"\n\t\t\theight=\"", "\"\n\t\t\t/>"]),
    _templateObject13 = _taggedTemplateLiteral(["<svg preserveAspectRatio=\"xMinYMin\"\n\t\t\twidth=\"", "\"\n\t\t\theight=\"", "\"\n\t\t\tviewBox=\"0 0 ", " ", "\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\t\t\tversion=\"1.1\">"], ["<svg preserveAspectRatio=\"xMinYMin\"\n\t\t\twidth=\"", "\"\n\t\t\theight=\"", "\"\n\t\t\tviewBox=\"0 0 ", " ", "\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\t\t\tversion=\"1.1\">"]),
    _templateObject14 = _taggedTemplateLiteral(["<g stroke-linejoin=\"round\" stroke-linecap=\"round\">"], ["<g stroke-linejoin=\"round\" stroke-linecap=\"round\">"]),
    _templateObject15 = _taggedTemplateLiteral(["</g>"], ["</g>"]);

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var kicad_common_1 = __webpack_require__(31);
var kicad_strokefont_1 = __webpack_require__(118);
var DEFAULT_LINE_WIDTH = 6;
/**
 * similar to KiCAD Plotter
 *
 */

var Plotter = function () {
    function Plotter() {
        _classCallCheck(this, Plotter);

        this.stateHistory = [];
        this.errors = [];
        this.pageInfo = kicad_common_1.PageInfo.A3;
        this.fill = kicad_common_1.Fill.NO_FILL;
        this.color = kicad_common_1.Color.BLACK;
        this.transform = kicad_common_1.Transform.identify();
        this.font = kicad_strokefont_1.StrokeFont.instance;
    }

    _createClass(Plotter, [{
        key: "setFill",
        value: function setFill(fill) {
            this.fill = fill;
        }
    }, {
        key: "startPlot",
        value: function startPlot() {}
    }, {
        key: "endPlot",
        value: function endPlot() {}
    }, {
        key: "rect",
        value: function rect(p1, p2, fill, width) {
            this.setCurrentLineWidth(width);
            this.setFill(fill);
            this.moveTo(p1.x, p1.y);
            this.lineTo(p1.x, p2.y);
            this.lineTo(p2.x, p2.y);
            this.lineTo(p2.x, p1.y);
            this.finishTo(p1.x, p1.y);
        }
    }, {
        key: "polyline",
        value: function polyline(points, fill, width) {
            this.setCurrentLineWidth(width);
            this.setFill(fill);
            this.moveTo(points[0]);
            for (var i = 1, len = points.length; i < len; i++) {
                this.lineTo(points[i]);
            }
            this.finishPen();
        }
    }, {
        key: "text",
        value: function text(p, color, _text, orientation, size, hjustfy, vjustify, width, italic, bold, multiline) {
            this.setColor(color);
            this.setFill(kicad_common_1.Fill.NO_FILL);
            this.font.drawText(this, p, _text, size, width, orientation, hjustfy, vjustify, italic, bold);
        }
    }, {
        key: "save",
        value: function save() {
            this.stateHistory.push({
                fill: this.fill,
                color: this.color,
                transform: this.transform.clone()
            });
        }
    }, {
        key: "translate",
        value: function translate(tx, ty) {
            this.transform = this.transform.translate(tx, ty);
        }
    }, {
        key: "scale",
        value: function scale(sx, sy) {
            this.transform = this.transform.scale(sx, sy);
        }
    }, {
        key: "rotate",
        value: function rotate(radian) {
            this.transform = this.transform.rotate(radian);
        }
    }, {
        key: "restore",
        value: function restore() {
            var state = this.stateHistory.pop();
            Object.assign(this, state);
        }
    }, {
        key: "setColor",
        value: function setColor(c) {
            this.color = c;
        }
    }, {
        key: "moveTo",
        value: function moveTo(x, y) {
            if (typeof y === 'number') {
                this.penTo({ x: x, y: y }, "U");
            } else {
                this.penTo(x, "U");
            }
        }
    }, {
        key: "lineTo",
        value: function lineTo(x, y) {
            if (typeof y === 'number') {
                this.penTo({ x: x, y: y }, "D");
            } else {
                this.penTo(x, "D");
            }
        }
    }, {
        key: "finishTo",
        value: function finishTo(x, y) {
            if (typeof y === 'number') {
                this.penTo({ x: x, y: y }, "D");
                this.penTo({ x: x, y: y }, "Z");
            } else {
                this.penTo(x, "D");
                this.penTo(x, "Z");
            }
        }
    }, {
        key: "finishPen",
        value: function finishPen() {
            this.penTo({ x: 0, y: 0 }, "Z");
        }
    }, {
        key: "plotPageInfo",
        value: function plotPageInfo(page) {
            var MARGIN = kicad_common_1.MM2MIL(10);
            this.rect({ x: MARGIN, y: MARGIN }, { x: page.width - MARGIN, y: page.height - MARGIN }, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
            var OFFSET = kicad_common_1.MM2MIL(2);
            this.rect({ x: MARGIN + OFFSET, y: MARGIN + OFFSET }, { x: page.width - MARGIN - OFFSET, y: page.height - MARGIN - OFFSET }, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
            // up
            this.moveTo(page.width / 2, MARGIN);
            this.finishTo(page.width / 2, MARGIN + OFFSET);
            // bottom
            this.moveTo(page.width / 2, page.height - MARGIN - OFFSET);
            this.finishTo(page.width / 2, page.height - MARGIN);
            // left
            this.moveTo(MARGIN, page.height / 2);
            this.finishTo(MARGIN + OFFSET, page.height / 2);
            // right
            this.moveTo(page.width - MARGIN - OFFSET, page.height / 2);
            this.finishTo(page.width - MARGIN, page.height / 2);
        }
    }]);

    return Plotter;
}();

exports.Plotter = Plotter;

var CanvasPlotter = function (_Plotter) {
    _inherits(CanvasPlotter, _Plotter);

    function CanvasPlotter(ctx) {
        _classCallCheck(this, CanvasPlotter);

        var _this = _possibleConstructorReturn(this, (CanvasPlotter.__proto__ || Object.getPrototypeOf(CanvasPlotter)).call(this));

        _this.ctx = ctx;
        _this.penState = "Z";
        _this.setFill(kicad_common_1.Fill.NO_FILL);
        _this.ctx.lineCap = "round";
        _this.ctx.lineJoin = 'round';
        _this.ctx.strokeStyle = "#000";
        return _this;
    }

    _createClass(CanvasPlotter, [{
        key: "circle",
        value: function circle(p, dia, fill, width) {
            p = this.transform.transformCoordinate(p);
            this.setCurrentLineWidth(width);
            this.setFill(fill);
            this.ctx.beginPath();
            this.ctx.arc(p.x, p.y, dia / 2, 0, Math.PI * 2, false);
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                this.ctx.fill();
            } else {
                this.ctx.stroke();
            }
        }
    }, {
        key: "arc",
        value: function arc(p, startAngle, endAngle, radius, fill, width) {
            p = this.transform.transformCoordinate(p);
            this.setCurrentLineWidth(width);
            this.setFill(fill);
            this.ctx.beginPath();
            var anticlockwise = false;
            this.ctx.arc(p.x, p.y, radius, startAngle / 10 * Math.PI / 180, endAngle / 10 * Math.PI / 180, anticlockwise);
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                this.ctx.fill();
            } else {
                this.ctx.stroke();
            }
        }
        /*
        text(
            p: Point,
            color: Color,
            text: string,
            orientation: number,
            size: number,
            hjustfy: TextHjustify,
            vjustify: TextVjustify,
            width: number,
            italic: boolean,
            bold: boolean,
            multiline?: boolean,
        ): void {
            p = this.transform.transformCoordinate(p);
            this.setColor(color);
            if (hjustfy === TextHjustify.LEFT) {
                this.ctx.textAlign = "left";
            } else
            if (hjustfy === TextHjustify.CENTER) {
                this.ctx.textAlign = "center";
            } else
            if (hjustfy === TextHjustify.RIGHT) {
                this.ctx.textAlign = "right";
            }
            if (vjustify === TextVjustify.TOP) {
                this.ctx.textBaseline = "top";
            } else
            if (vjustify === TextVjustify.CENTER) {
                this.ctx.textBaseline = "middle";
            } else
            if (vjustify === TextVjustify.BOTTOM) {
                this.ctx.textBaseline = "bottom";
            }
            this.ctx.fillStyle = this.color.toCSSColor();
            this.ctx.save();
            this.ctx.translate(p.x, p.y);
            this.ctx.rotate(-DECIDEG2RAD(orientation));
            this.ctx.font = (italic ? "italic " : "") + (bold ? "bold " : "") + size + "px monospace";
            // console.log('fillText', text, p.x, p.y, hjustfy, vjustify);
            this.ctx.fillText(text, 0, 0);
            this.ctx.restore();
        } */
        /**
         * U = Pen is up
         * D = Pen is down
         * Z = Pen is outof canvas
         */

    }, {
        key: "penTo",
        value: function penTo(p, s) {
            p = this.transform.transformCoordinate(p);
            if (s === "Z") {
                if (this.fill === kicad_common_1.Fill.FILLED_SHAPE) {
                    // console.log('ctx.fill', p);
                    this.ctx.fill();
                } else {
                    // console.log('ctx.stroke', p);
                    this.ctx.stroke();
                }
                this.penState = "Z";
                return;
            }
            // s is U | D
            if (this.penState === "Z") {
                this.ctx.beginPath();
                // console.log('ctx.beginPath');
                // console.log('ctx.moveTo', p);
                this.ctx.moveTo(p.x, p.y);
            } else {
                if (s === "U") {
                    // console.log('ctx.moveTo', p);
                    this.ctx.moveTo(p.x, p.y);
                } else {
                    // console.log('ctx.lineTo', p);
                    this.ctx.lineTo(p.x, p.y);
                }
            }
            this.penState = s;
        }
    }, {
        key: "setColor",
        value: function setColor(c) {
            _get(CanvasPlotter.prototype.__proto__ || Object.getPrototypeOf(CanvasPlotter.prototype), "setColor", this).call(this, c);
            this.ctx.fillStyle = c.toCSSColor();
            this.ctx.strokeStyle = c.toCSSColor();
        }
    }, {
        key: "setCurrentLineWidth",
        value: function setCurrentLineWidth(w) {
            this.ctx.lineWidth = w;
        }
    }, {
        key: "getCurrentLineWidth",
        value: function getCurrentLineWidth() {
            return this.ctx.lineWidth;
        }
    }, {
        key: "image",
        value: function image(p, scale, originalWidth, originalHeight, data) {
            p = this.transform.transformCoordinate(p);
            var start = kicad_common_1.Point.sub(p, { x: originalWidth / 2, y: originalHeight / 2 });
            var end = kicad_common_1.Point.add(p, { x: originalWidth / 2, y: originalHeight / 2 });
            this.rect(start, end, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
        }
    }]);

    return CanvasPlotter;
}(Plotter);

exports.CanvasPlotter = CanvasPlotter;

var SVGPlotter = function (_Plotter2) {
    _inherits(SVGPlotter, _Plotter2);

    function SVGPlotter() {
        _classCallCheck(this, SVGPlotter);

        var _this2 = _possibleConstructorReturn(this, (SVGPlotter.__proto__ || Object.getPrototypeOf(SVGPlotter)).call(this));

        _this2.penState = "Z";
        _this2.output = "";
        _this2.lineWidth = DEFAULT_LINE_WIDTH;
        _this2.color = kicad_common_1.Color.BLACK;
        return _this2;
    }

    _createClass(SVGPlotter, [{
        key: "circle",
        value: function circle(p, dia, fill, width) {
            this.setCurrentLineWidth(width);
            this.setFill(fill);
            p = this.transform.transformCoordinate(p);
            dia = this.transform.transformScalar(dia);
            var lineWidth = this.transform.transformScalar(this.lineWidth);
            this.output += this.xmlTag(_templateObject, p.x, p.y, dia / 2);
            if (this.fill === kicad_common_1.Fill.NO_FILL) {
                this.output += this.xmlTag(_templateObject2, this.color.toCSSColor(), lineWidth);
            } else {
                this.output += this.xmlTag(_templateObject3, this.color.toCSSColor(), this.color.toCSSColor(), lineWidth);
            }
        }
    }, {
        key: "arc",
        value: function arc(p, startAngle, endAngle, radius, fill, width) {
            if (radius <= 0) return;
            if (startAngle > endAngle) {
                var _ref = [endAngle, startAngle];
                startAngle = _ref[0];
                endAngle = _ref[1];
            }
            this.setCurrentLineWidth(width);
            this.setFill(fill);
            p = this.transform.transformCoordinate(p);
            var _ref2 = [-endAngle, -startAngle];
            startAngle = _ref2[0];
            endAngle = _ref2[1];

            var start = new kicad_common_1.Point(radius, 0);
            kicad_common_1.RotatePoint(start, startAngle);
            var end = new kicad_common_1.Point(radius, 0);
            kicad_common_1.RotatePoint(end, endAngle);
            start = kicad_common_1.Point.add(start, p);
            end = kicad_common_1.Point.add(end, p);
            var theta1 = kicad_common_1.DECIDEG2RAD(startAngle);
            if (theta1 < 0) theta1 += Math.PI * 2;
            var theta2 = kicad_common_1.DECIDEG2RAD(endAngle);
            if (theta2 < 0) theta2 += Math.PI * 2;
            if (theta2 < theta1) theta2 += Math.PI * 2;
            var isLargeArc = Math.abs(theta2 - theta1) > Math.PI;
            var isSweep = false;
            // console.log('ARC', startAngle, endAngle, radius, start, end, radius, isLargeArc, isSweep);
            radius = this.transform.transformScalar(radius);
            var lineWidth = this.transform.transformScalar(this.lineWidth);
            var x = this.xmlTag;
            this.output += this.xmlTag(_templateObject4, start.x, start.y, radius, radius, isLargeArc ? 1 : 0, isSweep ? 1 : 0, end.x, end.y);
            if (this.fill === kicad_common_1.Fill.NO_FILL) {
                this.output += this.xmlTag(_templateObject5, this.color.toCSSColor(), lineWidth);
            } else {
                this.output += this.xmlTag(_templateObject3, this.color.toCSSColor(), this.color.toCSSColor(), lineWidth);
            }
        }
    }, {
        key: "text",
        value: function text(p, color, _text2, orientation, size, hjustfy, vjustify, width, italic, bold, multiline) {
            this.output += this.xmlTag(_templateObject6, _text2);
            _get(SVGPlotter.prototype.__proto__ || Object.getPrototypeOf(SVGPlotter.prototype), "text", this).call(this, p, color, _text2, orientation, size, hjustfy, vjustify, width, italic, bold, multiline);
        }
        /*
        text(
            p: Point,
            color: Color,
            text: string,
            orientation: number,
            size: number,
            hjustfy: TextHjustify,
            vjustify: TextVjustify,
            width: number,
            italic: boolean,
            bold: boolean,
            multiline?: boolean,
        ): void {
            this.setColor(color);
            p = this.transform.transformCoordinate(p);
             let textAnchor;
            if (hjustfy === TextHjustify.LEFT) {
                textAnchor = "start";
            } else
            if (hjustfy === TextHjustify.CENTER) {
                textAnchor = "middle";
            } else
            if (hjustfy === TextHjustify.RIGHT) {
                textAnchor = "end";
            }
            let dominantBaseline;
            if (vjustify === TextVjustify.TOP) {
                dominantBaseline = "text-before-edge";
            } else
            if (vjustify === TextVjustify.CENTER) {
                dominantBaseline = "middle";
            } else
            if (vjustify === TextVjustify.BOTTOM) {
                dominantBaseline = "text-after-edge";
            }
             const fontWeight = bold ? "bold" : "normal";
            const fontStyle = italic ? "italic" : "normal";
             const rotate = -orientation / 10;
            const x = this.xmlTag;
            const lines = text.split(/\n/);
            for (var i = 0, len = lines.length; i < len; i++) {
                const y = p.y + (i * size * 1.2);
                this.output += this.xmlTag `<text x="${p.x}" y="${y}"
                    text-anchor="${textAnchor}"
                    dominant-baseline="${dominantBaseline}"
                    font-family="${SVGPlotter.font.family}"
                    font-size="${size}"
                    font-weight="${fontWeight}"
                    font-style="${fontStyle}"
                    stroke="none"
                    fill="${this.color.toCSSColor()}"
                    transform="rotate(${rotate}, ${p.x}, ${p.y})">${lines[i]}</text>`;
            }
        } */
        /**
         * U = Pen is up
         * D = Pen is down
         * Z = Pen is outof canvas
         */

    }, {
        key: "penTo",
        value: function penTo(p, s) {
            var x = this.xmlTag;
            p = this.transform.transformCoordinate(p);
            var lineWidth = this.transform.transformScalar(this.lineWidth);
            if (s === "Z") {
                if (this.penState !== "Z") {
                    if (this.fill === kicad_common_1.Fill.NO_FILL) {
                        this.output += this.xmlTag(_templateObject7, this.color.toCSSColor(), lineWidth);
                    } else {
                        this.output += this.xmlTag(_templateObject8, this.color.toCSSColor(), this.color.toCSSColor(), lineWidth);
                    }
                } else {
                    throw "invalid pen state Z -> Z";
                }
                this.penState = "Z";
                return;
            }
            // s is U | D
            if (this.penState === "Z") {
                this.output += this.xmlTag(_templateObject9, p.x, p.y);
            } else {
                if (s === "U") {
                    this.output += this.xmlTag(_templateObject10, p.x, p.y);
                } else {
                    this.output += this.xmlTag(_templateObject11, p.x, p.y);
                }
            }
            this.penState = s;
        }
    }, {
        key: "setCurrentLineWidth",
        value: function setCurrentLineWidth(w) {
            this.lineWidth = w;
        }
    }, {
        key: "getCurrentLineWidth",
        value: function getCurrentLineWidth() {
            return this.lineWidth;
        }
    }, {
        key: "image",
        value: function image(p, scale, originalWidth, originalHeight, data) {
            p = this.transform.transformCoordinate(p);
            var width = originalWidth * scale;
            var height = originalHeight * scale;
            var start = kicad_common_1.Point.sub(p, { x: width / 2, y: height / 2 });
            var url = 'data:image/png,' + data.reduce(function (r, i) {
                return r + '%' + (0x100 + i).toString(16).slice(1);
            }, "");
            console.log(url);
            /*
            this.rect(start, end, Fill.NO_FILL, DEFAULT_LINE_WIDTH);
            */
            this.output += this.xmlTag(_templateObject12, url, start.x, start.y, this.transform.transformScalar(width), this.transform.transformScalar(height));
        }
    }, {
        key: "startPlot",
        value: function startPlot() {
            var width = this.pageInfo.width;
            var height = this.pageInfo.height;
            this.output = this.xmlTag(_templateObject13, this.transform.transformScalar(width), this.transform.transformScalar(height), width, height);
            this.output += this.xmlTag(_templateObject14);
        }
    }, {
        key: "endPlot",
        value: function endPlot() {
            this.output += this.xmlTag(_templateObject15);
            this.output += "</svg>";
        }
    }, {
        key: "xmlTag",
        value: function xmlTag(literals) {
            var result = "";

            for (var _len = arguments.length, placeholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                placeholders[_key - 1] = arguments[_key];
            }

            for (var i = 0; i < placeholders.length; i++) {
                result += literals[i];
                var placeholder = placeholders[i];
                //			if (typeof placeholder === 'number') {
                //				placeholder = placeholder.toFixed(4);
                //			}
                result += this.xmlentities(placeholder);
            }
            result += literals[literals.length - 1];
            return result;
        }
    }, {
        key: "xmlentities",
        value: function xmlentities(s) {
            if (typeof s === "number") return String(s);
            var map = {
                '<': '&lt;',
                '>': '&gt;',
                '&': '&amp;',
                '"': '&x22;',
                "'": '&x27;'
            };
            return String(s).replace(/[<>&]/g, function (_) {
                return map[_];
            });
        }
    }]);

    return SVGPlotter;
}(Plotter);

SVGPlotter.font = {
    family: '"Lucida Console", Monaco, monospace',
    widthRatio: 0.60009765625
};
exports.SVGPlotter = SVGPlotter;

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * This program source code file is part of kicad-utils.
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _kicad_common_1$Net$I, _kicad_common_1$Net$O, _kicad_common_1$Net$U, _kicad_common_1$Net$B, _kicad_common_1$Net$T, _TEMPLATE_SHAPES;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

Object.defineProperty(exports, "__esModule", { value: true });
var kicad_common_1 = __webpack_require__(31);
var kicad_lib_1 = __webpack_require__(115);
var kicad_sch_1 = __webpack_require__(116);
var TXT_MARGIN = 4;
var PIN_TXT_MARGIN = 4;
var DEFAULT_LINE_WIDTH = 6;
var DEFAULT_LINE_WIDTH_BUS = 12;
var DEFAULT_SIZE_TEXT = 60;
var SCH_COLORS = {
    LAYER_WIRE: kicad_common_1.Color.GREEN,
    LAYER_BUS: kicad_common_1.Color.BLUE,
    LAYER_JUNCTION: kicad_common_1.Color.GREEN,
    LAYER_LOCLABEL: kicad_common_1.Color.BLACK,
    LAYER_HIERLABEL: kicad_common_1.Color.BROWN,
    LAYER_GLOBLABEL: kicad_common_1.Color.RED,
    LAYER_PINNUM: kicad_common_1.Color.RED,
    LAYER_PINNAM: kicad_common_1.Color.CYAN,
    LAYER_FIELDS: kicad_common_1.Color.MAGENTA,
    LAYER_REFERENCEPART: kicad_common_1.Color.CYAN,
    LAYER_VALUEPART: kicad_common_1.Color.CYAN,
    LAYER_NOTES: kicad_common_1.Color.LIGHTBLUE,
    LAYER_DEVICE: kicad_common_1.Color.RED,
    LAYER_DEVICE_BACKGROUND: kicad_common_1.Color.LIGHTYELLOW,
    LAYER_NETNAM: kicad_common_1.Color.DARKGRAY,
    LAYER_PIN: kicad_common_1.Color.RED,
    LAYER_SHEET: kicad_common_1.Color.MAGENTA,
    LAYER_SHEETFILENAME: kicad_common_1.Color.BROWN,
    LAYER_SHEETNAME: kicad_common_1.Color.CYAN,
    LAYER_SHEETLABEL: kicad_common_1.Color.BROWN,
    LAYER_NOCONNECT: kicad_common_1.Color.BLUE,
    LAYER_ERC_WARN: kicad_common_1.Color.GREEN,
    LAYER_ERC_ERR: kicad_common_1.Color.RED,
    LAYER_SCHEMATIC_GRID: kicad_common_1.Color.DARKGRAY,
    LAYER_SCHEMATIC_BACKGROUND: kicad_common_1.Color.WHITE,
    LAYER_BRIGHTENED: kicad_common_1.Color.PUREMAGENTA
};
var TEMPLATE_SHAPES = (_TEMPLATE_SHAPES = {}, _defineProperty(_TEMPLATE_SHAPES, kicad_common_1.Net.INPUT, (_kicad_common_1$Net$I = {}, _defineProperty(_kicad_common_1$Net$I, kicad_sch_1.TextOrientationType.HORIZ_LEFT, [6, 0, 0, -1, -1, -2, -1, -2, 1, -1, 1, 0, 0]), _defineProperty(_kicad_common_1$Net$I, kicad_sch_1.TextOrientationType.UP, [6, 0, 0, 1, -1, 1, -2, -1, -2, -1, -1, 0, 0]), _defineProperty(_kicad_common_1$Net$I, kicad_sch_1.TextOrientationType.HORIZ_RIGHT, [6, 0, 0, 1, 1, 2, 1, 2, -1, 1, -1, 0, 0]), _defineProperty(_kicad_common_1$Net$I, kicad_sch_1.TextOrientationType.BOTTOM, [6, 0, 0, 1, 1, 1, 2, -1, 2, -1, 1, 0, 0]), _kicad_common_1$Net$I)), _defineProperty(_TEMPLATE_SHAPES, kicad_common_1.Net.OUTPUT, (_kicad_common_1$Net$O = {}, _defineProperty(_kicad_common_1$Net$O, kicad_sch_1.TextOrientationType.HORIZ_LEFT, [6, -2, 0, -1, 1, 0, 1, 0, -1, -1, -1, -2, 0]), _defineProperty(_kicad_common_1$Net$O, kicad_sch_1.TextOrientationType.HORIZ_RIGHT, [6, 2, 0, 1, -1, 0, -1, 0, 1, 1, 1, 2, 0]), _defineProperty(_kicad_common_1$Net$O, kicad_sch_1.TextOrientationType.UP, [6, 0, -2, 1, -1, 1, 0, -1, 0, -1, -1, 0, -2]), _defineProperty(_kicad_common_1$Net$O, kicad_sch_1.TextOrientationType.BOTTOM, [6, 0, 2, 1, 1, 1, 0, -1, 0, -1, 1, 0, 2]), _kicad_common_1$Net$O)), _defineProperty(_TEMPLATE_SHAPES, kicad_common_1.Net.UNSPECIFIED, (_kicad_common_1$Net$U = {}, _defineProperty(_kicad_common_1$Net$U, kicad_sch_1.TextOrientationType.HORIZ_LEFT, [5, 0, -1, -2, -1, -2, 1, 0, 1, 0, -1]), _defineProperty(_kicad_common_1$Net$U, kicad_sch_1.TextOrientationType.HORIZ_RIGHT, [5, 0, -1, 2, -1, 2, 1, 0, 1, 0, -1]), _defineProperty(_kicad_common_1$Net$U, kicad_sch_1.TextOrientationType.UP, [5, 1, 0, 1, -2, -1, -2, -1, 0, 1, 0]), _defineProperty(_kicad_common_1$Net$U, kicad_sch_1.TextOrientationType.BOTTOM, [5, 1, 0, 1, 2, -1, 2, -1, 0, 1, 0]), _kicad_common_1$Net$U)), _defineProperty(_TEMPLATE_SHAPES, kicad_common_1.Net.BIDI, (_kicad_common_1$Net$B = {}, _defineProperty(_kicad_common_1$Net$B, kicad_sch_1.TextOrientationType.HORIZ_LEFT, [5, 0, 0, -1, -1, -2, 0, -1, 1, 0, 0]), _defineProperty(_kicad_common_1$Net$B, kicad_sch_1.TextOrientationType.HORIZ_RIGHT, [5, 0, 0, 1, -1, 2, 0, 1, 1, 0, 0]), _defineProperty(_kicad_common_1$Net$B, kicad_sch_1.TextOrientationType.UP, [5, 0, 0, -1, -1, 0, -2, 1, -1, 0, 0]), _defineProperty(_kicad_common_1$Net$B, kicad_sch_1.TextOrientationType.BOTTOM, [5, 0, 0, -1, 1, 0, 2, 1, 1, 0, 0]), _kicad_common_1$Net$B)), _defineProperty(_TEMPLATE_SHAPES, kicad_common_1.Net.TRISTATE, (_kicad_common_1$Net$T = {}, _defineProperty(_kicad_common_1$Net$T, kicad_sch_1.TextOrientationType.HORIZ_LEFT, [5, 0, 0, -1, -1, -2, 0, -1, 1, 0, 0]), _defineProperty(_kicad_common_1$Net$T, kicad_sch_1.TextOrientationType.HORIZ_RIGHT, [5, 0, 0, 1, -1, 2, 0, 1, 1, 0, 0]), _defineProperty(_kicad_common_1$Net$T, kicad_sch_1.TextOrientationType.UP, [5, 0, 0, -1, -1, 0, -2, 1, -1, 0, 0]), _defineProperty(_kicad_common_1$Net$T, kicad_sch_1.TextOrientationType.BOTTOM, [5, 0, 0, -1, 1, 0, 2, 1, 1, 0, 0]), _kicad_common_1$Net$T)), _TEMPLATE_SHAPES);

var SchPlotter = function () {
    function SchPlotter(plotter) {
        _classCallCheck(this, SchPlotter);

        this.plotter = plotter;
        this.errors = [];
    }
    /**
     * kicad-js implements plot methods to plotter instead of each library items for simplify parsing dependencies.
     */


    _createClass(SchPlotter, [{
        key: "plotLibComponent",
        value: function plotLibComponent(component, unit, convert, transform) {
            this.plotter.setColor(SCH_COLORS.LAYER_DEVICE);
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = component.draw.objects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var draw = _step.value;

                    if (draw.unit !== 0 && unit !== draw.unit) {
                        continue;
                    }
                    ;
                    if (draw.convert !== 0 && convert !== draw.convert) {
                        continue;
                    }
                    if (draw instanceof kicad_lib_1.DrawArc) {
                        this.plotDrawArc(draw, component, transform);
                    } else if (draw instanceof kicad_lib_1.DrawCircle) {
                        this.plotDrawCircle(draw, component, transform);
                    } else if (draw instanceof kicad_lib_1.DrawPolyline) {
                        this.plotDrawPolyline(draw, component, transform);
                    } else if (draw instanceof kicad_lib_1.DrawSquare) {
                        this.plotDrawSquare(draw, component, transform);
                    } else if (draw instanceof kicad_lib_1.DrawText) {
                        this.plotDrawText(draw, component, transform);
                    } else if (draw instanceof kicad_lib_1.DrawPin) {
                        this.plotDrawPin(draw, component, transform);
                    } else {
                        throw 'unknown draw object type: ' + draw.constructor.name;
                    }
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        }
    }, {
        key: "plotLibComponentField",
        value: function plotLibComponentField(component, unit, convert, transform) {
            if (component.field && component.field.visibility) {
                var pos = transform.transformCoordinate(component.field.pos);
                var orientation = component.field.textOrientation;
                if (transform.y1) {
                    if (orientation === kicad_common_1.TextAngle.HORIZ) {
                        orientation = kicad_common_1.TextAngle.VERT;
                    } else {
                        orientation = kicad_common_1.TextAngle.HORIZ;
                    }
                }
                var text = component.field.reference;
                var width = 0; //this.plotter.font.computeTextLineSize(text, component.field.textSize, DEFAULT_LINE_WIDTH);
                var height = 0; //this.plotter.font.getInterline(component.field.textSize, DEFAULT_LINE_WIDTH);
                this.plotter.text(kicad_common_1.Point.add({ x: width / 2, y: height / 2 }, pos), SCH_COLORS.LAYER_REFERENCEPART, text, orientation, component.field.textSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.CENTER, DEFAULT_LINE_WIDTH, component.field.italic, component.field.bold);
            }
            if (component.fields[0] && component.fields[0].visibility) {
                var _pos = transform.transformCoordinate(component.fields[0].pos);
                var _orientation = component.fields[0].textOrientation;
                if (transform.y1) {
                    if (_orientation === kicad_common_1.TextAngle.HORIZ) {
                        _orientation = kicad_common_1.TextAngle.VERT;
                    } else {
                        _orientation = kicad_common_1.TextAngle.HORIZ;
                    }
                }
                var _text = component.fields[0].name;
                var _width = 0; // this.plotter.font.computeTextLineSize(text, component.fields[0].textSize, DEFAULT_LINE_WIDTH);
                var _height = 0; // this.plotter.font.getInterline(component.fields[0].textSize, DEFAULT_LINE_WIDTH);
                this.plotter.text(kicad_common_1.Point.add({ x: _width / 2, y: _height / 2 }, _pos), SCH_COLORS.LAYER_VALUEPART, _text, _orientation, component.fields[0].textSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.CENTER, DEFAULT_LINE_WIDTH, component.fields[0].italic, component.fields[0].bold);
            }
        }
    }, {
        key: "plotDrawArc",
        value: function plotDrawArc(draw, component, transform) {
            var pos = transform.transformCoordinate(draw.pos);

            var _transform$mapAngles = transform.mapAngles(draw.startAngle, draw.endAngle),
                _transform$mapAngles2 = _slicedToArray(_transform$mapAngles, 2),
                startAngle = _transform$mapAngles2[0],
                endAngle = _transform$mapAngles2[1];

            this.plotter.arc(pos, startAngle, endAngle, draw.radius, draw.fill, draw.lineWidth || DEFAULT_LINE_WIDTH);
        }
    }, {
        key: "plotDrawCircle",
        value: function plotDrawCircle(draw, component, transform) {
            var pos = transform.transformCoordinate(draw.pos);
            this.plotter.circle(pos, draw.radius * 2, draw.fill, draw.lineWidth || DEFAULT_LINE_WIDTH);
        }
    }, {
        key: "plotDrawPolyline",
        value: function plotDrawPolyline(draw, component, transform) {
            var points = draw.points.map(function (point) {
                return transform.transformCoordinate(point);
            });
            this.plotter.polyline(points, draw.fill, draw.lineWidth || DEFAULT_LINE_WIDTH);
        }
    }, {
        key: "plotDrawSquare",
        value: function plotDrawSquare(draw, component, transform) {
            var pos1 = transform.transformCoordinate(draw.start);
            var pos2 = transform.transformCoordinate(draw.end);
            this.plotter.rect(pos1, pos2, draw.fill, draw.lineWidth || DEFAULT_LINE_WIDTH);
        }
    }, {
        key: "plotDrawText",
        value: function plotDrawText(draw, component, transform) {
            var pos = transform.transformCoordinate(draw.pos);
            this.plotter.text(pos, this.plotter.color, draw.text, component.field.textOrientation, draw.textSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.CENTER, DEFAULT_LINE_WIDTH, draw.italic, draw.bold);
        }
    }, {
        key: "plotDrawPin",
        value: function plotDrawPin(draw, component, transform) {
            if (!draw.visibility) return;
            this.plotDrawPinTexts(draw, component, transform);
            this.plotDrawPinSymbol(draw, component, transform);
        }
    }, {
        key: "plotDrawPinTexts",
        value: function plotDrawPinTexts(draw, component, transform) {
            var drawPinname = component.drawPinname;
            var drawPinnumber = component.drawPinnumber;
            if (draw.name === "" || draw.name === "~") {
                drawPinname = false;
            }
            if (draw.num === "") {
                drawPinnumber = false;
            }
            if (!drawPinname && !drawPinnumber) return;
            var pos = transform.transformCoordinate(draw.pos);
            var orientation = this.pinDrawOrientation(draw, transform);
            var x1 = pos.x,
                y1 = pos.y;
            if (orientation === kicad_common_1.PinOrientation.UP) {
                y1 -= draw.length;
            } else if (orientation === kicad_common_1.PinOrientation.DOWN) {
                y1 += draw.length;
            } else if (orientation === kicad_common_1.PinOrientation.LEFT) {
                x1 -= draw.length;
            } else if (orientation === kicad_common_1.PinOrientation.RIGHT) {
                x1 += draw.length;
            }
            var nameLineWidth = this.plotter.font.clampTextPenSize(DEFAULT_LINE_WIDTH, draw.nameTextSize, false);
            var numLineWidth = this.plotter.font.clampTextPenSize(DEFAULT_LINE_WIDTH, draw.numTextSize, false);
            var nameOffset = PIN_TXT_MARGIN + (nameLineWidth + DEFAULT_LINE_WIDTH) / 2;
            var numOffset = PIN_TXT_MARGIN + (numLineWidth + DEFAULT_LINE_WIDTH) / 2;
            var textInside = component.textOffset;
            var isHorizontal = orientation === kicad_common_1.PinOrientation.LEFT || orientation === kicad_common_1.PinOrientation.RIGHT;
            if (textInside) {
                if (isHorizontal) {
                    if (drawPinname) {
                        if (orientation === kicad_common_1.PinOrientation.RIGHT) {
                            this.plotter.text({ x: x1 + textInside, y: y1 }, SCH_COLORS.LAYER_PINNAM, draw.name, kicad_common_1.TextAngle.HORIZ, draw.nameTextSize, kicad_common_1.TextHjustify.LEFT, kicad_common_1.TextVjustify.CENTER, nameLineWidth, false, false);
                        } else {
                            this.plotter.text({ x: x1 - textInside, y: y1 }, SCH_COLORS.LAYER_PINNAM, draw.name, kicad_common_1.TextAngle.HORIZ, draw.nameTextSize, kicad_common_1.TextHjustify.RIGHT, kicad_common_1.TextVjustify.CENTER, nameLineWidth, false, false);
                        }
                    }
                    if (drawPinnumber) {
                        this.plotter.text({ x: (x1 + pos.x) / 2, y: y1 - numOffset }, SCH_COLORS.LAYER_PINNUM, draw.num, kicad_common_1.TextAngle.HORIZ, draw.nameTextSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.BOTTOM, numLineWidth, false, false);
                    }
                } else {
                    if (orientation === kicad_common_1.PinOrientation.DOWN) {
                        if (drawPinname) {
                            this.plotter.text({ x: x1, y: y1 + textInside }, SCH_COLORS.LAYER_PINNAM, draw.name, kicad_common_1.TextAngle.VERT, draw.nameTextSize, kicad_common_1.TextHjustify.RIGHT, kicad_common_1.TextVjustify.CENTER, nameLineWidth, false, false);
                        }
                        if (drawPinnumber) {
                            this.plotter.text({ x: x1 - numOffset, y: (y1 + pos.y) / 2 }, SCH_COLORS.LAYER_PINNUM, draw.num, kicad_common_1.TextAngle.VERT, draw.nameTextSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.BOTTOM, numLineWidth, false, false);
                        }
                    } else {
                        if (drawPinname) {
                            this.plotter.text({ x: x1, y: y1 - textInside }, SCH_COLORS.LAYER_PINNAM, draw.name, kicad_common_1.TextAngle.VERT, draw.nameTextSize, kicad_common_1.TextHjustify.LEFT, kicad_common_1.TextVjustify.CENTER, nameLineWidth, false, false);
                        }
                        if (drawPinnumber) {
                            this.plotter.text({ x: x1 - numOffset, y: (y1 + pos.y) / 2 }, SCH_COLORS.LAYER_PINNUM, draw.num, kicad_common_1.TextAngle.VERT, draw.nameTextSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.BOTTOM, numLineWidth, false, false);
                        }
                    }
                }
            } else {
                if (isHorizontal) {
                    if (drawPinname) {
                        this.plotter.text({ x: (x1 + pos.x) / 2, y: y1 - nameOffset }, SCH_COLORS.LAYER_PINNAM, draw.name, kicad_common_1.TextAngle.HORIZ, draw.nameTextSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.BOTTOM, nameLineWidth, false, false);
                    }
                    if (drawPinnumber) {
                        this.plotter.text({ x: (x1 + pos.x) / 2, y: y1 + numOffset }, SCH_COLORS.LAYER_PINNUM, draw.num, kicad_common_1.TextAngle.HORIZ, draw.numTextSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.TOP, numLineWidth, false, false);
                    }
                } else {
                    if (drawPinname) {
                        this.plotter.text({ x: x1 - nameOffset, y: (y1 + pos.y) / 2 }, SCH_COLORS.LAYER_PINNAM, draw.name, kicad_common_1.TextAngle.VERT, draw.nameTextSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.BOTTOM, nameLineWidth, false, false);
                    }
                    if (drawPinnumber) {
                        this.plotter.text({ x: x1 + numOffset, y: (y1 + pos.y) / 2 }, SCH_COLORS.LAYER_PINNUM, draw.num, kicad_common_1.TextAngle.VERT, draw.numTextSize, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.TOP, numLineWidth, false, false);
                    }
                }
            }
        }
    }, {
        key: "plotDrawPinSymbol",
        value: function plotDrawPinSymbol(draw, component, transform) {
            var pos = transform.transformCoordinate(draw.pos);
            var orientation = this.pinDrawOrientation(draw, transform);
            var x1 = pos.x,
                y1 = pos.y;
            var mapX1 = 0,
                mapY1 = 0;
            if (orientation === kicad_common_1.PinOrientation.UP) {
                y1 -= draw.length;
                mapY1 = 1;
            } else if (orientation === kicad_common_1.PinOrientation.DOWN) {
                y1 += draw.length;
                mapY1 = -1;
            } else if (orientation === kicad_common_1.PinOrientation.LEFT) {
                x1 -= draw.length;
                mapX1 = 1;
            } else if (orientation === kicad_common_1.PinOrientation.RIGHT) {
                x1 += draw.length;
                mapX1 = -1;
            }
            // TODO shape
            this.plotter.fill = kicad_common_1.Fill.NO_FILL;
            this.plotter.setCurrentLineWidth(DEFAULT_LINE_WIDTH);
            this.plotter.moveTo({ x: x1, y: y1 });
            this.plotter.finishTo({ x: pos.x, y: pos.y });
            // this.plotter.circle({ x: pos.x, y: pos.y}, 20, Fill.NO_FILL, 2);
        }
    }, {
        key: "pinDrawOrientation",
        value: function pinDrawOrientation(draw, transform) {
            var end = { x: 0, y: 0 };
            if (draw.orientation === kicad_common_1.PinOrientation.UP) {
                end.y = 1;
            } else if (draw.orientation === kicad_common_1.PinOrientation.DOWN) {
                end.y = -1;
            } else if (draw.orientation === kicad_common_1.PinOrientation.LEFT) {
                end.x = -1;
            } else if (draw.orientation === kicad_common_1.PinOrientation.RIGHT) {
                end.x = 1;
            }
            var t = transform.clone();
            t.tx = 0;
            t.ty = 0;
            end = t.transformCoordinate(end);
            if (end.x === 0) {
                if (end.y > 0) {
                    return kicad_common_1.PinOrientation.DOWN;
                } else {
                    return kicad_common_1.PinOrientation.UP;
                }
            } else {
                if (end.x < 0) {
                    return kicad_common_1.PinOrientation.LEFT;
                } else {
                    return kicad_common_1.PinOrientation.RIGHT;
                }
            }
        }
    }, {
        key: "plotSchematic",
        value: function plotSchematic(sch, libs) {
            this.plotter.plotPageInfo(sch.descr.pageInfo);
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = sch.items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var item = _step2.value;

                    if (item instanceof kicad_sch_1.SchComponent) {
                        var component = void 0;
                        var _iteratorNormalCompletion3 = true;
                        var _didIteratorError3 = false;
                        var _iteratorError3 = undefined;

                        try {
                            for (var _iterator3 = libs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                                var lib = _step3.value;

                                if (!lib) continue;
                                component = lib.findByName(item.name);
                                if (component) break;
                            }
                        } catch (err) {
                            _didIteratorError3 = true;
                            _iteratorError3 = err;
                        } finally {
                            try {
                                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                                    _iterator3.return();
                                }
                            } finally {
                                if (_didIteratorError3) {
                                    throw _iteratorError3;
                                }
                            }
                        }

                        if (!component) {
                            console.warn("component " + item.name + " is not found in libraries");
                            this.errors.push("component " + item.name + " is not found in libraries");
                            continue;
                        }
                        this.plotLibComponent(component, item.unit, item.convert, item.transform);
                        var _iteratorNormalCompletion4 = true;
                        var _didIteratorError4 = false;
                        var _iteratorError4 = undefined;

                        try {
                            for (var _iterator4 = item.fields[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                                var field = _step4.value;

                                if (!field.text) continue;
                                if (!field.visibility) continue;
                                if (field.number >= 2) continue;
                                var orientation = field.angle;
                                if (item.transform.y1) {
                                    if (orientation === kicad_common_1.TextAngle.HORIZ) {
                                        orientation = kicad_common_1.TextAngle.VERT;
                                    } else {
                                        orientation = kicad_common_1.TextAngle.HORIZ;
                                    }
                                }
                                var size = field.size || DEFAULT_SIZE_TEXT;
                                var textBox = this.getTextBox(field, size, DEFAULT_LINE_WIDTH);
                                var origin = { x: item.pos.x, y: item.pos.y };
                                textBox.pos1 = kicad_common_1.Point.sub(textBox.pos1, origin);
                                textBox.pos2 = kicad_common_1.Point.sub(textBox.pos2, origin);
                                var textpos = item.transform.transformCoordinate({
                                    x: textBox.pos1.x + textBox.width / 2,
                                    y: textBox.pos1.y + textBox.height / 2
                                });
                                this.plotter.text(textpos, SCH_COLORS.LAYER_REFERENCEPART, field.text, orientation, size, kicad_common_1.TextHjustify.CENTER, kicad_common_1.TextVjustify.CENTER, DEFAULT_LINE_WIDTH, field.italic, field.bold);
                            }
                        } catch (err) {
                            _didIteratorError4 = true;
                            _iteratorError4 = err;
                        } finally {
                            try {
                                if (!_iteratorNormalCompletion4 && _iterator4.return) {
                                    _iterator4.return();
                                }
                            } finally {
                                if (_didIteratorError4) {
                                    throw _iteratorError4;
                                }
                            }
                        }
                    } else if (item instanceof kicad_sch_1.Sheet) {
                        this.plotter.setColor(SCH_COLORS.LAYER_SHEET);
                        this.plotter.setCurrentLineWidth(DEFAULT_LINE_WIDTH);
                        this.plotter.fill = kicad_common_1.Fill.NO_FILL;
                        this.plotter.moveTo(item.pos.x, item.pos.y);
                        this.plotter.lineTo(item.pos.x, item.pos.y + item.size.height);
                        this.plotter.lineTo(item.pos.x + item.size.width, item.pos.y + item.size.height);
                        this.plotter.lineTo(item.pos.x + item.size.width, item.pos.y);
                        this.plotter.finishTo(item.pos.x, item.pos.y);
                        this.plotter.text({ x: item.pos.x, y: item.pos.y - 4 }, SCH_COLORS.LAYER_SHEETNAME, item.sheetName, 0, item.sheetNameSize, kicad_common_1.TextHjustify.LEFT, kicad_common_1.TextVjustify.BOTTOM, DEFAULT_LINE_WIDTH, false, false);
                        this.plotter.text({ x: item.pos.x, y: item.pos.y + item.size.height + 4 }, SCH_COLORS.LAYER_SHEETFILENAME, item.fileName, 0, item.fileNameSize, kicad_common_1.TextHjustify.LEFT, kicad_common_1.TextVjustify.TOP, DEFAULT_LINE_WIDTH, false, false);
                        this.plotter.setColor(SCH_COLORS.LAYER_SHEETLABEL);
                        var _iteratorNormalCompletion5 = true;
                        var _didIteratorError5 = false;
                        var _iteratorError5 = undefined;

                        try {
                            for (var _iterator5 = item.sheetPins[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                                var pin = _step5.value;

                                var tmp = pin.shape;
                                var pos = new kicad_common_1.Point(pin.pos.x, pin.pos.y);
                                if (pin.shape === kicad_common_1.Net.INPUT) {
                                    pin.shape = kicad_common_1.Net.OUTPUT;
                                } else if (pin.shape === kicad_common_1.Net.OUTPUT) {
                                    pin.shape = kicad_common_1.Net.INPUT;
                                }
                                if (pin.sheetSide === kicad_common_1.SheetSide.LEFT) {
                                    pin.pos.x = item.pos.x;
                                } else if (pin.sheetSide === kicad_common_1.SheetSide.RIGHT) {
                                    pin.pos.x = item.pos.x + item.size.width;
                                } else if (pin.sheetSide === kicad_common_1.SheetSide.TOP) {
                                    pin.pos.y = item.pos.y;
                                } else if (pin.sheetSide === kicad_common_1.SheetSide.BOTTOM) {
                                    pin.pos.y = item.pos.y + item.size.height;
                                }
                                this.plotSchTextHierarchicalLabel(pin);
                                pin.shape = tmp;
                                pin.pos.x = pos.x;
                                pin.pos.y = pos.y;
                            }
                        } catch (err) {
                            _didIteratorError5 = true;
                            _iteratorError5 = err;
                        } finally {
                            try {
                                if (!_iteratorNormalCompletion5 && _iterator5.return) {
                                    _iterator5.return();
                                }
                            } finally {
                                if (_didIteratorError5) {
                                    throw _iteratorError5;
                                }
                            }
                        }
                    } else if (item instanceof kicad_sch_1.Bitmap) {
                        item.parseIHDR();
                        var PPI = 300;
                        var PIXEL_SCALE = 1000 / PPI;
                        this.plotter.image({ x: item.pos.x, y: item.pos.y }, item.scale * PIXEL_SCALE, item.size.width, item.size.height, item.data);
                    } else if (item instanceof kicad_sch_1.Text) {
                        if (item.name1 === 'GLabel') {
                            this.plotSchTextGlobalLabel(item);
                        } else if (item.name1 === 'HLabel') {
                            this.plotSchTextHierarchicalLabel(item);
                        } else {
                            this.plotSchText(item);
                        }
                    } else if (item instanceof kicad_sch_1.Entry) {
                        this.plotter.setColor(item.isBus ? SCH_COLORS.LAYER_BUS : SCH_COLORS.LAYER_WIRE);
                        this.plotter.setCurrentLineWidth(item.isBus ? DEFAULT_LINE_WIDTH_BUS : DEFAULT_LINE_WIDTH);
                        this.plotter.moveTo(item.pos.x, item.pos.y);
                        this.plotter.finishTo(item.pos.x + item.size.width, item.pos.y + item.size.height);
                    } else if (item instanceof kicad_sch_1.Connection) {
                        this.plotter.setColor(SCH_COLORS.LAYER_JUNCTION);
                        this.plotter.circle({ x: item.pos.x, y: item.pos.y }, 40, kicad_common_1.Fill.FILLED_SHAPE, DEFAULT_LINE_WIDTH);
                    } else if (item instanceof kicad_sch_1.NoConn) {
                        this.plotter.fill = kicad_common_1.Fill.NO_FILL;
                        var DRAWNOCONNECT_SIZE = 48;
                        var delta = DRAWNOCONNECT_SIZE / 2;
                        this.plotter.setColor(SCH_COLORS.LAYER_NOCONNECT);
                        this.plotter.setCurrentLineWidth(DEFAULT_LINE_WIDTH);
                        this.plotter.moveTo(item.pos.x - delta, item.pos.y - delta);
                        this.plotter.finishTo(item.pos.x + delta, item.pos.y + delta);
                        this.plotter.moveTo(item.pos.x + delta, item.pos.y - delta);
                        this.plotter.finishTo(item.pos.x - delta, item.pos.y + delta);
                    } else if (item instanceof kicad_sch_1.Wire) {
                        this.plotter.setColor(item.isBus ? SCH_COLORS.LAYER_BUS : SCH_COLORS.LAYER_WIRE);
                        this.plotter.setCurrentLineWidth(item.isBus ? DEFAULT_LINE_WIDTH_BUS : DEFAULT_LINE_WIDTH);
                        this.plotter.fill = kicad_common_1.Fill.NO_FILL;
                        this.plotter.moveTo(item.start.x, item.start.y);
                        this.plotter.finishTo(item.end.x, item.end.y);
                    } else {
                        throw "unknown SchItem: " + item.constructor.name;
                    }
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }
        }
    }, {
        key: "plotSchTextGlobalLabel",
        value: function plotSchTextGlobalLabel(item) {
            {
                var halfSize = item.size / 2;
                var lineWidth = DEFAULT_LINE_WIDTH;
                var points = [];
                var symLen = this.plotter.font.computeTextLineSize(item.text, item.size, lineWidth);
                var hasOverBar = /~[^~]/.test(item.text);
                var Y_CORRECTION = 1.40;
                var Y_OVERBAR_CORRECTION = 1.2;
                var x = symLen + lineWidth + 3;
                var y = halfSize * Y_CORRECTION;
                if (hasOverBar) {
                    // TODO
                }
                y += lineWidth + lineWidth / 2;
                points.push(new kicad_common_1.Point(0, 0));
                points.push(new kicad_common_1.Point(0, -y)); // Up
                points.push(new kicad_common_1.Point(-x, -y)); // left
                points.push(new kicad_common_1.Point(-x, 0)); // Up left
                points.push(new kicad_common_1.Point(-x, y)); // left down
                points.push(new kicad_common_1.Point(0, y)); // down
                var xOffset = 0;
                if (item.shape === kicad_common_1.Net.INPUT) {
                    xOffset -= halfSize;
                    points[0].x += halfSize;
                } else if (item.shape === kicad_common_1.Net.OUTPUT) {
                    points[3].x -= halfSize;
                } else if (item.shape === kicad_common_1.Net.BIDI || item.shape === kicad_common_1.Net.TRISTATE) {
                    xOffset = -halfSize;
                    points[0].x += halfSize;
                    points[3].x -= halfSize;
                }
                var angle = 0;
                if (item.orientationType === kicad_sch_1.TextOrientationType.HORIZ_LEFT) {
                    angle = 0;
                } else if (item.orientationType === kicad_sch_1.TextOrientationType.UP) {
                    angle = -900;
                } else if (item.orientationType === kicad_sch_1.TextOrientationType.HORIZ_RIGHT) {
                    angle = 1800;
                } else if (item.orientationType === kicad_sch_1.TextOrientationType.BOTTOM) {
                    angle = 900;
                }
                var _iteratorNormalCompletion6 = true;
                var _didIteratorError6 = false;
                var _iteratorError6 = undefined;

                try {
                    for (var _iterator6 = points[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
                        var p = _step6.value;

                        p.x += xOffset;
                        if (angle) {
                            kicad_common_1.RotatePoint(p, angle);
                        }
                        p.x += item.pos.x;
                        p.y += item.pos.y;
                    }
                } catch (err) {
                    _didIteratorError6 = true;
                    _iteratorError6 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion6 && _iterator6.return) {
                            _iterator6.return();
                        }
                    } finally {
                        if (_didIteratorError6) {
                            throw _iteratorError6;
                        }
                    }
                }

                points.push(points[0]);
                this.plotter.setColor(SCH_COLORS.LAYER_GLOBLABEL);
                this.plotter.polyline(points, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
            }
            {
                var _p = new kicad_common_1.Point(item.pos.x, item.pos.y);
                var width = DEFAULT_LINE_WIDTH;
                var _halfSize = this.plotter.font.computeTextLineSize(' ', item.size, width) / 2;
                var offset = width;
                if (item.shape === kicad_common_1.Net.INPUT || item.shape === kicad_common_1.Net.BIDI || item.shape === kicad_common_1.Net.TRISTATE) {
                    offset += _halfSize;
                } else if (item.shape === kicad_common_1.Net.OUTPUT || item.shape === kicad_common_1.Net.UNSPECIFIED) {
                    offset += TXT_MARGIN;
                }
                if (item.orientationType === 0) {
                    _p.x -= offset;
                } else if (item.orientationType === 1) {
                    _p.y -= offset;
                } else if (item.orientationType === 2) {
                    _p.x += offset;
                } else if (item.orientationType === 3) {
                    _p.y += offset;
                }
                this.plotter.text(_p, SCH_COLORS.LAYER_GLOBLABEL, item.text, item.orientation, item.size, item.hjustify, item.vjustify, width, item.italic, item.bold);
            }
        }
    }, {
        key: "plotSchTextHierarchicalLabel",
        value: function plotSchTextHierarchicalLabel(item) {
            this.plotter.setColor(SCH_COLORS.LAYER_HIERLABEL);
            {
                var p = new kicad_common_1.Point(item.pos.x, item.pos.y);
                var halfSize = item.size / 2;
                var template = TEMPLATE_SHAPES[item.shape][item.orientationType];
                var points = [];
                // first of template is number of corners
                for (var i = 1; i < template.length; i += 2) {
                    var x = template[i] * halfSize;
                    var y = template[i + 1] * halfSize;
                    points.push(kicad_common_1.Point.add(new kicad_common_1.Point(x, y), p));
                }
                this.plotter.polyline(points, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
            }
            ;
            {
                var _p2 = new kicad_common_1.Point(item.pos.x, item.pos.y);
                var txtOffset = item.size + TXT_MARGIN + DEFAULT_LINE_WIDTH;
                if (item.orientationType === 0) {
                    _p2.x -= txtOffset;
                } else if (item.orientationType === 1) {
                    _p2.y -= txtOffset;
                } else if (item.orientationType === 2) {
                    _p2.x += txtOffset;
                } else if (item.orientationType === 3) {
                    _p2.y += txtOffset;
                }
                this.plotter.text(_p2, SCH_COLORS.LAYER_HIERLABEL, item.text, item.orientation, item.size, item.hjustify, item.vjustify, DEFAULT_LINE_WIDTH, item.italic, item.bold);
            }
        }
    }, {
        key: "plotSchText",
        value: function plotSchText(item) {
            var color = SCH_COLORS.LAYER_NOTES;
            if (item.name1 === 'Label') {
                color = SCH_COLORS.LAYER_LOCLABEL;
            }
            var p = new kicad_common_1.Point(item.pos.x, item.pos.y);
            var txtOffset = TXT_MARGIN + DEFAULT_LINE_WIDTH / 2;
            if (item.orientationType === 0) {
                p.y -= txtOffset;
            } else if (item.orientationType === 1) {
                p.x -= txtOffset;
            } else if (item.orientationType === 2) {
                p.y -= txtOffset;
            } else if (item.orientationType === 3) {
                p.x -= txtOffset;
            }
            this.plotter.text(p, color, item.text, item.orientation, item.size, item.hjustify, item.vjustify, DEFAULT_LINE_WIDTH, item.italic, item.bold);
        }
    }, {
        key: "getTextBox",
        value: function getTextBox(text, size, lineWidth) {
            var _this = this;

            var invertY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

            var lines = text.text.split(/\n/).map(function (line) {
                return _this.plotter.font.computeTextLineSize(text.text, size, lineWidth);
            });
            var dx = Math.max.apply(Math, _toConsumableArray(lines));
            var dy = this.plotter.font.getInterline(size, lineWidth) * lines.length;
            var pos = { x: text.pos.x, y: text.pos.y };
            if (invertY) {
                pos.y = -pos.y;
            }
            var rect = new kicad_common_1.Rect(pos.x, pos.y, pos.x + dx, pos.y + dy);
            if (text.hjustify === kicad_common_1.TextHjustify.LEFT) {} else if (text.hjustify === kicad_common_1.TextHjustify.CENTER) {
                rect.pos1.x -= dx / 2;
                rect.pos2.x -= dx / 2;
            } else if (text.hjustify === kicad_common_1.TextHjustify.RIGHT) {
                rect.pos1.x -= dx;
                rect.pos2.x -= dx;
            }
            if (text.vjustify === kicad_common_1.TextVjustify.TOP) {} else if (text.vjustify === kicad_common_1.TextVjustify.CENTER) {
                rect.pos1.y -= dy / 2;
                rect.pos2.y -= dy / 2;
            } else if (text.vjustify === kicad_common_1.TextVjustify.BOTTOM) {
                rect.pos1.y -= dy;
                rect.pos2.y -= dy;
            }
            return rect.normalize();
        }
    }]);

    return SchPlotter;
}();

exports.SchPlotter = SchPlotter;

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

//#!tsc && NODE_PATH=dist/src node dist/sketch3.js 
/*
 * This program source code file is part of kicad-utils
 * Copyright (C) 2017 cho45 <cho45@lowreal.net>.
 *
 * And this program source code file is imported from KiCad, a free EDA CAD application.
 *
 * Original Author Copyright:
 *
 * Copyright (C) 2015 Jean-Pierre Charras, jaen-pierre.charras@gipsa-lab.inpg.com
 * Copyright (C) 1992-2017 KiCad Developers, see KiCAD AUTHORS.txt for contributors.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, you may find one here:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * or you may search the http://www.gnu.org website for the version 2 license,
 * or you may write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
/**
 *
 * IMPL is NOT COMPLETED!!
 */
var kicad_common_1 = __webpack_require__(31);
var kicad_pcb_1 = __webpack_require__(117);
var DEFAULT_LINE_WIDTH = 1;
var DEFAULT_LAYER_COLORS = [kicad_common_1.Color.RED, kicad_common_1.Color.YELLOW, kicad_common_1.Color.LIGHTMAGENTA, kicad_common_1.Color.LIGHTRED, kicad_common_1.Color.CYAN, kicad_common_1.Color.GREEN, kicad_common_1.Color.BLUE, kicad_common_1.Color.DARKGRAY, kicad_common_1.Color.MAGENTA, kicad_common_1.Color.LIGHTGRAY, kicad_common_1.Color.MAGENTA, kicad_common_1.Color.RED, kicad_common_1.Color.BROWN, kicad_common_1.Color.LIGHTGRAY, kicad_common_1.Color.BLUE, kicad_common_1.Color.GREEN, kicad_common_1.Color.RED, kicad_common_1.Color.YELLOW, kicad_common_1.Color.LIGHTMAGENTA, kicad_common_1.Color.LIGHTRED, kicad_common_1.Color.CYAN, kicad_common_1.Color.GREEN, kicad_common_1.Color.BLUE, kicad_common_1.Color.DARKGRAY, kicad_common_1.Color.MAGENTA, kicad_common_1.Color.LIGHTGRAY, kicad_common_1.Color.MAGENTA, kicad_common_1.Color.RED, kicad_common_1.Color.BROWN, kicad_common_1.Color.LIGHTGRAY, kicad_common_1.Color.BLUE, kicad_common_1.Color.GREEN, kicad_common_1.Color.BLUE, kicad_common_1.Color.MAGENTA, kicad_common_1.Color.LIGHTCYAN, kicad_common_1.Color.RED, kicad_common_1.Color.MAGENTA, kicad_common_1.Color.CYAN, kicad_common_1.Color.BROWN, kicad_common_1.Color.MAGENTA, kicad_common_1.Color.LIGHTGRAY, kicad_common_1.Color.BLUE, kicad_common_1.Color.GREEN, kicad_common_1.Color.YELLOW, kicad_common_1.Color.YELLOW, kicad_common_1.Color.LIGHTMAGENTA, kicad_common_1.Color.YELLOW, kicad_common_1.Color.DARKGRAY];
// pcbnew/plot_board_layers.cpp
// pcbnew/plot_brditems_plotter.cpp 

var PCBPlotter = function () {
    function PCBPlotter(plotter) {
        _classCallCheck(this, PCBPlotter);

        this.plotter = plotter;
        this.layerMask = new kicad_pcb_1.LSET(kicad_pcb_1.PCB_LAYER_ID.F_Cu, kicad_pcb_1.PCB_LAYER_ID.B_Cu);
        this.plotOpt = new PCBPlotOptions();
    }

    _createClass(PCBPlotter, [{
        key: "flashPadCircle",
        value: function flashPadCircle(pos, dia, fill) {
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                this.plotter.circle(pos, dia, fill, 0);
            } else {
                var lineWidth = DEFAULT_LINE_WIDTH;
                this.plotter.setCurrentLineWidth(lineWidth);
                if (lineWidth > dia - 2) lineWidth = dia - 2;
                this.plotter.circle(pos, dia - lineWidth, kicad_common_1.Fill.NO_FILL, lineWidth);
            }
        }
    }, {
        key: "flashPadRect",
        value: function flashPadRect(pos, size, orientation, fill) {
            var points = [];
            var lineWidth = DEFAULT_LINE_WIDTH;
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                this.plotter.setCurrentLineWidth(0);
            } else {
                this.plotter.setCurrentLineWidth(lineWidth);
            }
            var width = size.width - lineWidth;
            var height = size.height - lineWidth;
            if (width < 1) width = 1;
            if (height < 1) height = 1;
            var dx = width / 2;
            var dy = height / 2;
            points.push(new kicad_common_1.Point(pos.x - dx, pos.y + dy));
            points.push(new kicad_common_1.Point(pos.x - dx, pos.y - dy));
            points.push(new kicad_common_1.Point(pos.x + dx, pos.y - dy));
            points.push(new kicad_common_1.Point(pos.x + dx, pos.y + dy));
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var point = _step.value;

                    kicad_common_1.RotatePointWithCenter(point, pos, orientation);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            points.push(points[0]);
            this.plotter.polyline(points, fill, lineWidth);
        }
    }, {
        key: "flashPadRoundRect",
        value: function flashPadRoundRect(pos, size, cornerRadius, orientation, fill) {
            var lineWidth = DEFAULT_LINE_WIDTH;
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                lineWidth = 0;
            } else {
                size.width -= lineWidth;
                size.height -= lineWidth;
                cornerRadius -= lineWidth / 2;
            }
            var lineTop_left = new kicad_common_1.Point(cornerRadius, 0);
            var lineTop_right = new kicad_common_1.Point(cornerRadius + size.width - cornerRadius, 0);
            var lineBottom_left = new kicad_common_1.Point(cornerRadius, size.height);
            var lineBottom_right = new kicad_common_1.Point(cornerRadius + size.width - cornerRadius, size.height);
            var lineLeft_top = new kicad_common_1.Point(0, cornerRadius);
            var lineLeft_bottom = new kicad_common_1.Point(0, cornerRadius + size.height - cornerRadius);
            var lineRight_top = new kicad_common_1.Point(size.width, cornerRadius);
            var lineRight_bottom = new kicad_common_1.Point(size.width, cornerRadius + size.height - cornerRadius);
            var arcTopLeft_center = new kicad_common_1.Point(cornerRadius, cornerRadius);
            var arcBottomLeft_center = new kicad_common_1.Point(cornerRadius, size.height - cornerRadius);
            var arcTopRight_center = new kicad_common_1.Point(size.width - cornerRadius, cornerRadius);
            var arcBottomRight_center = new kicad_common_1.Point(size.width - cornerRadius, size.height - cornerRadius);
            var points = [lineTop_left, lineTop_right, lineBottom_left, lineBottom_right, lineLeft_top, lineLeft_bottom, lineRight_top, lineRight_bottom, arcTopLeft_center, arcBottomLeft_center, arcTopRight_center, arcBottomRight_center];
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = points[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var point = _step2.value;

                    kicad_common_1.RotatePoint(point, orientation);
                    var p = kicad_common_1.Point.add(point, pos);
                    point.x = p.x;
                    point.y = p.y;
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }

            this.plotter.arc(arcTopLeft_center, orientation + 900, orientation + 1800, cornerRadius, fill, lineWidth);
            this.plotter.arc(arcBottomLeft_center, orientation + 1800, orientation + 2700, cornerRadius, fill, lineWidth);
            this.plotter.arc(arcTopRight_center, orientation + 0, orientation + 900, cornerRadius, fill, lineWidth);
            this.plotter.arc(arcBottomRight_center, orientation + 2700, orientation + 3600, cornerRadius, fill, lineWidth);
            this.plotter.polyline([lineTop_left, lineTop_right, lineBottom_right, lineBottom_left, lineTop_left], fill, lineWidth);
            this.plotter.polyline([lineLeft_top, lineRight_top, lineRight_bottom, lineLeft_bottom, lineLeft_top], fill, lineWidth);
        }
    }, {
        key: "flashPadTrapezoid",
        value: function flashPadTrapezoid(pos, coords, orientation, fill) {
            var lineWidth = DEFAULT_LINE_WIDTH;
            var corners = [];
            var _iteratorNormalCompletion3 = true;
            var _didIteratorError3 = false;
            var _iteratorError3 = undefined;

            try {
                for (var _iterator3 = coords[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                    var point = _step3.value;

                    corners.push(kicad_common_1.Point.from(point));
                }
            } catch (err) {
                _didIteratorError3 = true;
                _iteratorError3 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
                        _iterator3.return();
                    }
                } finally {
                    if (_didIteratorError3) {
                        throw _iteratorError3;
                    }
                }
            }

            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                lineWidth = 0;
            } else {
                corners[0].x += lineWidth;
                corners[0].y -= lineWidth;
                corners[1].x += lineWidth;
                corners[1].y += lineWidth;
                corners[2].x -= lineWidth;
                corners[2].y += lineWidth;
                corners[3].x -= lineWidth;
                corners[3].y -= lineWidth;
            }
            for (var i = 0, len = corners.length; i < len; i++) {
                kicad_common_1.RotatePoint(corners[i], orientation);
                corners[i] = kicad_common_1.Point.add(corners[i], pos);
            }
            corners.push(corners[0]);
            this.plotter.polyline(corners, fill, lineWidth);
        }
    }, {
        key: "flashPadOval",
        value: function flashPadOval(center, size, orientation, fill) {
            size = new kicad_common_1.Size(size.width, size.height);
            if (size.width > size.height) {
                var _ref = [size.height, size.width];
                size.width = _ref[0];
                size.height = _ref[1];

                orientation = kicad_common_1.AddAngles(orientation, 900);
            }
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                var delta = size.height - size.width;
                var p0 = new kicad_common_1.Point(0, -delta / 2);
                var p1 = new kicad_common_1.Point(0, delta / 2);
                kicad_common_1.RotatePoint(p0, orientation);
                kicad_common_1.RotatePoint(p1, orientation);
                this.thickSegment(kicad_common_1.Point.add(center, p0), kicad_common_1.Point.add(center, p1), size.width, fill);
            } else {
                this.sketchOval(center, size, orientation, DEFAULT_LINE_WIDTH);
            }
        }
    }, {
        key: "sketchOval",
        value: function sketchOval(pos, size, orientation, lineWidth) {
            this.plotter.setCurrentLineWidth(lineWidth);
            size = kicad_common_1.Size.from(size);
            if (size.width > size.height) {
                var _ref2 = [size.height, size.width];
                size.width = _ref2[0];
                size.height = _ref2[1];

                orientation = kicad_common_1.AddAngles(orientation, 900);
            }
            var deltaxy = size.height - size.width;
            var radius = (size.width - lineWidth) / 2;
            var c = new kicad_common_1.Point();
            c.x = -radius;
            c.y = -deltaxy / 2;
            kicad_common_1.RotatePoint(c, orientation);
            this.plotter.moveTo(kicad_common_1.Point.add(c, pos));
            c.x = -radius;
            c.y = deltaxy / 2;
            kicad_common_1.RotatePoint(c, orientation);
            this.plotter.finishTo(kicad_common_1.Point.add(c, pos));
            c.x = radius;
            c.y = -deltaxy / 2;
            kicad_common_1.RotatePoint(c, orientation);
            this.plotter.moveTo(kicad_common_1.Point.add(c, pos));
            c.x = radius;
            c.y = deltaxy / 2;
            kicad_common_1.RotatePoint(c, orientation);
            this.plotter.finishTo(kicad_common_1.Point.add(c, pos));
            c.x = 0;
            c.y = deltaxy / 2;
            kicad_common_1.RotatePoint(c, orientation);
            this.plotter.arc(kicad_common_1.Point.add(c, pos), orientation + 1800, orientation + 3600, radius, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
            c.x = 0;
            c.y = -deltaxy / 2;
            kicad_common_1.RotatePoint(c, orientation);
            this.plotter.arc(kicad_common_1.Point.add(c, pos), orientation, orientation + 1800, radius, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
        }
    }, {
        key: "segmentAsOval",
        value: function segmentAsOval(start, end, lineWidth, fill) {
            var center = new kicad_common_1.Point((start.x + end.x) / 2, (start.y + end.y) / 2);
            var size = new kicad_common_1.Size(end.x - start.x, end.y - start.y);
            var orientation = 0;
            if (size.height === 0) {
                orientation = 0;
            } else if (size.width === 0) {
                orientation = 900;
            } else {
                orientation = -kicad_common_1.ArcTangente(size.height, size.width);
            }
            size.width = kicad_common_1.EuclideanNorm(size) + lineWidth;
            size.height = lineWidth;
            this.flashPadOval(center, size, orientation, fill);
        }
    }, {
        key: "thickSegment",
        value: function thickSegment(start, end, lineWidth, fill) {
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                this.plotter.setFill(kicad_common_1.Fill.NO_FILL);
                this.plotter.setCurrentLineWidth(lineWidth);
                this.plotter.moveTo(start);
                this.plotter.finishTo(end);
            } else {
                this.plotter.setCurrentLineWidth(DEFAULT_LINE_WIDTH);
                this.segmentAsOval(start, end, lineWidth, fill);
            }
        }
    }, {
        key: "thickArc",
        value: function thickArc(center, startAngle, endAngle, radius, lineWidth, fill) {
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                this.plotter.arc(center, startAngle, endAngle, radius, kicad_common_1.Fill.NO_FILL, lineWidth);
            } else {
                this.plotter.setCurrentLineWidth(DEFAULT_LINE_WIDTH);
                this.plotter.arc(center, startAngle, endAngle, radius - (lineWidth - DEFAULT_LINE_WIDTH) / 2, kicad_common_1.Fill.NO_FILL, lineWidth);
                this.plotter.arc(center, startAngle, endAngle, radius + (lineWidth - DEFAULT_LINE_WIDTH) / 2, kicad_common_1.Fill.NO_FILL, lineWidth);
            }
        }
    }, {
        key: "thickRect",
        value: function thickRect(p1, p2, lineWidth, fill) {
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                this.plotter.rect(p1, p2, kicad_common_1.Fill.NO_FILL, lineWidth);
            } else {
                this.plotter.setCurrentLineWidth(DEFAULT_LINE_WIDTH);
                var offsetp1 = new kicad_common_1.Point(p1.x - (lineWidth - DEFAULT_LINE_WIDTH) / 2, p1.y - (lineWidth - DEFAULT_LINE_WIDTH) / 2);
                var offsetp2 = new kicad_common_1.Point(p2.x + (lineWidth - DEFAULT_LINE_WIDTH) / 2, p2.y + (lineWidth - DEFAULT_LINE_WIDTH) / 2);
                this.plotter.rect(offsetp1, offsetp2, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
                offsetp1.x += lineWidth - DEFAULT_LINE_WIDTH;
                offsetp1.y += lineWidth - DEFAULT_LINE_WIDTH;
                offsetp2.x -= lineWidth - DEFAULT_LINE_WIDTH;
                offsetp2.y -= lineWidth - DEFAULT_LINE_WIDTH;
                this.plotter.rect(offsetp1, offsetp2, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
            }
        }
    }, {
        key: "thickCircle",
        value: function thickCircle(pos, diameter, lineWidth, fill) {
            if (fill === kicad_common_1.Fill.FILLED_SHAPE) {
                this.plotter.circle(pos, diameter, kicad_common_1.Fill.NO_FILL, lineWidth);
            } else {
                this.plotter.setCurrentLineWidth(DEFAULT_LINE_WIDTH);
                this.plotter.circle(pos, diameter - lineWidth + DEFAULT_LINE_WIDTH, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
                this.plotter.circle(pos, diameter + lineWidth - DEFAULT_LINE_WIDTH, kicad_common_1.Fill.NO_FILL, DEFAULT_LINE_WIDTH);
            }
        }
    }, {
        key: "plotModule",
        value: function plotModule(mod) {
            var _iteratorNormalCompletion4 = true;
            var _didIteratorError4 = false;
            var _iteratorError4 = undefined;

            try {
                for (var _iterator4 = mod.graphics[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                    var edge = _step4.value;

                    if (edge instanceof kicad_pcb_1.EdgeModule) {
                        this.plotEdgeModule(edge, mod);
                    }
                }
            } catch (err) {
                _didIteratorError4 = true;
                _iteratorError4 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion4 && _iterator4.return) {
                        _iterator4.return();
                    }
                } finally {
                    if (_didIteratorError4) {
                        throw _iteratorError4;
                    }
                }
            }

            var _iteratorNormalCompletion5 = true;
            var _didIteratorError5 = false;
            var _iteratorError5 = undefined;

            try {
                for (var _iterator5 = mod.pads[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                    var pad = _step5.value;

                    if (pad.shape === kicad_pcb_1.PadShape.CIRCLE) {
                        this.flashPadCircle(pad.pos, pad.size.width, kicad_common_1.Fill.NO_FILL);
                    } else if (pad.shape === kicad_pcb_1.PadShape.RECT) {
                        this.flashPadRect(pad.pos, pad.size, pad.orientation, kicad_common_1.Fill.NO_FILL);
                    } else if (pad.shape === kicad_pcb_1.PadShape.OVAL) {
                        this.flashPadOval(pad.pos, pad.size, pad.orientation, kicad_common_1.Fill.NO_FILL);
                    } else if (pad.shape === kicad_pcb_1.PadShape.TRAPEZOID) {} else if (pad.shape === kicad_pcb_1.PadShape.ROUNDRECT) {}
                }
            } catch (err) {
                _didIteratorError5 = true;
                _iteratorError5 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion5 && _iterator5.return) {
                        _iterator5.return();
                    }
                } finally {
                    if (_didIteratorError5) {
                        throw _iteratorError5;
                    }
                }
            }
        }
    }, {
        key: "plotTextModule",
        value: function plotTextModule(mod, text, color) {
            var pos = kicad_common_1.Point.from(text.pos);
            if (mod) {
                var angle = mod.orientation;
                kicad_common_1.RotatePoint(pos, angle);
                pos = kicad_common_1.Point.add(pos, mod.pos);
            }
            var size = text.mirror ? -text.size : text.size;
            this.plotter.text(pos, color, text.text, text.angle, size, text.hjustify, text.vjustify, text.lineWidth, text.italic, text.bold);
        }
    }, {
        key: "plotAllTextModule",
        value: function plotAllTextModule(mod) {
            if (this.layerMask.has(mod.reference.layer)) {
                this.plotTextModule(mod, mod.reference, this.getColor(mod.reference.layer));
            }
            if (this.layerMask.has(mod.value.layer)) {
                this.plotTextModule(mod, mod.value, this.getColor(mod.value.layer));
            }
            var _iteratorNormalCompletion6 = true;
            var _didIteratorError6 = false;
            var _iteratorError6 = undefined;

            try {
                for (var _iterator6 = mod.graphics[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
                    var text = _step6.value;

                    if (!this.layerMask.has(text.layer)) continue;
                    if (text instanceof kicad_pcb_1.TextModule) {
                        if (!text.visibility) continue;
                        this.plotTextModule(mod, text, this.getColor(text.layer));
                    }
                }
            } catch (err) {
                _didIteratorError6 = true;
                _iteratorError6 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion6 && _iterator6.return) {
                        _iterator6.return();
                    }
                } finally {
                    if (_didIteratorError6) {
                        throw _iteratorError6;
                    }
                }
            }
        }
    }, {
        key: "plotEdgeModule",
        value: function plotEdgeModule(edge, mod) {
            // console.log('plotEdgeModule', edge);
            this.plotter.setColor(this.getColor(edge.layer));
            var lineWidth = edge.lineWidth;
            var shape = edge.shape;
            var pos = kicad_common_1.Point.from(edge.start);
            var end = kicad_common_1.Point.from(edge.end);
            if (mod) {
                var angle = mod.orientation;
                kicad_common_1.RotatePoint(pos, angle);
                kicad_common_1.RotatePoint(end, angle);
                pos = kicad_common_1.Point.add(pos, mod.pos);
                end = kicad_common_1.Point.add(end, mod.pos);
            }
            if (shape === kicad_pcb_1.Shape.SEGMENT) {
                this.thickSegment(pos, end, lineWidth, this.getPlotMode());
            } else if (shape === kicad_pcb_1.Shape.ARC) {
                var radius = kicad_common_1.GetLineLength(pos, end);
                var startAngle = kicad_common_1.ArcTangente(end.y - pos.y, end.x - pos.x);
                var endAngle = startAngle + edge.angle;
                this.thickArc(pos, endAngle, startAngle, radius, lineWidth, this.getPlotMode());
            } else if (shape === kicad_pcb_1.Shape.CIRCLE) {
                var _radius = kicad_common_1.GetLineLength(pos, end);
                this.thickCircle(pos, _radius * 2, lineWidth, this.getPlotMode());
            } else if (shape === kicad_pcb_1.Shape.POLYGON) {
                var points = edge.polyPoints;
                if (points.length <= 1) return;
                var corners = [];
                var _iteratorNormalCompletion7 = true;
                var _didIteratorError7 = false;
                var _iteratorError7 = undefined;

                try {
                    for (var _iterator7 = points[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
                        var point = _step7.value;

                        var p = kicad_common_1.Point.from(point);
                        if (mod) {
                            kicad_common_1.RotatePoint(p, mod.orientation);
                            p = kicad_common_1.Point.add(p, mod.pos);
                        }
                        corners.push(p);
                    }
                } catch (err) {
                    _didIteratorError7 = true;
                    _iteratorError7 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion7 && _iterator7.return) {
                            _iterator7.return();
                        }
                    } finally {
                        if (_didIteratorError7) {
                            throw _iteratorError7;
                        }
                    }
                }

                this.plotter.polyline(corners, kicad_common_1.Fill.FILLED_SHAPE, lineWidth);
            } else {
                throw "unexpected shape " + shape;
            }
        }
    }, {
        key: "plotBoard",
        value: function plotBoard(board) {
            // console.log('plotBoard', board);
        }
    }, {
        key: "plotBoardLayer",
        value: function plotBoardLayer(board, layer) {
            this.plotter.setColor(this.getColor(layer));
        }
    }, {
        key: "plotStandardLayer",
        value: function plotStandardLayer(board) {
            console.log('plotStandardLayer');
            var _iteratorNormalCompletion8 = true;
            var _didIteratorError8 = false;
            var _iteratorError8 = undefined;

            try {
                for (var _iterator8 = board.modules[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
                    var mod = _step8.value;
                    var _iteratorNormalCompletion13 = true;
                    var _didIteratorError13 = false;
                    var _iteratorError13 = undefined;

                    try {
                        for (var _iterator13 = mod.pads[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {
                            var pad = _step13.value;

                            if (!kicad_pcb_1.LSET.intersect(this.layerMask, pad.layers).length) continue;
                            var margin = new kicad_common_1.Size(0, 0);
                            /*
                            const maskOrPaste = new LSET(PCB_LAYER_ID.B_Mask, PCB_LAYER_ID.F_Mask, PCB_LAYER_ID.B_Paste, PCB_LAYER_ID.F_Paste);
                            const anded = LSET.intersect(maskOrPaste, this.layerMask);
                            if (anded.is(new LSET(PCB_LAYER_ID.F_Mask)) ||anded.is(new LSET(PCB_LAYER_ID.B_Mask))) {
                                margin.x = margin.y = pad.getSolderMaskMargin(mod);
                            } else
                            if (anded.is(new LSET(PCB_LAYER_ID.F_Paste)) ||anded.is(new LSET(PCB_LAYER_ID.B_Paste))) {
                                margin = pad.getSolderPasteMargin(mod);
                            }
                            */
                            var color = kicad_common_1.Color.BLACK;
                            if (pad.layers.has(kicad_pcb_1.PCB_LAYER_ID.B_Cu)) {
                                color = kicad_common_1.Color.GREEN;
                            }
                            if (pad.layers.has(kicad_pcb_1.PCB_LAYER_ID.F_Cu)) {
                                color = color.mix(kicad_common_1.Color.RED);
                            }
                            this.plotPad(board, pad, color, this.getPlotMode());
                        }
                    } catch (err) {
                        _didIteratorError13 = true;
                        _iteratorError13 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion13 && _iterator13.return) {
                                _iterator13.return();
                            }
                        } finally {
                            if (_didIteratorError13) {
                                throw _iteratorError13;
                            }
                        }
                    }
                }
            } catch (err) {
                _didIteratorError8 = true;
                _iteratorError8 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion8 && _iterator8.return) {
                        _iterator8.return();
                    }
                } finally {
                    if (_didIteratorError8) {
                        throw _iteratorError8;
                    }
                }
            }

            var _iteratorNormalCompletion9 = true;
            var _didIteratorError9 = false;
            var _iteratorError9 = undefined;

            try {
                for (var _iterator9 = board.vias[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
                    var via = _step9.value;

                    if (!this.layerMask.has(via.layer1) && this.layerMask.has(via.layer2)) continue;
                    var diameter = via.width + 2;
                    if (diameter <= 0) continue;
                    this.plotter.setColor(kicad_common_1.Color.BLACK);
                    this.flashPadCircle(via.start, diameter, this.getPlotMode());
                }
            } catch (err) {
                _didIteratorError9 = true;
                _iteratorError9 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion9 && _iterator9.return) {
                        _iterator9.return();
                    }
                } finally {
                    if (_didIteratorError9) {
                        throw _iteratorError9;
                    }
                }
            }

            var _iteratorNormalCompletion10 = true;
            var _didIteratorError10 = false;
            var _iteratorError10 = undefined;

            try {
                for (var _iterator10 = board.tracks[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {
                    var track = _step10.value;

                    if (!this.layerMask.has(track.layer)) continue;
                    this.plotter.setColor(this.getColor(track.layer));
                    this.thickSegment(track.start, track.end, track.width, this.getPlotMode());
                }
            } catch (err) {
                _didIteratorError10 = true;
                _iteratorError10 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion10 && _iterator10.return) {
                        _iterator10.return();
                    }
                } finally {
                    if (_didIteratorError10) {
                        throw _iteratorError10;
                    }
                }
            }

            var _iteratorNormalCompletion11 = true;
            var _didIteratorError11 = false;
            var _iteratorError11 = undefined;

            try {
                for (var _iterator11 = board.zones[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {
                    var zone = _step11.value;

                    if (!this.layerMask.has(zone.layer)) continue;
                    this.plotFilledAreas(board, zone);
                }
            } catch (err) {
                _didIteratorError11 = true;
                _iteratorError11 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion11 && _iterator11.return) {
                        _iterator11.return();
                    }
                } finally {
                    if (_didIteratorError11) {
                        throw _iteratorError11;
                    }
                }
            }

            var _iteratorNormalCompletion12 = true;
            var _didIteratorError12 = false;
            var _iteratorError12 = undefined;

            try {
                for (var _iterator12 = board.modules[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {
                    var _mod = _step12.value;

                    if (!this.layerMask.has(_mod.layer)) continue;
                    var _iteratorNormalCompletion14 = true;
                    var _didIteratorError14 = false;
                    var _iteratorError14 = undefined;

                    try {
                        for (var _iterator14 = _mod.graphics[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {
                            var edge = _step14.value;

                            if (!this.layerMask.has(edge.layer)) continue;
                            if (edge instanceof kicad_pcb_1.EdgeModule) {
                                this.plotEdgeModule(edge, _mod);
                            }
                        }
                    } catch (err) {
                        _didIteratorError14 = true;
                        _iteratorError14 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion14 && _iterator14.return) {
                                _iterator14.return();
                            }
                        } finally {
                            if (_didIteratorError14) {
                                throw _iteratorError14;
                            }
                        }
                    }
                }
            } catch (err) {
                _didIteratorError12 = true;
                _iteratorError12 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion12 && _iterator12.return) {
                        _iterator12.return();
                    }
                } finally {
                    if (_didIteratorError12) {
                        throw _iteratorError12;
                    }
                }
            }

            this.plotDrillMarks(board);
        }
    }, {
        key: "plotSilkScreen",
        value: function plotSilkScreen(board) {
            this.plotBoardGraphicItems(board);
            var _iteratorNormalCompletion15 = true;
            var _didIteratorError15 = false;
            var _iteratorError15 = undefined;

            try {
                for (var _iterator15 = board.modules[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {
                    var mod = _step15.value;

                    this.plotAllTextModule(mod);
                }
            } catch (err) {
                _didIteratorError15 = true;
                _iteratorError15 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion15 && _iterator15.return) {
                        _iterator15.return();
                    }
                } finally {
                    if (_didIteratorError15) {
                        throw _iteratorError15;
                    }
                }
            }
        }
    }, {
        key: "plotLayerOutline",
        value: function plotLayerOutline(board) {}
    }, {
        key: "plotSolderMaskLayer",
        value: function plotSolderMaskLayer(board, minThickness) {}
    }, {
        key: "plotBoardLayers",
        value: function plotBoardLayers(board, layerMask) {
            this.layerMask = layerMask;
            this.plotStandardLayer(board);
            this.plotSilkScreen(board);
        }
    }, {
        key: "plotOneBoardLayer",
        value: function plotOneBoardLayer(board, layerId) {
            var layerMask = new kicad_pcb_1.LSET(layerId);
            this.layerMask = layerMask;
            if (kicad_pcb_1.IsCopperLayer(layerId)) {
                this.plotOpt.skipNPTH_Pads = true;
                this.plotStandardLayer(board);
            } else {
                switch (layerId) {
                    case kicad_pcb_1.PCB_LAYER_ID.B_Mask:
                    case kicad_pcb_1.PCB_LAYER_ID.F_Mask:
                        this.plotOpt.skipNPTH_Pads = false;
                        this.plotOpt.drillMarks = DrillMarksType.NO_DRILL_SHAPE;
                        if (board.boardDesignSetting.solderMaskMinWidth === 0) {
                            this.plotStandardLayer(board);
                        } else {
                            this.plotSolderMaskLayer(board, board.boardDesignSetting.solderMaskMinWidth);
                        }
                        break;
                    case kicad_pcb_1.PCB_LAYER_ID.B_Adhes:
                    case kicad_pcb_1.PCB_LAYER_ID.F_Adhes:
                    case kicad_pcb_1.PCB_LAYER_ID.B_Paste:
                    case kicad_pcb_1.PCB_LAYER_ID.F_Paste:
                        this.plotOpt.skipNPTH_Pads = false;
                        this.plotOpt.drillMarks = DrillMarksType.NO_DRILL_SHAPE;
                        this.plotStandardLayer(board);
                        break;
                    case kicad_pcb_1.PCB_LAYER_ID.F_SilkS:
                    case kicad_pcb_1.PCB_LAYER_ID.B_SilkS:
                        this.plotSilkScreen(board);
                        break;
                    case kicad_pcb_1.PCB_LAYER_ID.Dwgs_User:
                    case kicad_pcb_1.PCB_LAYER_ID.Cmts_User:
                    case kicad_pcb_1.PCB_LAYER_ID.Eco1_User:
                    case kicad_pcb_1.PCB_LAYER_ID.Eco2_User:
                    case kicad_pcb_1.PCB_LAYER_ID.Edge_Cuts:
                    case kicad_pcb_1.PCB_LAYER_ID.Margin:
                    case kicad_pcb_1.PCB_LAYER_ID.F_CrtYd:
                    case kicad_pcb_1.PCB_LAYER_ID.B_CrtYd:
                    case kicad_pcb_1.PCB_LAYER_ID.F_Fab:
                    case kicad_pcb_1.PCB_LAYER_ID.B_Fab:
                        this.plotOpt.skipNPTH_Pads = false;
                        this.plotOpt.drillMarks = DrillMarksType.NO_DRILL_SHAPE;
                        this.plotSilkScreen(board);
                        break;
                    default:
                        this.plotOpt.skipNPTH_Pads = false;
                        this.plotOpt.drillMarks = DrillMarksType.NO_DRILL_SHAPE;
                        this.plotSilkScreen(board);
                        break;
                }
            }
        }
    }, {
        key: "plotFilledAreas",
        value: function plotFilledAreas(board, zone) {
            var polyList = zone.filledPolygons;
            if (!polyList.length) return;
            this.plotter.setColor(this.getColor(zone.layer));
            var _iteratorNormalCompletion16 = true;
            var _didIteratorError16 = false;
            var _iteratorError16 = undefined;

            try {
                for (var _iterator16 = polyList[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {
                    var poly = _step16.value;

                    var corners = [];
                    var _iteratorNormalCompletion17 = true;
                    var _didIteratorError17 = false;
                    var _iteratorError17 = undefined;

                    try {
                        for (var _iterator17 = poly[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {
                            var point = _step17.value;

                            corners.push(point);
                        }
                    } catch (err) {
                        _didIteratorError17 = true;
                        _iteratorError17 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion17 && _iterator17.return) {
                                _iterator17.return();
                            }
                        } finally {
                            if (_didIteratorError17) {
                                throw _iteratorError17;
                            }
                        }
                    }

                    corners.push(corners[0]);
                    if (this.getPlotMode() === kicad_common_1.Fill.FILLED_SHAPE) {
                        if (zone.fillMode === 0) {
                            this.plotter.polyline(corners, kicad_common_1.Fill.FILLED_SHAPE, zone.minThickness);
                        } else {
                            var _iteratorNormalCompletion18 = true;
                            var _didIteratorError18 = false;
                            var _iteratorError18 = undefined;

                            try {
                                for (var _iterator18 = zone.fillSegments[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {
                                    var segs = _step18.value;
                                    var _iteratorNormalCompletion19 = true;
                                    var _didIteratorError19 = false;
                                    var _iteratorError19 = undefined;

                                    try {
                                        for (var _iterator19 = segs[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {
                                            var seg = _step19.value;

                                            this.thickSegment(seg.start, seg.end, zone.minThickness, this.getPlotMode());
                                        }
                                    } catch (err) {
                                        _didIteratorError19 = true;
                                        _iteratorError19 = err;
                                    } finally {
                                        try {
                                            if (!_iteratorNormalCompletion19 && _iterator19.return) {
                                                _iterator19.return();
                                            }
                                        } finally {
                                            if (_didIteratorError19) {
                                                throw _iteratorError19;
                                            }
                                        }
                                    }
                                }
                            } catch (err) {
                                _didIteratorError18 = true;
                                _iteratorError18 = err;
                            } finally {
                                try {
                                    if (!_iteratorNormalCompletion18 && _iterator18.return) {
                                        _iterator18.return();
                                    }
                                } finally {
                                    if (_didIteratorError18) {
                                        throw _iteratorError18;
                                    }
                                }
                            }

                            if (zone.minThickness > 0) {
                                this.plotter.polyline(corners, kicad_common_1.Fill.NO_FILL, zone.minThickness);
                            }
                        }
                    } else {
                        if (zone.minThickness > 0) {
                            for (var i = 1, len = corners.length; i < len; i++) {
                                this.thickSegment(corners[i - 1], corners[i], zone.minThickness, this.getPlotMode());
                            }
                        }
                    }
                }
            } catch (err) {
                _didIteratorError16 = true;
                _iteratorError16 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion16 && _iterator16.return) {
                        _iterator16.return();
                    }
                } finally {
                    if (_didIteratorError16) {
                        throw _iteratorError16;
                    }
                }
            }
        }
    }, {
        key: "plotPad",
        value: function plotPad(board, pad, color, fill) {
            // console.log('plotPad', pad, color, fill);
            this.plotter.setColor(color);
            if (pad.shape === kicad_pcb_1.PadShape.CIRCLE) {
                this.flashPadCircle(pad.pos, pad.size.width, fill);
            } else if (pad.shape === kicad_pcb_1.PadShape.RECT) {
                this.flashPadRect(pad.pos, pad.size, pad.orientation, fill);
            } else if (pad.shape === kicad_pcb_1.PadShape.OVAL) {
                this.flashPadOval(pad.pos, pad.size, pad.orientation, fill);
            } else if (pad.shape === kicad_pcb_1.PadShape.TRAPEZOID) {
                var coords = [];
                var sw = pad.size.width >> 1;
                var sh = pad.size.height >> 1;
                var dw = pad.delta.width >> 1;
                var dh = pad.delta.height >> 1;
                if (dw < 0 && dw <= -sh) dw = -sh + 1;
                if (dw > 0 && dw >= sh) dw = sh - 1;
                if (dh < 0 && dh <= -sw) dh = -sw + 1;
                if (dh > 0 && dh >= sw) dh = sw - 1;
                coords.push(new kicad_common_1.Point(-sw - dh, +sh + dw));
                coords.push(new kicad_common_1.Point(-sw + dh, -sh - dw));
                coords.push(new kicad_common_1.Point(+sw - dh, -sh + dw));
                coords.push(new kicad_common_1.Point(+sw + dh, +sh - dw));
                this.flashPadTrapezoid(pad.pos, coords, pad.orientation, fill);
            } else if (pad.shape === kicad_pcb_1.PadShape.ROUNDRECT) {
                var r = pad.size.width > pad.size.height ? pad.size.height : pad.size.width;
                r = Math.floor(r * pad.roundRectRatio);
                this.flashPadRoundRect(pad.pos, pad.size, r, pad.orientation, fill);
            }
        }
    }, {
        key: "plotDrillMarks",
        value: function plotDrillMarks(board) {
            if (this.getPlotMode() === kicad_common_1.Fill.FILLED_SHAPE) {
                this.plotter.setColor(kicad_common_1.Color.WHITE);
            }
            var _iteratorNormalCompletion20 = true;
            var _didIteratorError20 = false;
            var _iteratorError20 = undefined;

            try {
                for (var _iterator20 = board.vias[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {
                    var via = _step20.value;

                    this.plotOneDrillMark(kicad_pcb_1.PadDrillShape.CIRCLE, via.start, new kicad_common_1.Size(via.drill, 0), new kicad_common_1.Size(via.width, 0), 0, 0);
                }
            } catch (err) {
                _didIteratorError20 = true;
                _iteratorError20 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion20 && _iterator20.return) {
                        _iterator20.return();
                    }
                } finally {
                    if (_didIteratorError20) {
                        throw _iteratorError20;
                    }
                }
            }

            var _iteratorNormalCompletion21 = true;
            var _didIteratorError21 = false;
            var _iteratorError21 = undefined;

            try {
                for (var _iterator21 = board.modules[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {
                    var mod = _step21.value;
                    var _iteratorNormalCompletion22 = true;
                    var _didIteratorError22 = false;
                    var _iteratorError22 = undefined;

                    try {
                        for (var _iterator22 = mod.pads[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {
                            var pad = _step22.value;

                            if (!pad.drillSize.width) continue;
                            this.plotOneDrillMark(pad.drillShape, pad.pos, pad.drillSize, pad.size, pad.orientation, 0);
                        }
                    } catch (err) {
                        _didIteratorError22 = true;
                        _iteratorError22 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion22 && _iterator22.return) {
                                _iterator22.return();
                            }
                        } finally {
                            if (_didIteratorError22) {
                                throw _iteratorError22;
                            }
                        }
                    }
                }
            } catch (err) {
                _didIteratorError21 = true;
                _iteratorError21 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion21 && _iterator21.return) {
                        _iterator21.return();
                    }
                } finally {
                    if (_didIteratorError21) {
                        throw _iteratorError21;
                    }
                }
            }
        }
    }, {
        key: "plotOneDrillMark",
        value: function plotOneDrillMark(shape, pos, drillSize, padSize, orientation, smallDrill) {
            drillSize = kicad_common_1.Size.from(drillSize);
            if (smallDrill && shape === kicad_pcb_1.PadDrillShape.CIRCLE) {
                drillSize.width = Math.min(smallDrill, drillSize.width);
            }
            drillSize.width = kicad_common_1.Clamp(1, drillSize.width, padSize.width - 1);
            drillSize.height = kicad_common_1.Clamp(1, drillSize.height, padSize.height - 1);
            if (shape === kicad_pcb_1.PadDrillShape.OBLONG) {
                this.flashPadOval(pos, drillSize, orientation, this.getPlotMode());
            } else {
                this.flashPadCircle(pos, drillSize.width, this.getPlotMode());
            }
        }
    }, {
        key: "plotBoardGraphicItems",
        value: function plotBoardGraphicItems(board) {
            var _iteratorNormalCompletion23 = true;
            var _didIteratorError23 = false;
            var _iteratorError23 = undefined;

            try {
                for (var _iterator23 = board.drawSegments[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {
                    var seg = _step23.value;

                    this.plotDrawSegment(board, seg);
                }
            } catch (err) {
                _didIteratorError23 = true;
                _iteratorError23 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion23 && _iterator23.return) {
                        _iterator23.return();
                    }
                } finally {
                    if (_didIteratorError23) {
                        throw _iteratorError23;
                    }
                }
            }

            var _iteratorNormalCompletion24 = true;
            var _didIteratorError24 = false;
            var _iteratorError24 = undefined;

            try {
                for (var _iterator24 = board.dimensions[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {
                    var dim = _step24.value;

                    this.plotDimension(board, dim);
                }
            } catch (err) {
                _didIteratorError24 = true;
                _iteratorError24 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion24 && _iterator24.return) {
                        _iterator24.return();
                    }
                } finally {
                    if (_didIteratorError24) {
                        throw _iteratorError24;
                    }
                }
            }

            var _iteratorNormalCompletion25 = true;
            var _didIteratorError25 = false;
            var _iteratorError25 = undefined;

            try {
                for (var _iterator25 = board.texts[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {
                    var text = _step25.value;

                    this.plotBoardText(board, text);
                }
            } catch (err) {
                _didIteratorError25 = true;
                _iteratorError25 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion25 && _iterator25.return) {
                        _iterator25.return();
                    }
                } finally {
                    if (_didIteratorError25) {
                        throw _iteratorError25;
                    }
                }
            }

            var _iteratorNormalCompletion26 = true;
            var _didIteratorError26 = false;
            var _iteratorError26 = undefined;

            try {
                for (var _iterator26 = board.targets[Symbol.iterator](), _step26; !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {
                    // TODO

                    var target = _step26.value;
                }
            } catch (err) {
                _didIteratorError26 = true;
                _iteratorError26 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion26 && _iterator26.return) {
                        _iterator26.return();
                    }
                } finally {
                    if (_didIteratorError26) {
                        throw _iteratorError26;
                    }
                }
            }
        }
    }, {
        key: "plotBoardText",
        value: function plotBoardText(board, text) {
            if (!this.layerMask.has(text.layer)) return;
            var color = this.getColor(text.layer);
            var t = text.text.replace(/\\n/g, "\n");
            this.plotter.text(text.pos, color, t, text.angle, text.size, text.hjustify, text.vjustify, text.lineWidth, text.bold, text.italic);
        }
    }, {
        key: "plotDrawSegment",
        value: function plotDrawSegment(board, seg) {
            var start = kicad_common_1.Point.from(seg.start);
            var end = kicad_common_1.Point.from(seg.end);
            var lineWidth = seg.lineWidth;
            this.plotter.setColor(this.getColor(seg.layer));
            this.plotter.setCurrentLineWidth(lineWidth);
            if (seg.shape === kicad_pcb_1.Shape.CIRCLE) {
                var radius = kicad_common_1.GetLineLength(end, start);
                this.thickCircle(start, radius * 2, lineWidth, this.getPlotMode());
            } else if (seg.shape === kicad_pcb_1.Shape.ARC) {
                var _radius2 = kicad_common_1.GetLineLength(end, start);
                var startAngle = kicad_common_1.ArcTangente(end.y - start.y, end.x - start.x);
                var endAngle = startAngle + seg.angle;
                this.thickArc(start, endAngle, startAngle, _radius2, lineWidth, this.getPlotMode());
            } else if (seg.shape === kicad_pcb_1.Shape.CURVE) {
                for (var i = 1, len = seg.bezierPoints.length; i < len; i++) {
                    this.thickSegment(seg.bezierPoints[i - 1], seg.bezierPoints[i], lineWidth, this.getPlotMode());
                }
            } else {
                this.thickSegment(start, end, lineWidth, this.getPlotMode());
            }
        }
    }, {
        key: "plotDimension",
        value: function plotDimension(board, dim) {
            if (!this.layerMask.has(dim.layer)) return;
            var draw = new kicad_pcb_1.DrawSegment();
            draw.lineWidth = dim.lineWidth;
            draw.layer = dim.layer;
            this.plotter.setColor(this.getColor(dim.layer));
            console.log(dim.text);
            this.plotBoardText(board, dim.text);
            draw.start = dim.crossBarO;
            draw.end = dim.crossBarF;
            this.plotDrawSegment(board, draw);
            draw.start = dim.featureLineGO;
            draw.end = dim.featureLineGF;
            this.plotDrawSegment(board, draw);
            draw.start = dim.featureLineDO;
            draw.end = dim.featureLineDF;
            this.plotDrawSegment(board, draw);
            draw.start = dim.crossBarF;
            draw.end = dim.arrowD1F;
            this.plotDrawSegment(board, draw);
            draw.start = dim.crossBarF;
            draw.end = dim.arrowD2F;
            this.plotDrawSegment(board, draw);
            draw.start = dim.crossBarO;
            draw.end = dim.arrowG1F;
            this.plotDrawSegment(board, draw);
            draw.start = dim.crossBarO;
            draw.end = dim.arrowG2F;
            this.plotDrawSegment(board, draw);
        }
    }, {
        key: "getColor",
        value: function getColor(layer) {
            var color = DEFAULT_LAYER_COLORS[layer] || kicad_common_1.Color.WHITE;
            if (color.is(kicad_common_1.Color.WHITE)) {
                return kicad_common_1.Color.LIGHTGRAY;
            } else {
                return color;
            }
        }
    }, {
        key: "getPlotMode",
        value: function getPlotMode() {
            return kicad_common_1.Fill.FILLED_SHAPE;
        }
    }]);

    return PCBPlotter;
}();

exports.PCBPlotter = PCBPlotter;
var DrillMarksType;
(function (DrillMarksType) {
    DrillMarksType[DrillMarksType["NO_DRILL_SHAPE"] = 0] = "NO_DRILL_SHAPE";
    DrillMarksType[DrillMarksType["SMALL_DRILL_SHAPE"] = 1] = "SMALL_DRILL_SHAPE";
    DrillMarksType[DrillMarksType["FULL_DRILL_SHAPE"] = 2] = "FULL_DRILL_SHAPE";
})(DrillMarksType = exports.DrillMarksType || (exports.DrillMarksType = {}));

var PCBPlotOptions = function PCBPlotOptions() {
    _classCallCheck(this, PCBPlotOptions);

    this.drillMarks = DrillMarksType.SMALL_DRILL_SHAPE;
    this.skipNPTH_Pads = true;
};

exports.PCBPlotOptions = PCBPlotOptions;

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, global) {/*!
 * Vue.js v2.4.2
 * (c) 2014-2017 Evan You
 * Released under the MIT License.
 */


/*  */

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

var _toString = Object.prototype.toString;

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(val);
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if a attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,is');

/**
 * Remove an item from an array
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /([^-])([A-Z])/g;
var hyphenate = cached(function (str) {
  return str
    .replace(hyphenateRE, '$1-$2')
    .replace(hyphenateRE, '$1-$2')
    .toLowerCase()
});

/**
 * Simple bind, faster than native
 */
function bind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }
  // record original fn length
  boundFn._length = fn.length;
  return boundFn
}

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/**
 * Return same value
 */
var identity = function (_) { return _; };

/**
 * Generate a static keys string from compiler modules.
 */
function genStaticKeys (modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || [])
  }, []).join(',')
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated'
];

/*  */

var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: process.env.NODE_ENV !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: process.env.NODE_ENV !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

var emptyObject = Object.freeze({});

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

var warn = noop;
var tip = noop;
var formatComponentName = (null); // work around flow check

if (process.env.NODE_ENV !== 'production') {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var name = typeof vm === 'string'
      ? vm
      : typeof vm === 'function' && vm.options
        ? vm.options.name
        : vm._isVue
          ? vm.$options.name || vm.$options._componentTag
          : vm.name;

    var file = vm._isVue && vm.$options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  var generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

function handleError (err, vm, info) {
  if (config.errorHandler) {
    config.errorHandler.call(null, err, vm, info);
  } else {
    if (process.env.NODE_ENV !== 'production') {
      warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    }
    /* istanbul ignore else */
    if (inBrowser && typeof console !== 'undefined') {
      console.error(err);
    } else {
      throw err
    }
  }
}

/*  */
/* globals MutationObserver */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0;
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

// Firefix has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

/**
 * Defer a task to execute it asynchronously.
 */
var nextTick = (function () {
  var callbacks = [];
  var pending = false;
  var timerFunc;

  function nextTickHandler () {
    pending = false;
    var copies = callbacks.slice(0);
    callbacks.length = 0;
    for (var i = 0; i < copies.length; i++) {
      copies[i]();
    }
  }

  // the nextTick behavior leverages the microtask queue, which can be accessed
  // via either native Promise.then or MutationObserver.
  // MutationObserver has wider support, however it is seriously bugged in
  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
  // completely stops working after triggering a few times... so, if native
  // Promise is available, we will use it:
  /* istanbul ignore if */
  if (typeof Promise !== 'undefined' && isNative(Promise)) {
    var p = Promise.resolve();
    var logError = function (err) { console.error(err); };
    timerFunc = function () {
      p.then(nextTickHandler).catch(logError);
      // in problematic UIWebViews, Promise.then doesn't completely break, but
      // it can get stuck in a weird state where callbacks are pushed into the
      // microtask queue but the queue isn't being flushed, until the browser
      // needs to do some other work, e.g. handle a timer. Therefore we can
      // "force" the microtask queue to be flushed by adding an empty timer.
      if (isIOS) { setTimeout(noop); }
    };
  } else if (typeof MutationObserver !== 'undefined' && (
    isNative(MutationObserver) ||
    // PhantomJS and iOS 7.x
    MutationObserver.toString() === '[object MutationObserverConstructor]'
  )) {
    // use MutationObserver where native Promise is not available,
    // e.g. PhantomJS IE11, iOS7, Android 4.4
    var counter = 1;
    var observer = new MutationObserver(nextTickHandler);
    var textNode = document.createTextNode(String(counter));
    observer.observe(textNode, {
      characterData: true
    });
    timerFunc = function () {
      counter = (counter + 1) % 2;
      textNode.data = String(counter);
    };
  } else {
    // fallback to setTimeout
    /* istanbul ignore next */
    timerFunc = function () {
      setTimeout(nextTickHandler, 0);
    };
  }

  return function queueNextTick (cb, ctx) {
    var _resolve;
    callbacks.push(function () {
      if (cb) {
        try {
          cb.call(ctx);
        } catch (e) {
          handleError(e, ctx, 'nextTick');
        }
      } else if (_resolve) {
        _resolve(ctx);
      }
    });
    if (!pending) {
      pending = true;
      timerFunc();
    }
    if (!cb && typeof Promise !== 'undefined') {
      return new Promise(function (resolve, reject) {
        _resolve = resolve;
      })
    }
  }
})();

var _Set;
/* istanbul ignore if */
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = (function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */


var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget (_target) {
  if (Dep.target) { targetStack.push(Dep.target); }
  Dep.target = _target;
}

function popTarget () {
  Dep.target = targetStack.pop();
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);[
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
]
.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * By default, when a reactive property is set, the new value is
 * also converted to become reactive. However when passing down props,
 * we don't want to force conversion because the value may be a nested value
 * under a frozen data structure. Converting it would defeat the optimization.
 */
var observerState = {
  shouldConvert: true
};

/**
 * Observer class that are attached to each observed
 * object. Once attached, the observer converts target
 * object's property keys into getter/setters that
 * collect dependencies and dispatches updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i], obj[keys[i]]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src, keys) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value)) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    observerState.shouldConvert &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
        }
        if (Array.isArray(value)) {
          dependArray(value);
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if (process.env.NODE_ENV !== 'production' && customSetter) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (hasOwn(target, key)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    process.env.NODE_ENV !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    process.env.NODE_ENV !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (process.env.NODE_ENV !== 'production') {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this) : parentVal
      )
    }
  } else if (parentVal || childVal) {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm)
        : undefined;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      process.env.NODE_ENV !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn.call(this, parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  return childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (parentVal, childVal) {
  var res = Object.create(parentVal || null);
  return childVal
    ? extend(res, childVal)
    : res
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (parentVal, childVal) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key in childVal) {
    var parent = ret[key];
    var child = childVal[key];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (parentVal, childVal) {
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    var lower = key.toLowerCase();
    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {
      warn(
        'Do not use built-in or reserved HTML elements as component ' +
        'id: ' + key
      );
    }
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (process.env.NODE_ENV !== 'production') {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options) {
  var inject = options.inject;
  if (Array.isArray(inject)) {
    var normalized = options.inject = {};
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = inject[i];
    }
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (process.env.NODE_ENV !== 'production') {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child);
  normalizeInject(child);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */

function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // handle boolean props
  if (isType(Boolean, prop.type)) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
      value = true;
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldConvert = observerState.shouldConvert;
    observerState.shouldConvert = true;
    observe(value);
    observerState.shouldConvert = prevShouldConvert;
  }
  if (process.env.NODE_ENV !== 'production') {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if (process.env.NODE_ENV !== 'production' && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn(
      'Invalid prop: type check failed for prop "' + name + '".' +
      ' Expected ' + expectedTypes.map(capitalize).join(', ') +
      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    valid = typeof value === expectedType.toLowerCase();
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isType (type, fn) {
  if (!Array.isArray(fn)) {
    return getType(fn) === getType(type)
  }
  for (var i = 0, len = fn.length; i < len; i++) {
    if (getType(fn[i]) === getType(type)) {
      return true
    }
  }
  /* istanbul ignore next */
  return false
}

/*  */

var mark;
var measure;

if (process.env.NODE_ENV !== 'production') {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (process.env.NODE_ENV !== 'production') {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      "referenced during render. Make sure to declare reactive data " +
      "properties in the data option.",
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' &&
    Proxy.toString().match(/native code/);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.functionalContext = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: {} };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    vnode.children,
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.isCloned = true;
  return cloned
}

function cloneVNodes (vnodes) {
  var len = vnodes.length;
  var res = new Array(len);
  for (var i = 0; i < len; i++) {
    res[i] = cloneVNode(vnodes[i]);
  }
  return res
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        cloned[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments)
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  vm
) {
  var name, cur, old, event;
  for (name in on) {
    cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
      process.env.NODE_ENV !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (process.env.NODE_ENV !== 'production') {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    last = res[res.length - 1];
    //  nested
    if (Array.isArray(c)) {
      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i)));
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        (last).text += String(c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[res.length - 1] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function ensureCtor (comp, base) {
  if (comp.__esModule && comp.default) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor,
  context
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      process.env.NODE_ENV !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            if (isUndef(factory.resolved)) {
              reject(
                process.env.NODE_ENV !== 'production'
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && isDef(c.componentOptions)) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn, once$$1) {
  if (once$$1) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        this$1.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (arguments.length === 1) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (process.env.NODE_ENV !== 'production') {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        try {
          cbs[i].apply(vm, args);
        } catch (e) {
          handleError(e, vm, ("event handler for \"" + event + "\""));
        }
      }
    }
    return vm
  };
}

/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  var slots = {};
  if (!children) {
    return slots
  }
  var defaultSlot = [];
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.functionalContext === context) &&
      child.data && child.data.slot != null
    ) {
      var name = child.data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children);
      } else {
        slot.push(child);
      }
    } else {
      defaultSlot.push(child);
    }
  }
  // ignore whitespace
  if (!defaultSlot.every(isWhitespace)) {
    slots.default = defaultSlot;
  }
  return slots
}

function isWhitespace (node) {
  return node.isComment || node.text === ' '
}

function resolveScopedSlots (
  fns, // see flow/vnode
  res
) {
  res = res || {};
  for (var i = 0; i < fns.length; i++) {
    if (Array.isArray(fns[i])) {
      resolveScopedSlots(fns[i], res);
    } else {
      res[fns[i].key] = fns[i].fn;
    }
  }
  return res
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(
        vm.$el, vnode, hydrating, false /* removeOnly */,
        vm.$options._parentElm,
        vm.$options._refElm
      );
      // no need for the ref nodes after initial patch
      // this prevents keeping a detached DOM tree in memory (#5851)
      vm.$options._parentElm = vm.$options._refElm = null;
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (process.env.NODE_ENV !== 'production') {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure((name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure((name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  vm._watcher = new Watcher(vm, updateComponent, noop);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (process.env.NODE_ENV !== 'production') {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listensers hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data && parentVnode.data.attrs;
  vm.$listeners = listeners;

  // update props
  if (propsData && vm.$options.props) {
    observerState.shouldConvert = false;
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      props[key] = validateProp(key, vm.$options.props, propsData, vm);
    }
    observerState.shouldConvert = true;
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  if (listeners) {
    var oldListeners = vm.$options._parentListeners;
    vm.$options._parentListeners = listeners;
    updateComponentListeners(vm, listeners, oldListeners);
  }
  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (process.env.NODE_ENV !== 'production') {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, (hook + " hook"));
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
}

/*  */


var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (process.env.NODE_ENV !== 'production') {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if (process.env.NODE_ENV !== 'production' && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options
) {
  this.vm = vm;
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression = process.env.NODE_ENV !== 'production'
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      process.env.NODE_ENV !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
    var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
var seenObjects = new _Set();
function traverse (val) {
  seenObjects.clear();
  _traverse(val, seenObjects);
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function checkOptionType (vm, name) {
  var option = vm.$options[name];
  if (!isPlainObject(option)) {
    warn(
      ("component option \"" + name + "\" should be an object."),
      vm
    );
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  observerState.shouldConvert = isRoot;
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (process.env.NODE_ENV !== 'production') {
      if (isReservedAttribute(key) || config.isReservedAttr(key)) {
        warn(
          ("\"" + key + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (vm.$parent && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  observerState.shouldConvert = true;
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    process.env.NODE_ENV !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (process.env.NODE_ENV !== 'production') {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
      process.env.NODE_ENV !== 'production' && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  try {
    return data.call(vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'computed');
  var watchers = vm._computedWatchers = Object.create(null);

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (process.env.NODE_ENV !== 'production' && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }
    // create internal watcher for the computed property.
    watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (process.env.NODE_ENV !== 'production') {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (target, key, userDef) {
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = createComputedGetter(key);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? userDef.cache !== false
        ? createComputedGetter(key)
        : userDef.get
      : noop;
    sharedPropertyDefinition.set = userDef.set
      ? userDef.set
      : noop;
  }
  if (process.env.NODE_ENV !== 'production' &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function initMethods (vm, methods) {
  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'methods');
  var props = vm.$options.props;
  for (var key in methods) {
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
    if (process.env.NODE_ENV !== 'production') {
      if (methods[key] == null) {
        warn(
          "method \"" + key + "\" has an undefined value in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
    }
  }
}

function initWatch (vm, watch) {
  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'watch');
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  keyOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(keyOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (process.env.NODE_ENV !== 'production') {
    dataDef.set = function (newData) {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    observerState.shouldConvert = false;
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (process.env.NODE_ENV !== 'production') {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
    observerState.shouldConvert = true;
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
        ? Reflect.ownKeys(inject)
        : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = inject[key];
      var source = vm;
      while (source) {
        if (source._provided && provideKey in source._provided) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (process.env.NODE_ENV !== 'production' && !source) {
        warn(("Injection \"" + key + "\" not found"), vm);
      }
    }
    return result
  }
}

/*  */

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  context,
  children
) {
  var props = {};
  var propOptions = Ctor.options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || {});
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var _context = Object.create(context);
  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };
  var vnode = Ctor.options.render.call(null, h, {
    data: data,
    props: props,
    children: children,
    parent: context,
    listeners: data.on || {},
    injections: resolveInject(Ctor.options.inject, context),
    slots: function () { return resolveSlots(children, context); }
  });
  if (vnode instanceof VNode) {
    vnode.functionalContext = context;
    vnode.functionalOptions = Ctor.options;
    if (data.slot) {
      (vnode.data || (vnode.data = {})).slot = data.slot;
    }
  }
  return vnode
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

// hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (
    vnode,
    hydrating,
    parentElm,
    refElm
  ) {
    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance,
        parentElm,
        refElm
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    } else if (vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (process.env.NODE_ENV !== 'production') {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // merge component management hooks onto the placeholder node
  mergeHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );
  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm,
  refElm
) {
  var vnodeComponentOptions = vnode.componentOptions;
  var options = {
    _isComponent: true,
    parent: parent,
    propsData: vnodeComponentOptions.propsData,
    _componentTag: vnodeComponentOptions.tag,
    _parentVnode: vnode,
    _parentListeners: vnodeComponentOptions.listeners,
    _renderChildren: vnodeComponentOptions.children,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnodeComponentOptions.Ctor(options)
}

function mergeHooks (data) {
  if (!data.hook) {
    data.hook = {};
  }
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var fromParent = data.hook[key];
    var ours = componentVNodeHooks[key];
    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
  }
}

function mergeHook$1 (one, two) {
  return function (a, b, c, d) {
    one(a, b, c, d);
    two(a, b, c, d);
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    process.env.NODE_ENV !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if (process.env.NODE_ENV !== 'production' &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    warn(
      'Avoid using non-primitive value as key, ' +
      'use string/number value instead.',
      context
    );
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (isDef(vnode)) {
    if (ns) { applyNS(vnode, ns); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    return
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && isUndef(child.ns)) {
        applyNS(child, ns);
      }
    }
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  if (isDef(ret)) {
    (ret)._isVList = true;
  }
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      props = extend(extend({}, bindObject), props);
    }
    return scopedSlotFn(props) || fallback
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes && process.env.NODE_ENV !== 'production') {
      slotNodes._rendered && warn(
        "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
        "- this will likely cause render errors.",
        this
      );
      slotNodes._rendered = true;
    }
    return slotNodes || fallback
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

/**
 * Runtime helper for checking keyCodes from config.
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInAlias
) {
  var keyCodes = config.keyCodes[key] || builtInAlias;
  if (Array.isArray(keyCodes)) {
    return keyCodes.indexOf(eventKeyCode) === -1
  } else {
    return keyCodes !== eventKeyCode
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
      process.env.NODE_ENV !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var tree = this._staticTrees[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree by doing a shallow clone.
  if (tree && !isInFor) {
    return Array.isArray(tree)
      ? cloneVNodes(tree)
      : cloneVNode(tree)
  }
  // otherwise, render a fresh tree.
  tree = this._staticTrees[index] =
    this.$options.staticRenderFns[index].call(this._renderProxy);
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      process.env.NODE_ENV !== 'production' && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(ours, existing) : ours;
      }
    }
  }
  return data
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null;
  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;
  /* istanbul ignore else */
  if (process.env.NODE_ENV !== 'production') {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);
    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, null, true);
  }
}

function renderMixin (Vue) {
  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var staticRenderFns = ref.staticRenderFns;
    var _parentVnode = ref._parentVnode;

    if (vm._isMounted) {
      // clone slot nodes on re-renders
      for (var key in vm.$slots) {
        vm.$slots[key] = cloneVNodes(vm.$slots[key]);
      }
    }

    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;

    if (staticRenderFns && !vm._staticTrees) {
      vm._staticTrees = [];
    }
    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render function");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (process.env.NODE_ENV !== 'production') {
        vnode = vm.$options.renderError
          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)
          : vm._vnode;
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };

  // internal render helpers.
  // these are exposed on the instance prototype to reduce generated render
  // code size.
  Vue.prototype._o = markOnce;
  Vue.prototype._n = toNumber;
  Vue.prototype._s = toString;
  Vue.prototype._l = renderList;
  Vue.prototype._t = renderSlot;
  Vue.prototype._q = looseEqual;
  Vue.prototype._i = looseIndexOf;
  Vue.prototype._m = renderStatic;
  Vue.prototype._f = resolveFilter;
  Vue.prototype._k = checkKeyCodes;
  Vue.prototype._b = bindObjectProps;
  Vue.prototype._v = createTextVNode;
  Vue.prototype._e = createEmptyVNode;
  Vue.prototype._u = resolveScopedSlots;
  Vue.prototype._g = bindObjectListeners;
}

/*  */

var uid$1 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$1++;

    var startTag, endTag;
    /* istanbul ignore if */
    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
      startTag = "vue-perf-init:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (process.env.NODE_ENV !== 'production') {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(((vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  opts.parent = options.parent;
  opts.propsData = options.propsData;
  opts._parentVnode = options._parentVnode;
  opts._parentListeners = options._parentListeners;
  opts._renderChildren = options._renderChildren;
  opts._componentTag = options._componentTag;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;
  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified
}

function dedupe (latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res
  } else {
    return latest
  }
}

function Vue$3 (options) {
  if (process.env.NODE_ENV !== 'production' &&
    !(this instanceof Vue$3)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue$3);
stateMixin(Vue$3);
eventsMixin(Vue$3);
lifecycleMixin(Vue$3);
renderMixin(Vue$3);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if (process.env.NODE_ENV !== 'production') {
      if (!/^[a-zA-Z][\w-]*$/.test(name)) {
        warn(
          'Invalid component name: "' + name + '". Component names ' +
          'can only contain alphanumeric characters and the hyphen, ' +
          'and must start with a letter.'
        );
      }
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if (process.env.NODE_ENV !== 'production') {
          if (type === 'component' && config.isReservedTag(id)) {
            warn(
              'Do not use built-in or reserved HTML elements as component ' +
              'id: ' + id
            );
          }
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */

var patternTypes = [String, RegExp, Array];

function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (cache, current, filter) {
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        if (cachedNode !== current) {
          pruneCacheEntry(cachedNode);
        }
        cache[key] = null;
      }
    }
  }
}

function pruneCacheEntry (vnode) {
  if (vnode) {
    vnode.componentInstance.$destroy();
  }
}

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes
  },

  created: function created () {
    this.cache = Object.create(null);
  },

  destroyed: function destroyed () {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache[key]);
    }
  },

  watch: {
    include: function include (val) {
      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });
    },
    exclude: function exclude (val) {
      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });
    }
  },

  render: function render () {
    var vnode = getFirstComponentChild(this.$slots.default);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      if (name && (
        (this.include && !matches(this.include, name)) ||
        (this.exclude && matches(this.exclude, name))
      )) {
        return vnode
      }
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (this.cache[key]) {
        vnode.componentInstance = this.cache[key].componentInstance;
      } else {
        this.cache[key] = vnode;
      }
      vnode.data.keepAlive = true;
    }
    return vnode
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (process.env.NODE_ENV !== 'production') {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue$3);

Object.defineProperty(Vue$3.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue$3.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

Vue$3.version = '2.4.2';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isPreTag = function (tag) { return tag === 'pre'; };

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      process.env.NODE_ENV !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setAttribute (node, key, val) {
  node.setAttribute(key, val);
}


var nodeOps = Object.freeze({
	createElement: createElement$1,
	createElementNS: createElementNS,
	createTextNode: createTextNode,
	createComment: createComment,
	insertBefore: insertBefore,
	removeChild: removeChild,
	appendChild: appendChild,
	parentNode: parentNode,
	nextSibling: nextSibling,
	tagName: tagName,
	setTextContent: setTextContent,
	setAttribute: setAttribute
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!key) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *

/*
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        a.asyncFactory === b.asyncFactory &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

// Some browsers do not support dynamically changing type for <input>
// so they need to be treated as different nodes
function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  var inPre = 0;
  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {
    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (process.env.NODE_ENV !== 'production') {
        if (data && data.pre) {
          inPre++;
        }
        if (
          !inPre &&
          !vnode.ns &&
          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&
          config.isUnknownElement(tag)
        ) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }
      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if (process.env.NODE_ENV !== 'production' && data && data.pre) {
        inPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (ref$$1.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    var ancestor = vnode;
    while (ancestor) {
      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
        nodeOps.setAttribute(vnode.elm, i, '');
      }
      ancestor = ancestor.parent;
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setAttribute(vnode.elm, i, '');
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, elmToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
          newStartVnode = newCh[++newStartIdx];
        } else {
          elmToMove = oldCh[idxInOld];
          /* istanbul ignore if */
          if (process.env.NODE_ENV !== 'production' && !elmToMove) {
            warn(
              'It seems there are duplicate keys that is causing an update error. ' +
              'Make sure each v-for item has a unique key.'
            );
          }
          if (sameVnode(elmToMove, newStartVnode)) {
            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          }
        }
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var bailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue) {
    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.elm = elm;
      vnode.isAsyncPlaceholder = true;
      return true
    }
    if (process.env.NODE_ENV !== 'production') {
      if (!assertNodeMatch(elm, vnode)) {
        return false
      }
    }
    vnode.elm = elm;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          var childrenMatch = true;
          var childNode = elm.firstChild;
          for (var i$1 = 0; i$1 < children.length; i$1++) {
            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {
              childrenMatch = false;
              break
            }
            childNode = childNode.nextSibling;
          }
          // if childNode is not null, it means the actual childNodes list is
          // longer than the virtual children list.
          if (!childrenMatch || childNode) {
            if (process.env.NODE_ENV !== 'production' &&
              typeof console !== 'undefined' &&
              !bailed
            ) {
              bailed = true;
              console.warn('Parent: ', elm);
              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
            }
            return false
          }
        }
      }
      if (isDef(data)) {
        for (var key in data) {
          if (!isRenderedModule(key)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode) {
    if (isDef(vnode.tag)) {
      return (
        vnode.tag.indexOf('vue-component') === 0 ||
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (process.env.NODE_ENV !== 'production') {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }
        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1,
          nodeOps.nextSibling(oldElm)
        );

        if (isDef(vnode.parent)) {
          // component root element replaced.
          // update parent placeholder node element, recursively
          var ancestor = vnode.parent;
          while (ancestor) {
            ancestor.elm = vnode.elm;
            ancestor = ancestor.parent;
          }
          if (isPatchable(vnode)) {
            for (var i = 0; i < cbs.create.length; ++i) {
              cbs.create[i](emptyNode, vnode.parent);
            }
          }
        }

        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  /* istanbul ignore if */
  if (isIE9 && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, key);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, value);
    }
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters (exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
    } else if (
      c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C &&
      exp.charCodeAt(i - 1) !== 0x7C &&
      !curly && !square && !paren
    ) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22: inDouble = true; break         // "
        case 0x27: inSingle = true; break         // '
        case 0x60: inTemplateString = true; break // `
        case 0x28: paren++; break                 // (
        case 0x29: paren--; break                 // )
        case 0x5B: square++; break                // [
        case 0x5D: square--; break                // ]
        case 0x7B: curly++; break                 // {
        case 0x7D: curly--; break                 // }
      }
      if (c === 0x2f) { // /
        var j = i - 1;
        var p = (void 0);
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') { break }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter () {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression
}

function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + "," + args)
  }
}

/*  */

function baseWarn (msg) {
  console.error(("[Vue compiler]: " + msg));
}

function pluckModuleFunction (
  modules,
  key
) {
  return modules
    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
    : []
}

function addProp (el, name, value) {
  (el.props || (el.props = [])).push({ name: name, value: value });
}

function addAttr (el, name, value) {
  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
}

function addDirective (
  el,
  name,
  rawName,
  value,
  arg,
  modifiers
) {
  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
}

function addHandler (
  el,
  name,
  value,
  modifiers,
  important,
  warn
) {
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (
    process.env.NODE_ENV !== 'production' && warn &&
    modifiers && modifiers.prevent && modifiers.passive
  ) {
    warn(
      'passive and prevent can\'t be used together. ' +
      'Passive handler can\'t prevent default event.'
    );
  }
  // check capture modifier
  if (modifiers && modifiers.capture) {
    delete modifiers.capture;
    name = '!' + name; // mark the event as captured
  }
  if (modifiers && modifiers.once) {
    delete modifiers.once;
    name = '~' + name; // mark the event as once
  }
  /* istanbul ignore if */
  if (modifiers && modifiers.passive) {
    delete modifiers.passive;
    name = '&' + name; // mark the event as passive
  }
  var events;
  if (modifiers && modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }
  var newHandler = { value: value, modifiers: modifiers };
  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }
}

function getBindingAttr (
  el,
  name,
  getStatic
) {
  var dynamicValue =
    getAndRemoveAttr(el, ':' + name) ||
    getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue)
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue)
    }
  }
}

function getAndRemoveAttr (el, name) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break
      }
    }
  }
  return val
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel (
  el,
  value,
  modifiers
) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression =
      "(typeof " + baseValueExpression + " === 'string'" +
        "? " + baseValueExpression + ".trim()" +
        ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: ("(" + value + ")"),
    expression: ("\"" + value + "\""),
    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode (
  value,
  assignment
) {
  var modelRs = parseModel(value);
  if (modelRs.idx === null) {
    return (value + "=" + assignment)
  } else {
    return ("$set(" + (modelRs.exp) + ", " + (modelRs.idx) + ", " + assignment + ")")
  }
}

/**
 * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)
 *
 * for loop possible cases:
 *
 * - test
 * - test[idx]
 * - test[test1[idx]]
 * - test["a"][idx]
 * - xxx.test[a[a].test1[idx]]
 * - test.xxx.a["asa"][test1[idx]]
 *
 */

var len;
var str;
var chr;
var index$1;
var expressionPos;
var expressionEndPos;

function parseModel (val) {
  str = val;
  len = str.length;
  index$1 = expressionPos = expressionEndPos = 0;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    return {
      exp: val,
      idx: null
    }
  }

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.substring(0, expressionPos),
    idx: val.substring(expressionPos + 1, expressionEndPos)
  }
}

function next () {
  return str.charCodeAt(++index$1)
}

function eof () {
  return index$1 >= len
}

function isStringStart (chr) {
  return chr === 0x22 || chr === 0x27
}

function parseBracket (chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue
    }
    if (chr === 0x5B) { inBracket++; }
    if (chr === 0x5D) { inBracket--; }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break
    }
  }
}

function parseString (chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model (
  el,
  dir,
  _warn
) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (process.env.NODE_ENV !== 'production') {
    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (tag === 'input' && dynamicType) {
      warn$1(
        "<input :type=\"" + dynamicType + "\" v-model=\"" + value + "\">:\n" +
        "v-model does not support dynamic input types. Use v-if branches instead."
      );
    }
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
        "File inputs are read only. Use a v-on:change listener instead."
      );
    }
  }

  if (el.component) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (process.env.NODE_ENV !== 'production') {
    warn$1(
      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
      "v-model is not supported on this element type. " +
      'If you are working with contenteditable, it\'s recommended to ' +
      'wrap a library dedicated for that purpose inside a custom component.'
    );
  }

  // ensure runtime directive metadata
  return true
}

function genCheckboxModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked',
    "Array.isArray(" + value + ")" +
      "?_i(" + value + "," + valueBinding + ")>-1" + (
        trueValueBinding === 'true'
          ? (":(" + value + ")")
          : (":_q(" + value + "," + trueValueBinding + ")")
      )
  );
  addHandler(el, CHECKBOX_RADIO_TOKEN,
    "var $$a=" + value + "," +
        '$$el=$event.target,' +
        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
    'if(Array.isArray($$a)){' +
      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
          '$$i=_i($$a,$$v);' +
      "if($$el.checked){$$i<0&&(" + value + "=$$a.concat($$v))}" +
      "else{$$i>-1&&(" + value + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}" +
    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
    null, true
  );
}

function genRadioModel (
    el,
    value,
    modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);
}

function genSelect (
    el,
    value,
    modifiers
) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" +
    ".call($event.target.options,function(o){return o.selected})" +
    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
    "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + (genAssignmentCode(value, assignment));
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel (
  el,
  value,
  modifiers
) {
  var type = el.attrsMap.type;
  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy
    ? 'change'
    : type === 'range'
      ? RANGE_TOKEN
      : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', ("(" + value + ")"));
  addHandler(el, event, code, null, true);
  if (trim || number) {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  var event;
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    // Chrome fires microtasks in between click/change, leads to #4521
    event = isChrome ? 'click' : 'change';
    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function add$1 (
  event,
  handler,
  once$$1,
  capture,
  passive
) {
  if (once$$1) {
    var oldHandler = handler;
    var _target = target$1; // save current target element in closure
    handler = function (ev) {
      var res = arguments.length === 1
        ? oldHandler(ev)
        : oldHandler.apply(null, arguments);
      if (res !== null) {
        remove$2(event, handler, capture, _target);
      }
    };
  }
  target$1.addEventListener(
    event,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  event,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(event, handler, capture);
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, vnode, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (
  elm,
  vnode,
  checkVal
) {
  return (!elm.composing && (
    vnode.tag === 'option' ||
    isDirty(elm, checkVal) ||
    isInputChanged(elm, checkVal)
  ))
}

function isDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isInputChanged (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers) && modifiers.number) {
    return toNumber(value) !== toNumber(newVal)
  }
  if (isDef(modifiers) && modifiers.trim) {
    return value.trim() !== newVal.trim()
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likley wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser && window.requestAnimationFrame
  ? window.requestAnimationFrame.bind(window)
  : setTimeout;

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

function toMs (s) {
  return Number(s.slice(0, -1)) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      addTransitionClass(el, toClass);
      removeTransitionClass(el, startClass);
      if (!cb.cancelled && !userWantsControl) {
        if (isValidDuration(explicitEnterDuration)) {
          setTimeout(cb, explicitEnterDuration);
        } else {
          whenTransitionEnds(el, type, cb);
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        addTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled && !userWantsControl) {
          if (isValidDuration(explicitLeaveDuration)) {
            setTimeout(cb, explicitLeaveDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var model$1 = {
  inserted: function inserted (el, binding, vnode) {
    if (vnode.tag === 'select') {
      var cb = function () {
        setSelected(el, binding, vnode.context);
      };
      cb();
      /* istanbul ignore if */
      if (isIE || isEdge) {
        setTimeout(cb, 0);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        if (!isAndroid) {
          el.addEventListener('compositionstart', onCompositionStart);
          el.addEventListener('compositionend', onCompositionEnd);
        }
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },
  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        trigger(el, 'change');
      }
    }
  }
};

function setSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    process.env.NODE_ENV !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (value === oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: model$1,
  show: show
};

/*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$options._renderChildren;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if (process.env.NODE_ENV !== 'production' && children.length > 1) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if (process.env.NODE_ENV !== 'production' &&
      mode && mode !== 'in-out' && mode !== 'out-in'
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild && (oldChild.data.transition = extend({}, data));
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (process.env.NODE_ENV !== 'production') {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  beforeUpdate: function beforeUpdate () {
    // force removing pass
    this.__patch__(
      this._vnode,
      this.kept,
      false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    var body = document.body;
    var f = body.offsetHeight; // eslint-disable-line

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue$3.config.mustUseProp = mustUseProp;
Vue$3.config.isReservedTag = isReservedTag;
Vue$3.config.isReservedAttr = isReservedAttr;
Vue$3.config.getTagNamespace = getTagNamespace;
Vue$3.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue$3.options.directives, platformDirectives);
extend(Vue$3.options.components, platformComponents);

// install platform patch function
Vue$3.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
setTimeout(function () {
  if (config.devtools) {
    if (devtools) {
      devtools.emit('init', Vue$3);
    } else if (process.env.NODE_ENV !== 'production' && isChrome) {
      console[console.info ? 'info' : 'log'](
        'Download the Vue Devtools extension for a better development experience:\n' +
        'https://github.com/vuejs/vue-devtools'
      );
    }
  }
  if (process.env.NODE_ENV !== 'production' &&
    config.productionTip !== false &&
    inBrowser && typeof console !== 'undefined'
  ) {
    console[console.info ? 'info' : 'log'](
      "You are running Vue in development mode.\n" +
      "Make sure to turn on production mode when deploying for production.\n" +
      "See more tips at https://vuejs.org/guide/deployment.html"
    );
  }
}, 0);

/*  */

// check whether current browser encodes a char inside attribute values
function shouldDecode (content, encoded) {
  var div = document.createElement('div');
  div.innerHTML = "<div a=\"" + content + "\"/>";
  return div.innerHTML.indexOf(encoded) > 0
}

// #3663
// IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? shouldDecode('\n', '&#10;') : false;

/*  */

var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
});

function parseText (
  text,
  delimiters
) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return
  }
  var tokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index;
  while ((match = tagRE.exec(text))) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      tokens.push(JSON.stringify(text.slice(lastIndex, index)));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push(("_s(" + exp + ")"));
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    tokens.push(JSON.stringify(text.slice(lastIndex)));
  }
  return tokens.join('+')
}

/*  */

function transformNode (el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if (process.env.NODE_ENV !== 'production' && staticClass) {
    var expression = parseText(staticClass, options.delimiters);
    if (expression) {
      warn(
        "class=\"" + staticClass + "\": " +
        'Interpolation inside attributes has been removed. ' +
        'Use v-bind or the colon shorthand instead. For example, ' +
        'instead of <div class="{{ val }}">, use <div :class="val">.'
      );
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData (el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + (el.staticClass) + ",";
  }
  if (el.classBinding) {
    data += "class:" + (el.classBinding) + ",";
  }
  return data
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData
};

/*  */

function transformNode$1 (el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (process.env.NODE_ENV !== 'production') {
      var expression = parseText(staticStyle, options.delimiters);
      if (expression) {
        warn(
          "style=\"" + staticStyle + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div style="{{ val }}">, use <div :style="val">.'
        );
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$1 (el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + (el.staticStyle) + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + (el.styleBinding) + "),";
  }
  return data
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$1
};

var modules$1 = [
  klass$1,
  style$1
];

/*  */

function text (el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
  }
}

/*  */

function html (el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
};

/*  */

var isUnaryTag = makeMap(
  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
  'link,meta,param,source,track,wbr'
);

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap(
  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
);

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap(
  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
  'title,tr,track'
);

/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

/*  */

var decoder;

var he = {
  decode: function decode (html) {
    decoder = decoder || document.createElement('div');
    decoder.innerHTML = html;
    return decoder.textContent
  }
};

/**
 * Not type-checking this file because it's mostly vendor code.
 */

/*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */

// Regular Expressions for parsing tags and attributes
var singleAttrIdentifier = /([^\s"'<>/=]+)/;
var singleAttrAssign = /(?:=)/;
var singleAttrValues = [
  // attr value double quotes
  /"([^"]*)"+/.source,
  // attr value, single quotes
  /'([^']*)'+/.source,
  // attr value, no quotes
  /([^\s"'=<>`]+)/.source
];
var attribute = new RegExp(
  '^\\s*' + singleAttrIdentifier.source +
  '(?:\\s*(' + singleAttrAssign.source + ')' +
  '\\s*(?:' + singleAttrValues.join('|') + '))?'
);

// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
var ncname = '[a-zA-Z_][\\w\\-\\.]*';
var qnameCapture = '((?:' + ncname + '\\:)?' + ncname + ')';
var startTagOpen = new RegExp('^<' + qnameCapture);
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp('^<\\/' + qnameCapture + '[^>]*>');
var doctype = /^<!DOCTYPE [^>]+>/i;
var comment = /^<!--/;
var conditionalComment = /^<!\[/;

var IS_REGEX_CAPTURING_BROKEN = false;
'x'.replace(/x(.)?/g, function (m, g) {
  IS_REGEX_CAPTURING_BROKEN = g === '';
});

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n'
};
var encodedAttr = /&(?:lt|gt|quot|amp);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;

// #5992
var isIgnoreNewlineTag = makeMap('pre,textarea', true);
var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };

function decodeAttr (value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) { return decodingMap[match]; })
}

function parseHTML (html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            if (options.shouldKeepComment) {
              options.comment(html.substring(4, commentEnd));
            }
            advance(commentEnd + 3);
            continue
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          if (shouldIgnoreFirstNewline(lastTag, html)) {
            advance(1);
          }
          continue
        }
      }

      var text = (void 0), rest = (void 0), next = (void 0);
      if (textEnd >= 0) {
        rest = html.slice(textEnd);
        while (
          !endTag.test(rest) &&
          !startTagOpen.test(rest) &&
          !comment.test(rest) &&
          !conditionalComment.test(rest)
        ) {
          // < in plain text, be forgiving and treat it as text
          next = rest.indexOf('<', 1);
          if (next < 0) { break }
          textEnd += next;
          rest = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
        advance(textEnd);
      }

      if (textEnd < 0) {
        text = html;
        html = '';
      }

      if (options.chars && text) {
        options.chars(text);
      }
    } else {
      var endTagLength = 0;
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text
            .replace(/<!--([\s\S]*?)-->/g, '$1')
            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (shouldIgnoreFirstNewline(stackedTag, text)) {
          text = text.slice(1);
        }
        if (options.chars) {
          options.chars(text);
        }
        return ''
      });
      index += html.length - rest$1.length;
      html = rest$1;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {
        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
      }
      break
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance (n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag () {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
        advance(attr[0].length);
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match
      }
    }
  }

  function handleStartTag (match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
        if (args[3] === '') { delete args[3]; }
        if (args[4] === '') { delete args[4]; }
        if (args[5] === '') { delete args[5]; }
      }
      var value = args[3] || args[4] || args[5] || '';
      attrs[i] = {
        name: args[1],
        value: decodeAttr(
          value,
          options.shouldDecodeNewlines
        )
      };
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag (tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) { start = index; }
    if (end == null) { end = index; }

    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
    }

    // Find the closest opened tag of the same type
    if (tagName) {
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if (process.env.NODE_ENV !== 'production' &&
          (i > pos || !tagName) &&
          options.warn
        ) {
          options.warn(
            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
          );
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:/;
var forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
var forIteratorRE = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;

var argRE = /:(.*)$/;
var bindRE = /^:|^v-bind:/;
var modifierRE = /\.[^.]+/g;

var decodeHTMLCached = cached(he.decode);

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;

/**
 * Convert HTML string to AST.
 */
function parse (
  template,
  options
) {
  warn$2 = options.warn || baseWarn;

  platformIsPreTag = options.isPreTag || no;
  platformMustUseProp = options.mustUseProp || no;
  platformGetTagNamespace = options.getTagNamespace || no;

  transforms = pluckModuleFunction(options.modules, 'transformNode');
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce (msg) {
    if (!warned) {
      warned = true;
      warn$2(msg);
    }
  }

  function endPre (element) {
    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    shouldKeepComment: options.comments,
    start: function start (tag, attrs, unary) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = {
        type: 1,
        tag: tag,
        attrsList: attrs,
        attrsMap: makeAttrsMap(attrs),
        parent: currentParent,
        children: []
      };
      if (ns) {
        element.ns = ns;
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
        process.env.NODE_ENV !== 'production' && warn$2(
          'Templates should only be responsible for mapping the state to the ' +
          'UI. Avoid placing tags with side-effects in your templates, such as ' +
          "<" + tag + ">" + ', as they will not be parsed.'
        );
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        preTransforms[i](element, options);
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else {
        processFor(element);
        processIf(element);
        processOnce(element);
        processKey(element);

        // determine whether this is a plain element after
        // removing structural attributes
        element.plain = !element.key && !attrs.length;

        processRef(element);
        processSlot(element);
        processComponent(element);
        for (var i$1 = 0; i$1 < transforms.length; i$1++) {
          transforms[i$1](element, options);
        }
        processAttrs(element);
      }

      function checkRootConstraints (el) {
        if (process.env.NODE_ENV !== 'production') {
          if (el.tag === 'slot' || el.tag === 'template') {
            warnOnce(
              "Cannot use <" + (el.tag) + "> as component root element because it may " +
              'contain multiple nodes.'
            );
          }
          if (el.attrsMap.hasOwnProperty('v-for')) {
            warnOnce(
              'Cannot use v-for on stateful component root element because ' +
              'it renders multiple elements.'
            );
          }
        }
      }

      // tree management
      if (!root) {
        root = element;
        checkRootConstraints(root);
      } else if (!stack.length) {
        // allow root elements with v-if, v-else-if and v-else
        if (root.if && (element.elseif || element.else)) {
          checkRootConstraints(element);
          addIfCondition(root, {
            exp: element.elseif,
            block: element
          });
        } else if (process.env.NODE_ENV !== 'production') {
          warnOnce(
            "Component template should contain exactly one root element. " +
            "If you are using v-if on multiple elements, " +
            "use v-else-if to chain them instead."
          );
        }
      }
      if (currentParent && !element.forbidden) {
        if (element.elseif || element.else) {
          processIfConditions(element, currentParent);
        } else if (element.slotScope) { // scoped slot
          currentParent.plain = false;
          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        } else {
          currentParent.children.push(element);
          element.parent = currentParent;
        }
      }
      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        endPre(element);
      }
      // apply post-transforms
      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {
        postTransforms[i$2](element, options);
      }
    },

    end: function end () {
      // remove trailing whitespace
      var element = stack[stack.length - 1];
      var lastNode = element.children[element.children.length - 1];
      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
        element.children.pop();
      }
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      endPre(element);
    },

    chars: function chars (text) {
      if (!currentParent) {
        if (process.env.NODE_ENV !== 'production') {
          if (text === template) {
            warnOnce(
              'Component template requires a root element, rather than just text.'
            );
          } else if ((text = text.trim())) {
            warnOnce(
              ("text \"" + text + "\" outside root element will be ignored.")
            );
          }
        }
        return
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE &&
        currentParent.tag === 'textarea' &&
        currentParent.attrsMap.placeholder === text
      ) {
        return
      }
      var children = currentParent.children;
      text = inPre || text.trim()
        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
        // only preserve whitespace if its not right after a starting tag
        : preserveWhitespace && children.length ? ' ' : '';
      if (text) {
        var expression;
        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {
          children.push({
            type: 2,
            expression: expression,
            text: text
          });
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          children.push({
            type: 3,
            text: text
          });
        }
      }
    },
    comment: function comment (text) {
      currentParent.children.push({
        type: 3,
        text: text,
        isComment: true
      });
    }
  });
  return root
}

function processPre (el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs (el) {
  var l = el.attrsList.length;
  if (l) {
    var attrs = el.attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      attrs[i] = {
        name: el.attrsList[i].name,
        value: JSON.stringify(el.attrsList[i].value)
      };
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processKey (el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {
      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
    }
    el.key = exp;
  }
}

function processRef (el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor (el) {
  var exp;
  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
    var inMatch = exp.match(forAliasRE);
    if (!inMatch) {
      process.env.NODE_ENV !== 'production' && warn$2(
        ("Invalid v-for expression: " + exp)
      );
      return
    }
    el.for = inMatch[2].trim();
    var alias = inMatch[1].trim();
    var iteratorMatch = alias.match(forIteratorRE);
    if (iteratorMatch) {
      el.alias = iteratorMatch[1].trim();
      el.iterator1 = iteratorMatch[2].trim();
      if (iteratorMatch[3]) {
        el.iterator2 = iteratorMatch[3].trim();
      }
    } else {
      el.alias = alias;
    }
  }
}

function processIf (el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions (el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (process.env.NODE_ENV !== 'production') {
    warn$2(
      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
      "used on element <" + (el.tag) + "> without corresponding v-if."
    );
  }
}

function findPrevElement (children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i]
    } else {
      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {
        warn$2(
          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
          "will be ignored."
        );
      }
      children.pop();
    }
  }
}

function addIfCondition (el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce (el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

function processSlot (el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if (process.env.NODE_ENV !== 'production' && el.key) {
      warn$2(
        "`key` does not work on <slot> because slots are abstract outlets " +
        "and can possibly expand into multiple elements. " +
        "Use the key on a wrapping element instead."
      );
    }
  } else {
    var slotTarget = getBindingAttr(el, 'slot');
    if (slotTarget) {
      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
    }
    if (el.tag === 'template') {
      el.slotScope = getAndRemoveAttr(el, 'scope');
    }
  }
}

function processComponent (el) {
  var binding;
  if ((binding = getBindingAttr(el, 'is'))) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs (el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, isProp;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name);
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) { // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isProp = false;
        if (modifiers) {
          if (modifiers.prop) {
            isProp = true;
            name = camelize(name);
            if (name === 'innerHtml') { name = 'innerHTML'; }
          }
          if (modifiers.camel) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            addHandler(
              el,
              ("update:" + (camelize(name))),
              genAssignmentCode(value, "$event")
            );
          }
        }
        if (isProp || (
          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
        )) {
          addProp(el, name, value);
        } else {
          addAttr(el, name, value);
        }
      } else if (onRE.test(name)) { // v-on
        name = name.replace(onRE, '');
        addHandler(el, name, value, modifiers, false, warn$2);
      } else { // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
        }
        addDirective(el, name, rawName, value, arg, modifiers);
        if (process.env.NODE_ENV !== 'production' && name === 'model') {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (process.env.NODE_ENV !== 'production') {
        var expression = parseText(value, delimiters);
        if (expression) {
          warn$2(
            name + "=\"" + value + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div id="{{ val }}">, use <div :id="val">.'
          );
        }
      }
      addAttr(el, name, JSON.stringify(value));
    }
  }
}

function checkInFor (el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true
    }
    parent = parent.parent;
  }
  return false
}

function parseModifiers (name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) { ret[m.slice(1)] = true; });
    return ret
  }
}

function makeAttrsMap (attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (
      process.env.NODE_ENV !== 'production' &&
      map[attrs[i].name] && !isIE && !isEdge
    ) {
      warn$2('duplicate attribute: ' + attrs[i].name);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag (el) {
  return el.tag === 'script' || el.tag === 'style'
}

function isForbiddenTag (el) {
  return (
    el.tag === 'style' ||
    (el.tag === 'script' && (
      !el.attrsMap.type ||
      el.attrsMap.type === 'text/javascript'
    ))
  )
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug (attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res
}

function checkForAliasModel (el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "You are binding v-model directly to a v-for iteration alias. " +
        "This will not be able to modify the v-for source array because " +
        "writing to the alias is like modifying a function local variable. " +
        "Consider using an array of objects and use v-model on an object property instead."
      );
    }
    _el = _el.parent;
  }
}

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize (root, options) {
  if (!root) { return }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1 (keys) {
  return makeMap(
    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
    (keys ? ',' + keys : '')
  )
}

function markStatic$1 (node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (
      !isPlatformReservedTag(node.tag) &&
      node.tag !== 'slot' &&
      node.attrsMap['inline-template'] == null
    ) {
      return
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        var block = node.ifConditions[i$1].block;
        markStatic$1(block);
        if (!block.static) {
          node.static = false;
        }
      }
    }
  }
}

function markStaticRoots (node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(
      node.children.length === 1 &&
      node.children[0].type === 3
    )) {
      node.staticRoot = true;
      return
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        markStaticRoots(node.ifConditions[i$1].block, isInFor);
      }
    }
  }
}

function isStatic (node) {
  if (node.type === 2) { // expression
    return false
  }
  if (node.type === 3) { // text
    return true
  }
  return !!(node.pre || (
    !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) &&
    Object.keys(node).every(isStaticKey)
  ))
}

function isDirectChildOfTemplateFor (node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false
    }
    if (node.for) {
      return true
    }
  }
  return false
}

/*  */

var fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
var simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;

// keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers (
  events,
  isNative,
  warn
) {
  var res = isNative ? 'nativeOn:{' : 'on:{';
  for (var name in events) {
    var handler = events[name];
    // #5330: warn click.right, since right clicks do not actually fire click events.
    if (process.env.NODE_ENV !== 'production' &&
      name === 'click' &&
      handler && handler.modifiers && handler.modifiers.right
    ) {
      warn(
        "Use \"contextmenu\" instead of \"click.right\" since right clicks " +
        "do not actually fire \"click\" events."
      );
    }
    res += "\"" + name + "\":" + (genHandler(name, handler)) + ",";
  }
  return res.slice(0, -1) + '}'
}

function genHandler (
  name,
  handler
) {
  if (!handler) {
    return 'function(){}'
  }

  if (Array.isArray(handler)) {
    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);

  if (!handler.modifiers) {
    return isMethodPath || isFunctionExpression
      ? handler.value
      : ("function($event){" + (handler.value) + "}") // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath
      ? handler.value + '($event)'
      : isFunctionExpression
        ? ("(" + (handler.value) + ")($event)")
        : handler.value;
    return ("function($event){" + code + handlerCode + "}")
  }
}

function genKeyFilter (keys) {
  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
}

function genFilterCode (key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return ("$event.keyCode!==" + keyVal)
  }
  var alias = keyCodes[key];
  return ("_k($event.keyCode," + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + ")")
}

/*  */

function on (el, dir) {
  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {
    warn("v-on without argument does not support modifiers.");
  }
  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
}

/*  */

function bind$1 (el, dir) {
  el.wrapData = function (code) {
    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
  };
}

/*  */

var baseDirectives = {
  on: on,
  bind: bind$1,
  cloak: noop
};

/*  */

var CodegenState = function CodegenState (options) {
  this.options = options;
  this.warn = options.warn || baseWarn;
  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
  this.directives = extend(extend({}, baseDirectives), options.directives);
  var isReservedTag = options.isReservedTag || no;
  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };
  this.onceId = 0;
  this.staticRenderFns = [];
};



function generate (
  ast,
  options
) {
  var state = new CodegenState(options);
  var code = ast ? genElement(ast, state) : '_c("div")';
  return {
    render: ("with(this){return " + code + "}"),
    staticRenderFns: state.staticRenderFns
  }
}

function genElement (el, state) {
  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el, state)
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el, state)
  } else if (el.for && !el.forProcessed) {
    return genFor(el, state)
  } else if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.tag === 'template' && !el.slotTarget) {
    return genChildren(el, state) || 'void 0'
  } else if (el.tag === 'slot') {
    return genSlot(el, state)
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el, state);
    } else {
      var data = el.plain ? undefined : genData$2(el, state);

      var children = el.inlineTemplate ? null : genChildren(el, state, true);
      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
    }
    // module transforms
    for (var i = 0; i < state.transforms.length; i++) {
      code = state.transforms[i](el, code);
    }
    return code
  }
}

// hoist static sub-trees out
function genStatic (el, state) {
  el.staticProcessed = true;
  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
}

// v-once
function genOnce (el, state) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break
      }
      parent = parent.parent;
    }
    if (!key) {
      process.env.NODE_ENV !== 'production' && state.warn(
        "v-once can only be used inside v-for that is keyed. "
      );
      return genElement(el, state)
    }
    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + (key ? ("," + key) : "") + ")")
  } else {
    return genStatic(el, state)
  }
}

function genIf (
  el,
  state,
  altGen,
  altEmpty
) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
}

function genIfConditions (
  conditions,
  state,
  altGen,
  altEmpty
) {
  if (!conditions.length) {
    return altEmpty || '_e()'
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
  } else {
    return ("" + (genTernaryExp(condition.block)))
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp (el) {
    return altGen
      ? altGen(el, state)
      : el.once
        ? genOnce(el, state)
        : genElement(el, state)
  }
}

function genFor (
  el,
  state,
  altGen,
  altHelper
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

  if (process.env.NODE_ENV !== 'production' &&
    state.maybeComponent(el) &&
    el.tag !== 'slot' &&
    el.tag !== 'template' &&
    !el.key
  ) {
    state.warn(
      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
      "v-for should have explicit keys. " +
      "See https://vuejs.org/guide/list.html#key for more info.",
      true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return (altHelper || '_l') + "((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + ((altGen || genElement)(el, state)) +
    '})'
}

function genData$2 (el, state) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el, state);
  if (dirs) { data += dirs + ','; }

  // key
  if (el.key) {
    data += "key:" + (el.key) + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + (el.ref) + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + (el.tag) + "\",";
  }
  // module data generation functions
  for (var i = 0; i < state.dataGenFns.length; i++) {
    data += state.dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:{" + (genProps(el.attrs)) + "},";
  }
  // DOM props
  if (el.props) {
    data += "domProps:{" + (genProps(el.props)) + "},";
  }
  // event handlers
  if (el.events) {
    data += (genHandlers(el.events, false, state.warn)) + ",";
  }
  if (el.nativeEvents) {
    data += (genHandlers(el.nativeEvents, true, state.warn)) + ",";
  }
  // slot target
  if (el.slotTarget) {
    data += "slot:" + (el.slotTarget) + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += (genScopedSlots(el.scopedSlots, state)) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el, state);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  // v-on data wrap
  if (el.wrapListeners) {
    data = el.wrapListeners(data);
  }
  return data
}

function genDirectives (el, state) {
  var dirs = el.directives;
  if (!dirs) { return }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = state.directives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, state.warn);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']'
  }
}

function genInlineTemplate (el, state) {
  var ast = el.children[0];
  if (process.env.NODE_ENV !== 'production' && (
    el.children.length > 1 || ast.type !== 1
  )) {
    state.warn('Inline-template components must have exactly one child element.');
  }
  if (ast.type === 1) {
    var inlineRenderFns = generate(ast, state.options);
    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
  }
}

function genScopedSlots (
  slots,
  state
) {
  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) {
      return genScopedSlot(key, slots[key], state)
    }).join(',')) + "])")
}

function genScopedSlot (
  key,
  el,
  state
) {
  if (el.for && !el.forProcessed) {
    return genForScopedSlot(key, el, state)
  }
  return "{key:" + key + ",fn:function(" + (String(el.attrsMap.scope)) + "){" +
    "return " + (el.tag === 'template'
      ? genChildren(el, state) || 'void 0'
      : genElement(el, state)) + "}}"
}

function genForScopedSlot (
  key,
  el,
  state
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
  el.forProcessed = true; // avoid recursion
  return "_l((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + (genScopedSlot(key, el, state)) +
    '})'
}

function genChildren (
  el,
  state,
  checkSkip,
  altGenElement,
  altGenNode
) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 &&
      el$1.for &&
      el$1.tag !== 'template' &&
      el$1.tag !== 'slot'
    ) {
      return (altGenElement || genElement)(el$1, state)
    }
    var normalizationType = checkSkip
      ? getNormalizationType(children, state.maybeComponent)
      : 0;
    var gen = altGenNode || genNode;
    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType (
  children,
  maybeComponent
) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue
    }
    if (needsNormalization(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
      res = 2;
      break
    }
    if (maybeComponent(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
      res = 1;
    }
  }
  return res
}

function needsNormalization (el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
}

function genNode (node, state) {
  if (node.type === 1) {
    return genElement(node, state)
  } if (node.type === 3 && node.isComment) {
    return genComment(node)
  } else {
    return genText(node)
  }
}

function genText (text) {
  return ("_v(" + (text.type === 2
    ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
}

function genComment (comment) {
  return ("_e(" + (JSON.stringify(comment.text)) + ")")
}

function genSlot (el, state) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el, state);
  var res = "_t(" + slotName + (children ? ("," + children) : '');
  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')'
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent (
  componentName,
  el,
  state
) {
  var children = el.inlineTemplate ? null : genChildren(el, state, true);
  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
}

function genProps (props) {
  var res = '';
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
  }
  return res.slice(0, -1)
}

// #3895, #4268
function transformSpecialNewlines (text) {
  return text
    .replace(/\u2028/g, '\\u2028')
    .replace(/\u2029/g, '\\u2029')
}

/*  */

// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + (
  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
  'super,throw,while,yield,delete,export,import,return,switch,default,' +
  'extends,finally,continue,debugger,function,arguments'
).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + (
  'delete,typeof,void'
).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// check valid identifier for v-for
var identRE = /[A-Za-z_$][\w$]*/;

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors (ast) {
  var errors = [];
  if (ast) {
    checkNode(ast, errors);
  }
  return errors
}

function checkNode (node, errors) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          if (name === 'v-for') {
            checkFor(node, ("v-for=\"" + value + "\""), errors);
          } else if (onRE.test(name)) {
            checkEvent(value, (name + "=\"" + value + "\""), errors);
          } else {
            checkExpression(value, (name + "=\"" + value + "\""), errors);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], errors);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, errors);
  }
}

function checkEvent (exp, text, errors) {
  var stipped = exp.replace(stripStringRE, '');
  var keywordMatch = stipped.match(unaryOperatorsRE);
  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
    errors.push(
      "avoid using JavaScript unary operator as property name: " +
      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
    );
  }
  checkExpression(exp, text, errors);
}

function checkFor (node, text, errors) {
  checkExpression(node.for || '', text, errors);
  checkIdentifier(node.alias, 'v-for alias', text, errors);
  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
}

function checkIdentifier (ident, type, text, errors) {
  if (typeof ident === 'string' && !identRE.test(ident)) {
    errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
  }
}

function checkExpression (exp, text, errors) {
  try {
    new Function(("return " + exp));
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      errors.push(
        "avoid using JavaScript keyword as property name: " +
        "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
      );
    } else {
      errors.push(("invalid expression: " + (text.trim())));
    }
  }
}

/*  */

function createFunction (code, errors) {
  try {
    return new Function(code)
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop
  }
}

function createCompileToFunctionFn (compile) {
  var cache = Object.create(null);

  return function compileToFunctions (
    template,
    options,
    vm
  ) {
    options = options || {};

    /* istanbul ignore if */
    if (process.env.NODE_ENV !== 'production') {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn(
            'It seems you are using the standalone build of Vue.js in an ' +
            'environment with Content Security Policy that prohibits unsafe-eval. ' +
            'The template compiler cannot work in this environment. Consider ' +
            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
            'templates into render functions.'
          );
        }
      }
    }

    // check cache
    var key = options.delimiters
      ? String(options.delimiters) + template
      : template;
    if (cache[key]) {
      return cache[key]
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (process.env.NODE_ENV !== 'production') {
      if (compiled.errors && compiled.errors.length) {
        warn(
          "Error compiling template:\n\n" + template + "\n\n" +
          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
          vm
        );
      }
      if (compiled.tips && compiled.tips.length) {
        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = createFunction(compiled.render, fnGenErrors);
    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
      return createFunction(code, fnGenErrors)
    });

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (process.env.NODE_ENV !== 'production') {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn(
          "Failed to generate render function:\n\n" +
          fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return ((err.toString()) + " in\n\n" + code + "\n");
        }).join('\n'),
          vm
        );
      }
    }

    return (cache[key] = res)
  }
}

/*  */

function createCompilerCreator (baseCompile) {
  return function createCompiler (baseOptions) {
    function compile (
      template,
      options
    ) {
      var finalOptions = Object.create(baseOptions);
      var errors = [];
      var tips = [];
      finalOptions.warn = function (msg, tip) {
        (tip ? tips : errors).push(msg);
      };

      if (options) {
        // merge custom modules
        if (options.modules) {
          finalOptions.modules =
            (baseOptions.modules || []).concat(options.modules);
        }
        // merge custom directives
        if (options.directives) {
          finalOptions.directives = extend(
            Object.create(baseOptions.directives),
            options.directives
          );
        }
        // copy other options
        for (var key in options) {
          if (key !== 'modules' && key !== 'directives') {
            finalOptions[key] = options[key];
          }
        }
      }

      var compiled = baseCompile(template, finalOptions);
      if (process.env.NODE_ENV !== 'production') {
        errors.push.apply(errors, detectErrors(compiled.ast));
      }
      compiled.errors = errors;
      compiled.tips = tips;
      return compiled
    }

    return {
      compile: compile,
      compileToFunctions: createCompileToFunctionFn(compile)
    }
  }
}

/*  */

// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
var createCompiler = createCompilerCreator(function baseCompile (
  template,
  options
) {
  var ast = parse(template.trim(), options);
  optimize(ast, options);
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  }
});

/*  */

var ref$1 = createCompiler(baseOptions);
var compileToFunctions = ref$1.compileToFunctions;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML
});

var mount = Vue$3.prototype.$mount;
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
    process.env.NODE_ENV !== 'production' && warn(
      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
    );
    return this
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if (process.env.NODE_ENV !== 'production' && !template) {
            warn(
              ("Template element not found or is empty: " + (options.template)),
              this
            );
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (process.env.NODE_ENV !== 'production') {
          warn('invalid template option:' + template, this);
        }
        return this
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        shouldDecodeNewlines: shouldDecodeNewlines,
        delimiters: options.delimiters,
        comments: options.comments
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
        mark('compile end');
        measure(((this._name) + " compile"), 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating)
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML (el) {
  if (el.outerHTML) {
    return el.outerHTML
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML
  }
}

Vue$3.compile = compileToFunctions;

module.exports = Vue$3;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(311), __webpack_require__(49)))

/***/ }),
/* 311 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(119);
__webpack_require__(120);
__webpack_require__(303);
module.exports = __webpack_require__(313);


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var _require = __webpack_require__(304),
    Transform = _require.Transform,
    CanvasPlotter = _require.CanvasPlotter,
    SchPlotter = _require.SchPlotter,
    Lib = _require.Lib;

var Vue = __webpack_require__(310);

var app = new Vue({
	el: '#app',
	data: {
		url: "https://raw.githubusercontent.com/KiCad/kicad-library/master/library/device.lib",
		fileName: "",
		status: "init",
		lib: {},
		components: []
	},

	created: function created() {
		if (location.search) {
			var params = new URLSearchParams(location.search);
			if (params.has('url')) {
				this.url = params.get('url');
			}
		}
	},

	mounted: function mounted() {
		console.log(this.$refs);
		this.onSubmit();
	},

	methods: {
		fileSelected: function fileSelected() {
			var file = this.$refs.fileInput.files[0];
			this.fileName = file.name;
			var objectURL = window.URL.createObjectURL(file);
			this.loadLibrary(objectURL);
		},

		onSubmit: function onSubmit() {
			var _this = this;

			var url = this.url;
			if (!url) {
				this.status = "url is required";
				return;
			}
			var params = new URLSearchParams();
			params.set('url', this.url);
			history.pushState(null, '', '?' + params);
			this.loadLibrary(url).catch(function (e) {
				_this.status = e;
			});
		},

		loadLibrary: function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(url) {
				var res, text, lib, canvasElements, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, canvas, name, component, rect, PADDING, width, height, scale, ctx, plotter, schPlotter;

				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								this.status = "loading";
								console.log('loadLibrary');
								_context.next = 4;
								return fetch(url);

							case 4:
								res = _context.sent;
								_context.next = 7;
								return res.text();

							case 7:
								text = _context.sent;

								this.status = "parsing";
								lib = Lib.Library.load(text);

								this.lib = lib;
								this.components = lib.components;
								_context.next = 14;
								return Vue.nextTick();

							case 14:
								this.status = "rendering";
								console.log(this.$refs);
								canvasElements = this.$refs.canvas;
								_iteratorNormalCompletion = true;
								_didIteratorError = false;
								_iteratorError = undefined;
								_context.prev = 20;
								_iterator = canvasElements[Symbol.iterator]();

							case 22:
								if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
									_context.next = 46;
									break;
								}

								canvas = _step.value;
								name = canvas.getAttribute('data-name');
								component = lib.findByName(name);
								rect = component.draw.getBoundingRect();

								if (rect) {
									_context.next = 29;
									break;
								}

								return _context.abrupt("return", "data:");

							case 29:
								PADDING = 500;
								width = rect.width + PADDING, height = rect.height + PADDING;


								canvas.width = 500;
								canvas.height = 500;

								scale = Math.min(canvas.width / width, canvas.height / height);
								// console.log('plot', component.name, rect, width, height, scale);

								ctx = canvas.getContext('2d');

								ctx.translate(canvas.width / 2, canvas.height / 2);
								ctx.scale(scale, scale);
								ctx.stokeStyle = '#000';
								ctx.fillStyle = '#000';

								plotter = new CanvasPlotter(ctx);
								schPlotter = new SchPlotter(plotter);

								schPlotter.plotLibComponent(component, 1, 1, new Transform());
								schPlotter.plotLibComponentField(component, 1, 1, new Transform());

							case 43:
								_iteratorNormalCompletion = true;
								_context.next = 22;
								break;

							case 46:
								_context.next = 52;
								break;

							case 48:
								_context.prev = 48;
								_context.t0 = _context["catch"](20);
								_didIteratorError = true;
								_iteratorError = _context.t0;

							case 52:
								_context.prev = 52;
								_context.prev = 53;

								if (!_iteratorNormalCompletion && _iterator.return) {
									_iterator.return();
								}

							case 55:
								_context.prev = 55;

								if (!_didIteratorError) {
									_context.next = 58;
									break;
								}

								throw _iteratorError;

							case 58:
								return _context.finish(55);

							case 59:
								return _context.finish(52);

							case 60:
								this.status = "done";

							case 61:
							case "end":
								return _context.stop();
						}
					}
				}, _callee, this, [[20, 48, 52, 60], [53,, 55, 59]]);
			}));

			function loadLibrary(_x) {
				return _ref.apply(this, arguments);
			}

			return loadLibrary;
		}()
	}
});

/***/ })
/******/ ]);
//# sourceMappingURL=library.bundle.js.map